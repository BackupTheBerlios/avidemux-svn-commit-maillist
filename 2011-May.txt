From mean at mail.berlios.de  Sun May  1 08:09:18 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Sun,  1 May 2011 08:09:18 +0200
Subject: [Avidemux-svn-commit] r7175 -
	branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/include
Message-ID: <20110501060918.BA1F248129E@sheep.berlios.de>

Author: mean
Date: 2011-05-01 08:09:18 +0200 (Sun, 01 May 2011)
New Revision: 7175

Added:
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/include/prefs2_list.h
Log:
[pref] Add forgotten file

Added: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/include/prefs2_list.h
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/include/prefs2_list.h	                        (rev 0)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/include/prefs2_list.h	2011-05-01 06:09:18 UTC (rev 7175)
@@ -0,0 +1,29 @@
+FEATURES_SWAP_IF_A_GREATER_THAN_B, 	//bool
+FEATURES_SAVEPREFSONEXIT, 	//bool
+FEATURES_IGNORESAVEDMARKERS, 	//bool
+FEATURES_USE_ODML, 	//bool
+FEATURES_USE_SYSTRAY, 	//bool
+FEATURES_REUSE_2PASS_LOG, 	//bool
+FEATURES_AUDIOBAR_USES_MASTER, 	//bool
+FEATURES_THREADING_LAVC, 	//uint32_t
+FEATURES_CPU_CAPS, 	//uint32_t
+FEATURES_MPEG_NO_LIMIT, 	//bool
+FEATURES_ALTERNATE_MP3_TAG, 	//bool
+FEATURES_VDPAU, 	//bool
+LASTFILES_LASTDIR_READ, 	//string
+LASTFILES_LASTDIR_WRITE, 	//string
+LASTFILES_FILE1, 	//string
+LASTFILES_FILE2, 	//string
+LASTFILES_FILE3, 	//string
+LASTFILES_FILE4, 	//string
+MESSAGE_LEVEL, 	//uint32_t
+AUDIO_DEVICE_AUDIODEVICE, 	//string
+AUDIO_DEVICE_ALSA_DEVICE, 	//string
+VIDEODEVICE, 	//uint32_t
+PRIORITY_ENCODING, 	//uint32_t
+PRIORITY_INDEXING, 	//uint32_t
+PRIORITY_PLAYBACK, 	//uint32_t
+DEFAULT_POSTPROC_TYPE, 	//uint32_t
+DEFAULT_POSTPROC_VALUE, 	//uint32_t
+DEFAULT_DOWNMIXING, 	//uint32_t
+MPEGSPLIT_AUTOSPLIT, 	//uint32_t



From mean at mail.berlios.de  Sun May  1 10:11:40 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Sun,  1 May 2011 10:11:40 +0200
Subject: [Avidemux-svn-commit] r7176 -
	branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src
Message-ID: <20110501081140.7C10948129E@sheep.berlios.de>

Author: mean
Date: 2011-05-01 10:11:40 +0200 (Sun, 01 May 2011)
New Revision: 7176

Removed:
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/prefs.in
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/prefs_gen.pl
Log:
[pref] Remove old prefs helpers

Deleted: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/prefs.in
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/prefs.in	2011-05-01 06:09:18 UTC (rev 7175)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/prefs.in	2011-05-01 08:11:40 UTC (rev 7176)
@@ -1,86 +0,0 @@
-#
-# this file will be used as input for pref.h and pref.cpp
-#
-
-# option_name :: name without '-'; the dot is the separator used for the xml tree
-#		 '.' will be changed to '_'
-#		 all letters will be changed to there upper case equivalents
-# type        :: ( UINT | INT | ULONG | LONG | FLOAT | STRING )
-# value       :: default value; used if no xml value available
-# minimum     :: the smallest value this option can have (ignored for STRING)
-# maximum     :: the largest  value this option can have (ignored for STRING)
-
-# option name				type	value	minimum	maximum (incl.)
-codecs.xvid.enctype,			UINT,	0,	0,	99999
-codecs.xvid.quantizer,			UINT,	4,	2,	32
-codecs.xvid.bitrate,			UINT,	1500000,17,	5900000
-codecs.xvid.finalsize,			UINT,	700,	0,	3999
-codecs.preferredcodec,			STRING,	FFmpeg4
-filters.subtitle.fontname,		FILENAME, "/usr/share/fonts/truetype/DejaVuSans.ttf"
-filters.subtitle.charset,		STRING, "ISO-8859-1"
-filters.subtitle.fontsize,		UINT,	24,	1,	576
-filters.subtitle.ypercent,		INT,	255,	0,	255
-filters.subtitle.upercent,		INT,	0,	0,	255
-filters.subtitle.vpercent,		INT,	0,	0,	255
-filters.subtitle.selfadjustable,	UINT,	0,	0,	1
-filters.subtitle.usebackgroundcolor,	UINT,	0,	0,	1
-filters.avsfilter.avs_script,		FILENAME,	""
-filters.avsfilter.avs_loader,		FILENAME,	""
-filters.avsfilter.pipe_timeout,		UINT,	10,     1,       30
-filters.avsfilter.debug_msg,		UINT,	1,      0,       1
-# codec metasettings for mpeg2enc based
-settings.mpegsplit, 			UINT,	790,	400,	5000
-device.audiodevice,			STRING,	ALSA
-device.audio.alsa_device,               STRING, "dmix"
-device.videodevice,			UINT,	0,	0,	10
-# Posproc
-default.postproc_type,			UINT,	3,	0,	7
-default.postproc_value,			UINT,	3,	0,	5
-# lastfiles
-lastfiles.file1,			FILENAME,	""
-lastfiles.file2,			FILENAME,	""
-lastfiles.file3,			FILENAME,	""
-lastfiles.file4,			FILENAME,	""
-lastdir_read,				FILENAME,	""
-lastdir_write,				FILENAME,	""
-# lame
-lame_cli,				STRING, ""
-pipe_cmd,				STRING, ""
-pipe_param,				STRING, ""
-lame_path,				STRING, ""
-toolame_path,				STRING, ""
-lvemux_path,				STRING, ""
-requant_path,				STRING, ""
-# 0 - no messages, 1 - only error messages, 2 - all messages
-message_level,				UINT,	2,	0,	2
-# feature
-feature.swap_if_A_greater_than_B,	UINT,   1,      0,      1
-feature.svcdres.preferedsourceratio,	STRING, "1:1"
-feature.saveprefsonexit,		UINT,	1,	0,	1
-feature.ignoresavedmarkers,		UINT,	0,	0,	1
-feature.disable_nuv_resync,		UINT,	0,	0,	1
-feature.tryautoidx,			UINT,	0,	0,	1
-feature.use_odml,                       UINT,   0,      0,      1
-feature.use_systray,                    UINT,   0,      0,      1
-feature.reuse_2pass_log,                UINT,   0,      0,      1
-feature.audiobar_uses_master,           UINT,   0,      0,      1
-feature.threading.lavc,                 UINT,   0,      0,      32
-feature.cpu_caps,  		                UINT,   4294967295,      0,      4294967295
-feature.mpeg_no_limit,                  UINT,   0,      0,      1
-feature.auto_buildmap,                  UINT,   0,      0,      1
-feature.auto_rebuildindex,              UINT,   0,      0,      1
-feature.auto_unpack,                    UINT,   0,      0,      1
-# prologic 1/2
-downmixing.prologic,			UINT,	2,	0,	2
-filters.autoload.path,                  STRING, "/tmp/"
-filters.autoload.active,                UINT,   0,      0,      1
-feature.alternate_mp3_tag,              UINT,   1,      0,      1
-#
-feature.vdpau,                          UINT,   0,      0,      1
-# Global glyphset file
-feature.global_glyph.active,            UINT,   1,      0,      1
-feature.global_glyph.name,              STRING, ""
-# priority
-priority.encoding,          UINT,   3,      0,      4
-priority.indexing,          UINT,   3,      0,      4
-priority.playback,          UINT,   0,      0,      4

Deleted: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/prefs_gen.pl
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/prefs_gen.pl	2011-05-01 06:09:18 UTC (rev 7175)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/prefs_gen.pl	2011-05-01 08:11:40 UTC (rev 7176)
@@ -1,130 +0,0 @@
-#!/usr/bin/perl
-
-use strict;
-use IO::Handle;
-
-my $srcdir=".";
-my $in  = "$srcdir/prefs.in";
-my $h   = "$srcdir/../include/prefs.h";
-my $cpp = "$srcdir/prefs.cpp";
-#print "In:$in\n";
-my $h_str = "typedef enum {\n";
-my $cpp_str = "typedef enum {\n".
-              "\tADM_UINT,\n".
-              "\tADM_INT,\n".
-              "\tADM_ULONG,\n".
-              "\tADM_LONG,\n".
-              "\tADM_FLOAT,\n".
-              "\tADM_STRING,\n".
-              "\tADM_FILENAME\n".
-              "} types;\n".
-              "\n".
-              "typedef struct {\n".
-              "\tconst char *name;\n".
-              "\ttypes type;\n".
-              "\tconst char *default_val;\n".
-              "\tchar *current_val;\n".
-              "\tconst char *minimum;\n".
-              "\tconst char *maximum;\n".
-              "} opt_def;\n".
-              "\n".
-              "static opt_def opt_defs [] = {\n";
-
-my $fd = new IO::Handle;
-my @data;
-my $flag;
-my $num_opts = 0;
-
-open($fd,"< $in") or die;
-while(<$fd>){
-	chomp;
-	s/#.*$//;
-	next if( /^[ 	]*$/ );
-	#     optname       type           value  rest
-        if( /^([^,]+)\s*,\s*([A-Z]+)\s*,\s*([^,]+)(.*)$/ ){
-	   my ($N,$a,$b,$c,$d,$e) = ($1,uc($1),$2,$3,$4,$4);
-		$a       =~ s/\./_/g;
-		$h_str   .= "\t$a,\n";
-		$cpp_str .= "\t{\"$N\",";
-		$cpp_str .= "\t" if( length($c)%8 != 3 );
-		$cpp_str .= "\tADM_".$b.",";
-		if(( $b eq "STRING" )||($b eq "FILENAME")){
-			$c =~ s/^"//;
-			$c =~ s/"$//;
-                        $c =~ s/@/,/; # Replace % by , needed by alsa stuff
-
-		}else{
-			$cpp_str .= "\t";
-		}
-		$cpp_str .= "\"$c\",";
-		$cpp_str .= "\t" if( length($c) < 5 );
-		$cpp_str .= "NULL,";
-		# max min processing
-		if(( $b eq "STRING" )||($b eq "FILENAME")){
-			$cpp_str .= " NULL, NULL },\n";
-		}else{
-			$d =~ s/^\s*,\s*//;
-			($d,$e) = split(",",$d);                        
-			$d =~ s/\s*$//;
-			$e =~ s/^\s*//;
-			$e =~ s/\s*$//;
-			$cpp_str .= "\t\"$d\",";
-			$cpp_str .= "\t" if( length($d) < 5 );
-			$cpp_str .= "\"$e\"";
-			$cpp_str .= "\t" if( length($e) < 5 );
-			$cpp_str .= "},\n";
-			die "value($a) < min : $c < $d\n" if( $c < $d );
-		}
-		$num_opts++;
-	}else{
-		die "parse error in \"$in\" line \"$_\".";
-	}
-}
-close($fd);
-
-$h_str    = substr($h_str,0,-2); # strip out ",\n"
-$h_str   .= "\n} options;\n";
-$cpp_str  = substr($cpp_str,0,-2); # strip out ",\n"
-$cpp_str .= "\n};\n\nint num_opts = $num_opts;\n";
-
- at data = ();
-$flag = 0;
-open($fd,"< $h") or die;
-while(<$fd>){
-	if( /^\/\/ <\/prefs_gen>/ ){
-		$flag = 2;
-	}
-	if( $flag == 0 || $flag == 2 ){
-		push @data,$_;
-	}
-	if( /^\/\/ <prefs_gen>/ ){
-		$flag = 1;
-		push @data,$h_str;
-	}
-}
-close($fd);
-open($fd,"> $h") or die;
-print $fd join("", at data);
-close($fd);
-
- at data = ();
-$flag = 0;
-open($fd,"< $cpp") or die($cpp);
-while(<$fd>){
-        if( /^\/\/ <\/prefs_gen>/ ){
-                $flag = 2;
-        }
-        if( $flag == 0 || $flag == 2 ){
-                push @data,$_;
-        }
-        if( /^\/\/ <prefs_gen>/ ){
-                $flag = 1;
-                push @data,$cpp_str;
-        }
-}
-close($fd);
-open($fd,"> $cpp") or die;
-print $fd join("", at data);
-close($fd);
-
-exit(0);



From mean at mail.berlios.de  Sun May  1 10:11:43 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Sun,  1 May 2011 10:11:43 +0200
Subject: [Avidemux-svn-commit] r7177 - in
	branches/avidemux_2.6_branch_mean/avidemux_plugins:
	ADM_audioEncoders/lame ADM_muxers/muxerMkv
	ADM_muxers/muxerMp4 ADM_muxers/muxerMp4v2
	ADM_muxers/muxerffPS ADM_videoEncoder/ffMpeg2
	ADM_videoEncoder/x264 ADM_videoEncoder/xvid4
	ADM_videoFilters6/colorYUV ADM_videoFilters6/fastConvolution
	ADM_videoFilters6/kernelDeint ADM_videoFilters6/largeMedian
	ADM_videoFilters6/lavDeint ADM_videoFilters6/vdpauFilters
Message-ID: <20110501081143.2D7B348129E@sheep.berlios.de>

Author: mean
Date: 2011-05-01 10:11:42 +0200 (Sun, 01 May 2011)
New Revision: 7177

Modified:
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_audioEncoders/lame/audioencoder_lame.cpp
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_muxers/muxerMkv/muxerMkvConfig.cpp
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_muxers/muxerMp4/muxerMP4Config.cpp
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_muxers/muxerMp4v2/muxerMp4v2Config.cpp
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_muxers/muxerffPS/muxerffPSConfig.cpp
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/ffMpeg2/ADM_ffMpeg2.cpp
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/CMakeLists.txt
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/x264_encoder_json.cpp
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/xvid4/xvid4Dialog.cpp
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoFilters6/colorYUV/colorYuv.conf
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoFilters6/colorYUV/colorYuv.h
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoFilters6/colorYUV/colorYuv_desc.cpp
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoFilters6/fastConvolution/ADM_vidFastConvolution.cpp
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoFilters6/fastConvolution/convolution.conf
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoFilters6/fastConvolution/convolution.h
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoFilters6/fastConvolution/convolution_desc.cpp
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoFilters6/kernelDeint/kdeint.conf
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoFilters6/kernelDeint/kdeint.h
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoFilters6/kernelDeint/kdeint_desc.cpp
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoFilters6/largeMedian/convolution.conf
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoFilters6/largeMedian/convolution.h
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoFilters6/largeMedian/convolution_desc.cpp
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoFilters6/lavDeint/lav.conf
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoFilters6/lavDeint/lav.h
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoFilters6/lavDeint/lav_desc.cpp
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoFilters6/vdpauFilters/ADM_vidVdpauFilterDeint.cpp
Log:
[all] Now use bool for prefs and for diaElemToggle, update plugins

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_audioEncoders/lame/audioencoder_lame.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_audioEncoders/lame/audioencoder_lame.cpp	2011-05-01 08:11:40 UTC (rev 7176)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_audioEncoders/lame/audioencoder_lame.cpp	2011-05-01 08:11:42 UTC (rev 7177)
@@ -322,7 +322,7 @@
   diaElemMenu bitrate (&lameBitrate, QT_TR_NOOP ("_Bitrate:"), SZT (bitrateM),
 		       bitrateM);
   diaElemUInteger quality (PX (quality), QT_TR_NOOP ("_Quality:"), 0, 9);
-  uint32_t reservoir32=lameConf.disableBitReservoir;
+  bool reservoir32=lameConf.disableBitReservoir;
   diaElemToggle reservoir (&reservoir32,
 			   QT_TR_NOOP ("_Disable reservoir:"));
 

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_muxers/muxerMkv/muxerMkvConfig.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_muxers/muxerMkv/muxerMkvConfig.cpp	2011-05-01 08:11:40 UTC (rev 7176)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_muxers/muxerMkv/muxerMkvConfig.cpp	2011-05-01 08:11:42 UTC (rev 7177)
@@ -21,7 +21,7 @@
 #include "fourcc.h" 
 bool mkvConfigure(void)
 {
-        uint32_t force=(uint32_t)mkvMuxerConfig.forceDisplayWidth;
+        bool force=mkvMuxerConfig.forceDisplayWidth;
         uint32_t displayWidth=(uint32_t)mkvMuxerConfig.displayWidth;
 
         diaElemToggle   alternate(&force,"Force display width");

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_muxers/muxerMp4/muxerMP4Config.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_muxers/muxerMp4/muxerMP4Config.cpp	2011-05-01 08:11:40 UTC (rev 7176)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_muxers/muxerMp4/muxerMP4Config.cpp	2011-05-01 08:11:42 UTC (rev 7177)
@@ -22,7 +22,7 @@
 bool mp4Configure(void)
 {
         uint32_t fmt=(uint32_t)muxerConfig.muxerType;
-        uint32_t alt=(uint32_t)muxerConfig.useAlternateMp3Tag;
+        bool alt=muxerConfig.useAlternateMp3Tag;
         diaMenuEntry format[]={{MP4_MUXER_MP4,"MP4"},{MP4_MUXER_PSP,"PSP"}};
         diaElemMenu  menuFormat(&fmt,"Muxing Format",2,format,"");
         diaElemToggle alternate(&alt,"Use alternate MP3 tag");

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_muxers/muxerMp4v2/muxerMp4v2Config.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_muxers/muxerMp4v2/muxerMp4v2Config.cpp	2011-05-01 08:11:40 UTC (rev 7176)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_muxers/muxerMp4v2/muxerMp4v2Config.cpp	2011-05-01 08:11:42 UTC (rev 7177)
@@ -25,8 +25,8 @@
 */
 bool mp4v2Configure(void)
 {
-        uint32_t optimize=(uint32_t)muxerConfig.optimize;
-        uint32_t addItuneMetaData=(uint32_t)muxerConfig.add_itunes_metadata;
+        bool optimize=muxerConfig.optimize;
+        bool addItuneMetaData=muxerConfig.add_itunes_metadata;
 
         diaElemToggle   wOptimize(&optimize,"Optimize for streaming");
         diaElemToggle   wItunes(&addItuneMetaData,"Add ipod metadata");

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_muxers/muxerffPS/muxerffPSConfig.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_muxers/muxerffPS/muxerffPSConfig.cpp	2011-05-01 08:11:40 UTC (rev 7176)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_muxers/muxerffPS/muxerffPSConfig.cpp	2011-05-01 08:11:42 UTC (rev 7177)
@@ -43,7 +43,7 @@
 */
 bool ffPSConfigure(void)
 {
-        uint32_t tolerance=(uint32_t)psMuxerConfig.acceptNonCompliant;
+        bool tolerance=psMuxerConfig.acceptNonCompliant;
         #define TX(x) &(psMuxerConfig.x)
 
 

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/ffMpeg2/ADM_ffMpeg2.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/ffMpeg2/ADM_ffMpeg2.cpp	2011-05-01 08:11:40 UTC (rev 7176)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/ffMpeg2/ADM_ffMpeg2.cpp	2011-05-01 08:11:42 UTC (rev 7177)
@@ -299,9 +299,11 @@
          diaElemToggle    trellis(PX(_TRELLIS_QUANT),QT_TR_NOOP("_Trellis quantization"));
          
          diaElemUInteger  max_b_frames(PX(max_b_frames),QT_TR_NOOP("_Number of B frames:"),0,32);
-         
+         uint32_t widescreen= conf->lavcSettings.widescreen;
+         uint32_t iinterlaced= conf->lavcSettings.interlaced;
+         uint32_t bff= conf->lavcSettings.bff;
          diaElemMenu     rdM(PX(mb_eval),QT_TR_NOOP("_Macroblock decision:"),3,rdE);
-         diaElemMenu     arM(PX(widescreen),QT_TR_NOOP("Aspect ratio:"),2,arE);
+         diaElemMenu     arM(&(widescreen),QT_TR_NOOP("Aspect ratio:"),2,arE);
          diaElemMenu     matrixM(&(Mp2Settings.matrix),QT_TR_NOOP("Matrices:"),MPEG2_MATRIX_LAST,matrixE);
          diaElemUInteger filetol(PX(vratetol),QT_TR_NOOP("_Filesize tolerance (kb):"),0,100000);
          
@@ -310,8 +312,8 @@
          
         diaElemUInteger GopSize(PX(gop_size),QT_TR_NOOP("_Gop Size:"),1,30); 
 
-        diaElemMenu     interlaced(PX(interlaced),QT_TR_NOOP("_Interlaced:"),2,interE);
-        diaElemMenu     fieldOrder(PX(bff),QT_TR_NOOP("Field Order:"),2,foE);
+        diaElemMenu     interlaced(&(iinterlaced),QT_TR_NOOP("_Interlaced:"),2,interE);
+        diaElemMenu     fieldOrder(&(bff),QT_TR_NOOP("Field Order:"),2,foE);
 
           /* First Tab : encoding mode */
         diaElem *diamode[]={&arM,&threadM,&bitrate};
@@ -339,6 +341,9 @@
         if( diaFactoryRunTabs(QT_TR_NOOP("libavcodec MPEG-2 configuration"),5,tabs))
         {
           conf->lavcSettings.me_method=(Motion_Est_ID)me;
+          conf->lavcSettings.widescreen= widescreen;
+          conf->lavcSettings.interlaced= iinterlaced;
+          conf->lavcSettings.bff= bff;
           return true;
         }
          return false;

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/CMakeLists.txt
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/CMakeLists.txt	2011-05-01 08:11:40 UTC (rev 7176)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/CMakeLists.txt	2011-05-01 08:11:42 UTC (rev 7177)
@@ -20,7 +20,7 @@
     SET(ADM_ve_x264_QT4_Headers qt4/Q_x264.h)
     SET(ADM_ve_x264_QT4_UI      qt4/x264ConfigDialog)
     ADD_VIDEO_ENCODER_QT4(ADM_ve_x264_qt4   ${ADM_ve_x264_QT4_SRCS} ${ADM_ve_x264_QT4_Headers} ${ADM_ve_x264_QT4_UI} ${x264_SRCS})
-    TARGET_LINK_LIBRARIES(ADM_ve_x264_qt4 x264 ADM_coreJSON6 )
+    TARGET_LINK_LIBRARIES(ADM_ve_x264_qt4 x264 )
     INIT_VIDEO_ENCODER(ADM_ve_x264_qt4)
     INSTALL_VIDEO_ENCODER(ADM_ve_x264_qt4)
   endif(DO_QT4)

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/x264_encoder_json.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/x264_encoder_json.cpp	2011-05-01 08:11:40 UTC (rev 7176)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/x264_encoder_json.cpp	2011-05-01 08:11:42 UTC (rev 7177)
@@ -1,7 +1,7 @@
 // automatically generated by admSerialization.py, do not edit!
 #include "ADM_default.h"
 #include "ADM_paramList.h"
-#include "ADM_coreJson/include/ADM_coreJson.h"
+#include "ADM_coreJson.h"
 #include "x264_encoder.h"
 bool  x264_encoder_jserialize(const char *file, const x264_encoder *key){
 admJson json;

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/xvid4/xvid4Dialog.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/xvid4/xvid4Dialog.cpp	2011-05-01 08:11:40 UTC (rev 7176)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/xvid4/xvid4Dialog.cpp	2011-05-01 08:11:42 UTC (rev 7177)
@@ -84,8 +84,7 @@
          diaElemUInteger  qmaxM(PX(qmax),QT_TR_NOOP("Ma_x. quantizer:"),1,31);
          diaElemUInteger  qdiffM(PX(max_qdiff),QT_TR_NOOP("Max. quantizer _difference:"),1,31);
 */
-         uint32_t trelBol=*PX(trellis);
-         diaElemToggle    trellis(&trelBol,QT_TR_NOOP("_Trellis quantization"));         
+         diaElemToggle    trellis(PX(trellis),QT_TR_NOOP("_Trellis quantization"));         
          diaElemUInteger  max_b_frames(PX(maxBFrame),QT_TR_NOOP("_Number of B frames:"),0,32);
 
          diaElemMenu     qzM(PX(cqmMode),QT_TR_NOOP("_Quantization type:"),2,qzE);
@@ -127,8 +126,7 @@
          diaElemTabs *tabs[]={&tabME,&tabQz,&tabThread};
         if( diaFactoryRunTabs(QT_TR_NOOP("Xvid4 MPEG-4 ASP configuration"),3,tabs))
         {
-            *PX(trellis)= trelBol;
             return true;
         }
          return false;
-}
\ No newline at end of file
+}

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoFilters6/colorYUV/colorYuv.conf
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoFilters6/colorYUV/colorYuv.conf	2011-05-01 08:11:40 UTC (rev 7176)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoFilters6/colorYUV/colorYuv.conf	2011-05-01 08:11:42 UTC (rev 7177)
@@ -13,9 +13,9 @@
 float:v_contrast
 uint32_t:matrix
 uint32_t:levels
-uint32_t:opt
+bool:opt
 uint32_t:colorbars
 uint32_t:analyze
-uint32_t:autowhite
-uint32_t:autogain #matrix : 0 : none   1: rec.709 #Level :  0 : none   1:"TV->PC", 2:"PC->TV", 3:"PC->TV.Y" Opt :    0 : none   1: Coring
+bool:autowhite
+bool:autogain #matrix : 0 : none   1: rec.709 #Level :  0 : none   1:"TV->PC", 2:"PC->TV", 3:"PC->TV.Y" Opt :    0 : none   1: Coring
 }

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoFilters6/colorYUV/colorYuv.h
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoFilters6/colorYUV/colorYuv.h	2011-05-01 08:11:40 UTC (rev 7176)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoFilters6/colorYUV/colorYuv.h	2011-05-01 08:11:42 UTC (rev 7177)
@@ -1,4 +1,3 @@
-// automatically generated by admSerialization.py, do not edit!
 // automatically generated by admSerialization.py do not edit
 #ifndef ADM_colorYuv_CONF_H
 #define ADM_colorYuv_CONF_H
@@ -17,10 +16,10 @@
 float v_contrast;
 uint32_t matrix;
 uint32_t levels;
-uint32_t opt;
+bool opt;
 uint32_t colorbars;
 uint32_t analyze;
-uint32_t autowhite;
-uint32_t autogain;
+bool autowhite;
+bool autogain;
 }colorYuv;
 #endif

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoFilters6/colorYUV/colorYuv_desc.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoFilters6/colorYUV/colorYuv_desc.cpp	2011-05-01 08:11:40 UTC (rev 7176)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoFilters6/colorYUV/colorYuv_desc.cpp	2011-05-01 08:11:42 UTC (rev 7177)
@@ -1,4 +1,5 @@
-const ADM_paramList colorYuv_param[]={
+// automatically generated by admSerialization.py, do not edit!
+extern const ADM_paramList colorYuv_param[]={
  {"y_gain",offsetof(colorYuv,y_gain),"float",ADM_param_float},
  {"y_bright",offsetof(colorYuv,y_bright),"float",ADM_param_float},
  {"y_gamma",offsetof(colorYuv,y_gamma),"float",ADM_param_float},
@@ -13,10 +14,10 @@
  {"v_contrast",offsetof(colorYuv,v_contrast),"float",ADM_param_float},
  {"matrix",offsetof(colorYuv,matrix),"uint32_t",ADM_param_uint32_t},
  {"levels",offsetof(colorYuv,levels),"uint32_t",ADM_param_uint32_t},
- {"opt",offsetof(colorYuv,opt),"uint32_t",ADM_param_uint32_t},
+ {"opt",offsetof(colorYuv,opt),"bool",ADM_param_bool},
  {"colorbars",offsetof(colorYuv,colorbars),"uint32_t",ADM_param_uint32_t},
  {"analyze",offsetof(colorYuv,analyze),"uint32_t",ADM_param_uint32_t},
- {"autowhite",offsetof(colorYuv,autowhite),"uint32_t",ADM_param_uint32_t},
- {"autogain",offsetof(colorYuv,autogain),"uint32_t",ADM_param_uint32_t},
+ {"autowhite",offsetof(colorYuv,autowhite),"bool",ADM_param_bool},
+ {"autogain",offsetof(colorYuv,autogain),"bool",ADM_param_bool},
 {NULL,0,NULL}
 };

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoFilters6/fastConvolution/ADM_vidFastConvolution.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoFilters6/fastConvolution/ADM_vidFastConvolution.cpp	2011-05-01 08:11:40 UTC (rev 7176)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoFilters6/fastConvolution/ADM_vidFastConvolution.cpp	2011-05-01 08:11:42 UTC (rev 7177)
@@ -14,7 +14,7 @@
  *   (at your option) any later version.                                   *
  *                                                                         *
  ***************************************************************************/
-
+#define convolution_param convolution_param_fast
 #include "ADM_vidConvolution.hxx"
 #include "convolution_desc.cpp"
 #include "DIA_factory.h"

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoFilters6/fastConvolution/convolution.conf
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoFilters6/fastConvolution/convolution.conf	2011-05-01 08:11:40 UTC (rev 7176)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoFilters6/fastConvolution/convolution.conf	2011-05-01 08:11:42 UTC (rev 7177)
@@ -1,4 +1,4 @@
 convolution{
-uint32_t:luma; 
-uint32_t:chroma; 
+bool:luma; 
+bool:chroma; 
 }

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoFilters6/fastConvolution/convolution.h
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoFilters6/fastConvolution/convolution.h	2011-05-01 08:11:40 UTC (rev 7176)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoFilters6/fastConvolution/convolution.h	2011-05-01 08:11:42 UTC (rev 7177)
@@ -1,9 +1,8 @@
-// automatically generated by admSerialization.py, do not edit!
 // automatically generated by admSerialization.py do not edit
 #ifndef ADM_convolution_CONF_H
 #define ADM_convolution_CONF_H
 typedef struct {
-uint32_t luma;
-uint32_t chroma;
+bool luma;
+bool chroma;
 }convolution;
 #endif

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoFilters6/fastConvolution/convolution_desc.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoFilters6/fastConvolution/convolution_desc.cpp	2011-05-01 08:11:40 UTC (rev 7176)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoFilters6/fastConvolution/convolution_desc.cpp	2011-05-01 08:11:42 UTC (rev 7177)
@@ -1,5 +1,6 @@
-const ADM_paramList convolution_param[]={
- {"luma",offsetof(convolution,luma),"uint32_t",ADM_param_uint32_t},
- {"chroma",offsetof(convolution,chroma),"uint32_t",ADM_param_uint32_t},
+// automatically generated by admSerialization.py, do not edit!
+extern const ADM_paramList convolution_param[]={
+ {"luma",offsetof(convolution,luma),"bool",ADM_param_bool},
+ {"chroma",offsetof(convolution,chroma),"bool",ADM_param_bool},
 {NULL,0,NULL}
 };

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoFilters6/kernelDeint/kdeint.conf
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoFilters6/kernelDeint/kdeint.conf	2011-05-01 08:11:40 UTC (rev 7176)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoFilters6/kernelDeint/kdeint.conf	2011-05-01 08:11:42 UTC (rev 7177)
@@ -1,7 +1,7 @@
 kdeint{
 uint32_t:order
 uint32_t:threshold
-uint32_t:sharp
-uint32_t:twoway
-uint32_t:map
+bool:sharp
+bool:twoway
+bool:map
 }

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoFilters6/kernelDeint/kdeint.h
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoFilters6/kernelDeint/kdeint.h	2011-05-01 08:11:40 UTC (rev 7176)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoFilters6/kernelDeint/kdeint.h	2011-05-01 08:11:42 UTC (rev 7177)
@@ -1,12 +1,11 @@
-// automatically generated by admSerialization.py, do not edit!
 // automatically generated by admSerialization.py do not edit
 #ifndef ADM_kdeint_CONF_H
 #define ADM_kdeint_CONF_H
 typedef struct {
 uint32_t order;
 uint32_t threshold;
-uint32_t sharp;
-uint32_t twoway;
-uint32_t map;
+bool sharp;
+bool twoway;
+bool map;
 }kdeint;
 #endif

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoFilters6/kernelDeint/kdeint_desc.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoFilters6/kernelDeint/kdeint_desc.cpp	2011-05-01 08:11:40 UTC (rev 7176)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoFilters6/kernelDeint/kdeint_desc.cpp	2011-05-01 08:11:42 UTC (rev 7177)
@@ -1,8 +1,9 @@
-const ADM_paramList kdeint_param[]={
+// automatically generated by admSerialization.py, do not edit!
+extern const ADM_paramList kdeint_param[]={
  {"order",offsetof(kdeint,order),"uint32_t",ADM_param_uint32_t},
  {"threshold",offsetof(kdeint,threshold),"uint32_t",ADM_param_uint32_t},
- {"sharp",offsetof(kdeint,sharp),"uint32_t",ADM_param_uint32_t},
- {"twoway",offsetof(kdeint,twoway),"uint32_t",ADM_param_uint32_t},
- {"map",offsetof(kdeint,map),"uint32_t",ADM_param_uint32_t},
+ {"sharp",offsetof(kdeint,sharp),"bool",ADM_param_bool},
+ {"twoway",offsetof(kdeint,twoway),"bool",ADM_param_bool},
+ {"map",offsetof(kdeint,map),"bool",ADM_param_bool},
 {NULL,0,NULL}
 };

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoFilters6/largeMedian/convolution.conf
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoFilters6/largeMedian/convolution.conf	2011-05-01 08:11:40 UTC (rev 7176)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoFilters6/largeMedian/convolution.conf	2011-05-01 08:11:42 UTC (rev 7177)
@@ -1,4 +1,4 @@
 convolution{
-uint32_t:luma; 
-uint32_t:chroma; 
+bool:luma; 
+bool:chroma; 
 }

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoFilters6/largeMedian/convolution.h
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoFilters6/largeMedian/convolution.h	2011-05-01 08:11:40 UTC (rev 7176)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoFilters6/largeMedian/convolution.h	2011-05-01 08:11:42 UTC (rev 7177)
@@ -1,9 +1,8 @@
-// automatically generated by admSerialization.py, do not edit!
 // automatically generated by admSerialization.py do not edit
 #ifndef ADM_convolution_CONF_H
 #define ADM_convolution_CONF_H
 typedef struct {
-uint32_t luma;
-uint32_t chroma;
+bool luma;
+bool chroma;
 }convolution;
 #endif

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoFilters6/largeMedian/convolution_desc.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoFilters6/largeMedian/convolution_desc.cpp	2011-05-01 08:11:40 UTC (rev 7176)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoFilters6/largeMedian/convolution_desc.cpp	2011-05-01 08:11:42 UTC (rev 7177)
@@ -1,5 +1,6 @@
-const ADM_paramList convolution_param[]={
- {"luma",offsetof(convolution,luma),"uint32_t",ADM_param_uint32_t},
- {"chroma",offsetof(convolution,chroma),"uint32_t",ADM_param_uint32_t},
+// automatically generated by admSerialization.py, do not edit!
+extern const ADM_paramList convolution_param[]={
+ {"luma",offsetof(convolution,luma),"bool",ADM_param_bool},
+ {"chroma",offsetof(convolution,chroma),"bool",ADM_param_bool},
 {NULL,0,NULL}
 };

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoFilters6/lavDeint/lav.conf
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoFilters6/lavDeint/lav.conf	2011-05-01 08:11:40 UTC (rev 7176)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoFilters6/lavDeint/lav.conf	2011-05-01 08:11:42 UTC (rev 7177)
@@ -1,4 +1,4 @@
 lav{
 uint32_t:deintType
-uint32_t:autoLevel
+bool:autoLevel
 }

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoFilters6/lavDeint/lav.h
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoFilters6/lavDeint/lav.h	2011-05-01 08:11:40 UTC (rev 7176)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoFilters6/lavDeint/lav.h	2011-05-01 08:11:42 UTC (rev 7177)
@@ -1,9 +1,8 @@
-// automatically generated by admSerialization.py, do not edit!
 // automatically generated by admSerialization.py do not edit
 #ifndef ADM_lav_CONF_H
 #define ADM_lav_CONF_H
 typedef struct {
 uint32_t deintType;
-uint32_t autoLevel;
+bool autoLevel;
 }lav;
 #endif

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoFilters6/lavDeint/lav_desc.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoFilters6/lavDeint/lav_desc.cpp	2011-05-01 08:11:40 UTC (rev 7176)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoFilters6/lavDeint/lav_desc.cpp	2011-05-01 08:11:42 UTC (rev 7177)
@@ -1,5 +1,6 @@
-const ADM_paramList lav_param[]={
+// automatically generated by admSerialization.py, do not edit!
+extern const ADM_paramList lav_param[]={
  {"deintType",offsetof(lav,deintType),"uint32_t",ADM_param_uint32_t},
- {"autoLevel",offsetof(lav,autoLevel),"uint32_t",ADM_param_uint32_t},
+ {"autoLevel",offsetof(lav,autoLevel),"bool",ADM_param_bool},
 {NULL,0,NULL}
 };

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoFilters6/vdpauFilters/ADM_vidVdpauFilterDeint.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoFilters6/vdpauFilters/ADM_vidVdpauFilterDeint.cpp	2011-05-01 08:11:40 UTC (rev 7176)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoFilters6/vdpauFilters/ADM_vidVdpauFilterDeint.cpp	2011-05-01 08:11:42 UTC (rev 7177)
@@ -228,7 +228,7 @@
                              {ADM_KEEP_BOTH,      QT_TR_NOOP("Double framerate"),NULL}
                              
           };
-     uint32_t doResize=(uint32_t)configuration.resizeToggle;
+     bool doResize=configuration.resizeToggle;
      diaElemToggle    tResize(&(doResize),   QT_TR_NOOP("_Resize:"));
      diaElemMenu      mMode(&(configuration.deintMode),   QT_TR_NOOP("_Deint Mode:"), 3,tMode);
      diaElemUInteger  tWidth(&(configuration.targetWidth),QT_TR_NOOP("Width :"),16,2048);



From mean at mail.berlios.de  Sun May  1 10:24:30 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Sun,  1 May 2011 10:24:30 +0200
Subject: [Avidemux-svn-commit] r7179 -
	branches/avidemux_2.6_branch_mean/avidemux/qt4/ADM_userInterfaces/ADM_gui
Message-ID: <20110501082430.A25EB48129E@sheep.berlios.de>

Author: mean
Date: 2011-05-01 10:24:30 +0200 (Sun, 01 May 2011)
New Revision: 7179

Modified:
   branches/avidemux_2.6_branch_mean/avidemux/qt4/ADM_userInterfaces/ADM_gui/file_qt4.cpp
Log:
[all] Dont use ADM_filename

Modified: branches/avidemux_2.6_branch_mean/avidemux/qt4/ADM_userInterfaces/ADM_gui/file_qt4.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux/qt4/ADM_userInterfaces/ADM_gui/file_qt4.cpp	2011-05-01 08:11:46 UTC (rev 7178)
+++ branches/avidemux_2.6_branch_mean/avidemux/qt4/ADM_userInterfaces/ADM_gui/file_qt4.cpp	2011-05-01 08:24:30 UTC (rev 7179)
@@ -68,7 +68,7 @@
 		if (!fileName.isNull() )
 		{
 			*name = ADM_strdup(fileName.toUtf8().constData());
-			prefs->set(pref_entry, (ADM_filename*)*name);
+			prefs->set(pref_entry, (char *)*name);
 		}
 
 		if (str)



From mean at mail.berlios.de  Sun May  1 19:06:37 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Sun,  1 May 2011 19:06:37 +0200
Subject: [Avidemux-svn-commit] r7180 -
	branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreMuxer/src
Message-ID: <20110501170637.AE1FD481306@sheep.berlios.de>

Author: mean
Date: 2011-05-01 19:06:37 +0200 (Sun, 01 May 2011)
New Revision: 7180

Modified:
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreMuxer/src/ADM_coreMuxerFfmpeg.cpp
Log:
[muxer/ff] Warn if the output video has a duration less than 4/5 of what it s supposed to be

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreMuxer/src/ADM_coreMuxerFfmpeg.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreMuxer/src/ADM_coreMuxerFfmpeg.cpp	2011-05-01 08:24:30 UTC (rev 7179)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreMuxer/src/ADM_coreMuxerFfmpeg.cpp	2011-05-01 17:06:37 UTC (rev 7180)
@@ -374,7 +374,7 @@
     int ret;
     int written=0;
     bool result=true;
-
+    
     float f=(float)vStream->getAvgFps1000();
     f=1000./f;
     f*=1000000;
@@ -508,6 +508,11 @@
 
     }
     delete [] buffer;
+    if((videoDuration *4)/5 > lastVideoDts)
+    {
+        GUI_Error_HIG("Too short","The video has been saved but seems to be incomplete.");
+        result=false;
+    }
     ADM_info("[FF] Wrote %d frames, nb audio streams %d\n",written,nbAStreams);
     return result;
 }



From mean at mail.berlios.de  Sun May  1 19:06:38 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Sun,  1 May 2011 19:06:38 +0200
Subject: [Avidemux-svn-commit] r7181 -
	branches/avidemux_2.6_branch_mean/avidemux/common/ADM_editor
Message-ID: <20110501170638.DDEF9481306@sheep.berlios.de>

Author: mean
Date: 2011-05-01 19:06:38 +0200 (Sun, 01 May 2011)
New Revision: 7181

Modified:
   branches/avidemux_2.6_branch_mean/avidemux/common/ADM_editor/ADM_edPtsDts.cpp
Log:
[editor] In case of slightly borked mpeg2 file, the PTS are present and we compute the DTS from them. If a ref frame has been corrupted, the dts goes back as it goes to ref[-2] instead of ref[-1] since ref[-1] has been borked. workaround : run the dts checker after computing dts

Modified: branches/avidemux_2.6_branch_mean/avidemux/common/ADM_editor/ADM_edPtsDts.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux/common/ADM_editor/ADM_edPtsDts.cpp	2011-05-01 17:06:37 UTC (rev 7180)
+++ branches/avidemux_2.6_branch_mean/avidemux/common/ADM_editor/ADM_edPtsDts.cpp	2011-05-01 17:06:38 UTC (rev 7181)
@@ -373,7 +373,8 @@
         if(nPts>=info.nb_frames-2 )
         {
             ADM_info("Got PTS, compute dts\n");
-            return setDtsFromPts(hdr,timeIncrementUs,delay);
+            if(false== setDtsFromPts(hdr,timeIncrementUs,delay)) return false;
+            return ADM_verifyDts(hdr,timeIncrementUs);
         }
         // No b frames, PTS=DTS
         if(!nbB)
@@ -386,7 +387,7 @@
         if(nDts>=info.nb_frames-2 )
         {
             ADM_info("Got DTS, compute  PTS\n");
-            return setPtsFromDts(hdr,timeIncrementUs,delay);
+            return  setPtsFromDts(hdr,timeIncrementUs,delay);
         }
         // Case 4: We have a bit of both
         ADM_info("Get some dts and pts\n");
@@ -467,6 +468,7 @@
     uint32_t flags;
     uint64_t pts,dts;
 
+    ADM_info("computing pts...\n");
     aviInfo info;
     hdr->getVideoInfo(&info);
     nbFrames=info.nb_frames;
@@ -485,6 +487,7 @@
                 nbBframe=0;
             }
     }
+    ADM_info("max bframe = %d\n",maxBframe);
     nbBframe=0;
     // We have now maxBframe = max number of Bframes in sequence
     for(int i=1;i<nbFrames;i++)
@@ -526,6 +529,8 @@
     int nbB=0;
     uint64_t pts,dts;
 
+    ADM_info("computing dts...\n");
+
     aviInfo info;
     hdr->getVideoInfo(&info);
     nbFrames=info.nb_frames;



From mean at mail.berlios.de  Sun May  1 19:44:51 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Sun,  1 May 2011 19:44:51 +0200
Subject: [Avidemux-svn-commit] r7182 - in branches/avidemux_2.6_branch_mean:
	avidemux_core/ADM_coreVideoEncoder/include
	avidemux_core/ADM_coreVideoEncoder/src
	avidemux_plugins/ADM_videoEncoder/x264
	avidemux_plugins/ADM_videoEncoder/xvid4
Message-ID: <20110501174452.3C15148139D@sheep.berlios.de>

Author: mean
Date: 2011-05-01 19:44:51 +0200 (Sun, 01 May 2011)
New Revision: 7182

Modified:
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreVideoEncoder/include/ADM_coreVideoEncoderFFmpeg.h
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreVideoEncoder/src/ADM_coreVideoEncoderFFmpeg.cpp
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/ADM_x264.cpp
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/xvid4/ADM_xvid4.cpp
Log:
[encoder] Reflect the use of pitch in image to encoder. dont assume w,w/2,w/2.

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreVideoEncoder/include/ADM_coreVideoEncoderFFmpeg.h
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreVideoEncoder/include/ADM_coreVideoEncoderFFmpeg.h	2011-05-01 17:06:38 UTC (rev 7181)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreVideoEncoder/include/ADM_coreVideoEncoderFFmpeg.h	2011-05-01 17:44:51 UTC (rev 7182)
@@ -48,7 +48,7 @@
               
 protected:
 
-    virtual               bool             prolog(void); 
+    virtual               bool             prolog(ADMImage *img); 
     virtual               bool             preEncode(void); 
     virtual               bool             setup(CodecID codecId);
     virtual               bool             getExtraData(uint32_t *l,uint8_t **d) ;

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreVideoEncoder/src/ADM_coreVideoEncoderFFmpeg.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreVideoEncoder/src/ADM_coreVideoEncoderFFmpeg.cpp	2011-05-01 17:06:38 UTC (rev 7181)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreVideoEncoder/src/ADM_coreVideoEncoderFFmpeg.cpp	2011-05-01 17:44:51 UTC (rev 7182)
@@ -118,16 +118,16 @@
     \fn prolog
 */
 
-bool             ADM_coreVideoEncoderFFmpeg::prolog(void)
+bool             ADM_coreVideoEncoderFFmpeg::prolog(ADMImage *img)
 {
     int w=getWidth();
     int h=getHeight();
 
   switch(targetColorSpace)
     {
-        case ADM_COLOR_YV12:    _frame.linesize[0] = w;
-                                _frame.linesize[1] = w>>1;
-                                _frame.linesize[2] = w>>1;
+        case ADM_COLOR_YV12:    _frame.linesize[0] = img->GetPitch(PLANAR_Y);
+                                _frame.linesize[1] = img->GetPitch(PLANAR_U);
+                                _frame.linesize[2] = img->GetPitch(PLANAR_V);
                                 _context->pix_fmt =PIX_FMT_YUV420P;break;
         case ADM_COLOR_YUV422P: _frame.linesize[0] = w;
                                 _frame.linesize[1] = w>>1;
@@ -191,7 +191,7 @@
         printf("[ff] Cannot get next image\n");
         return false;
     }
-    prolog();
+    prolog(image);
 
     uint64_t p=image->Pts;
     queueOfDts.push_back(p);
@@ -259,7 +259,7 @@
         printf("[ff] Cannot find codec\n");
         return false;
     }
-   prolog();
+   prolog(image);
    printf("[ff] Time base %d/%d\n", _context->time_base.num,_context->time_base.den);
    if(LAVS(MultiThreaded))
     {
@@ -484,7 +484,7 @@
   _context->p_masking = 0.0;
 
   // Set frame rate den/num
-  prolog();
+  prolog(image);
   return true;
 }
 

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/ADM_x264.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/ADM_x264.cpp	2011-05-01 17:06:38 UTC (rev 7181)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/ADM_x264.cpp	2011-05-01 17:44:51 UTC (rev 7182)
@@ -290,9 +290,9 @@
       pic.img.plane[0] = YPLANE(in);
       pic.img.plane[2] = UPLANE(in);
       pic.img.plane[1] = VPLANE(in);
-      pic.img.i_stride[0] = getWidth();
-      pic.img.i_stride[1] = getWidth()/2;
-      pic.img.i_stride[2] = getWidth()/2;
+      pic.img.i_stride[0] = in->GetPitch(PLANAR_Y);
+      pic.img.i_stride[1] = in->GetPitch(PLANAR_U);
+      pic.img.i_stride[2] = in->GetPitch(PLANAR_V);
       pic.i_type = X264_TYPE_AUTO;
       pic.i_pts = in->Pts;
   return true;

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/xvid4/ADM_xvid4.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/xvid4/ADM_xvid4.cpp	2011-05-01 17:06:38 UTC (rev 7181)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/xvid4/ADM_xvid4.cpp	2011-05-01 17:44:51 UTC (rev 7182)
@@ -391,9 +391,9 @@
   //xvid_enc_frame.bframe_threshold = _param.bframe_threshold;
 
   xvid_enc_frame.input.csp = XVID_CSP_YV12;
-  xvid_enc_frame.input.stride[0] = getWidth();
-  xvid_enc_frame.input.stride[1] = getWidth()>>1;
-  xvid_enc_frame.input.stride[2] = getWidth()>> 1;
+  xvid_enc_frame.input.stride[0] = in->GetPitch(PLANAR_Y);
+  xvid_enc_frame.input.stride[1] = in->GetPitch(PLANAR_U);
+  xvid_enc_frame.input.stride[2] = in->GetPitch(PLANAR_V);
   xvid_enc_frame.type = XVID_TYPE_AUTO;
 
 



From mean at mail.berlios.de  Wed May  4 07:58:34 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Wed,  4 May 2011 07:58:34 +0200
Subject: [Avidemux-svn-commit] r7183 - in branches/avidemux_2.6_branch_mean:
	autononreg/py autononreg/py/folder_content
	avidemux_core/ADM_coreTinyPy/src
Message-ID: <20110504055834.562C04813BB@sheep.berlios.de>

Author: mean
Date: 2011-05-04 07:58:33 +0200 (Wed, 04 May 2011)
New Revision: 7183

Added:
   branches/avidemux_2.6_branch_mean/autononreg/py/folder_content/
   branches/avidemux_2.6_branch_mean/autononreg/py/folder_content/getFolderContent.py
Modified:
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreTinyPy/src/ADM_tinypy.cpp
Log:
[tinypy] Add get_folder_content tinypy function

Added: branches/avidemux_2.6_branch_mean/autononreg/py/folder_content/getFolderContent.py
===================================================================
--- branches/avidemux_2.6_branch_mean/autononreg/py/folder_content/getFolderContent.py	                        (rev 0)
+++ branches/avidemux_2.6_branch_mean/autononreg/py/folder_content/getFolderContent.py	2011-05-04 05:58:33 UTC (rev 7183)
@@ -0,0 +1,15 @@
+# check get_folder_content function
+# return the list of files with extention ext
+# full path is returned !
+# i.e. in the example below you will get a list
+# /work/samples/avi/foo.avi
+# /work/samples/avi/bar.avi
+# ...
+#
+print("Get folder content")
+root="/work/samples/avi"
+ext="avi"
+list=get_folder_content(root,ext)
+for i in list:
+   print(">>"+i)
+print("Done")

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreTinyPy/src/ADM_tinypy.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreTinyPy/src/ADM_tinypy.cpp	2011-05-01 17:44:51 UTC (rev 7182)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreTinyPy/src/ADM_tinypy.cpp	2011-05-04 05:58:33 UTC (rev 7183)
@@ -29,7 +29,12 @@
 
 pyLoggerFunc *pyLog=NULL;
 static tp_obj    tinyPy_dumpBuiltin(tp_vm *vm);
-static pyFuncs addons[]={{"help",tinyPy_dumpBuiltin},{NULL,NULL}};
+static tp_obj    tinyPy_getFolderContent(tp_vm *vm);
+static pyFuncs addons[]={
+                                {"help",tinyPy_dumpBuiltin},
+                                {"get_folder_content",tinyPy_getFolderContent},
+                                {NULL,NULL}
+                        };
 static vector <admPyClassDescriptor> listOfPyClass;;
 
 extern void tp_hook_set_syslib(const char *sysLib);
@@ -194,25 +199,49 @@
 
 }
 /**
-    \fn dumpBuiltin
+    \fn getFolderContent
+    \brief get_folder_content(root, ext) : Return a list of files in  root with extention ext
 */
-tp_obj    tinyPy_dumpBuiltin(tp_vm *vm)
+tp_obj    tinyPy_getFolderContent(tp_vm *tp)
 {
-#if 0
-    ADM_info("Dumping builtins\n");
-    tp_obj builtins=vm->builtins;
-    // It is a dict..
-    _tp_dict *dict=builtins.dict.val;
-    ADM_info("%d elems\n",dict->len);
-    for( int i=0;i<dict->len;i++)
+    tinyParams pm(tp);
+    const char *root= pm.asString();
+    const char *ext = pm.asString();
+    ADM_info("Scanning %s for file with ext : %s\n",root,ext);
+    
+    uint32_t nb;
+    #define MAX_ELEM 200
+    char *items[MAX_ELEM];
+    if(false==buildDirectoryContent(&nb,root, items,MAX_ELEM,ext))
     {
-        tp_item *item=&(dict->items[i]);
-        const char *str=item->key.string.val;
-        if(str)
-            pyPrintf("%s\n",str);
+      
+        ADM_warning("Cannot get content\n");
+        return tp_None;
     }
-    return tp_None;
-#endif
+    // create a list
+    tp_obj list=tp_list(tp);
+    if(!nb)
+    {
+        ADM_warning("Folder empty\n");
+        return tp_None;
+    }
+    // add items to the list
+    for(int i=0;i<nb;i++)
+        _tp_list_append(tp,list.list.val,tp_string(items[i]));
+    // free the list
+    for(int i=0;i<nb;i++)
+    {
+        ADM_dealloc(items[i]);
+        items[i]=NULL;
+    }
+    return list;
+
+}
+/**
+    \fn dumpBuiltin
+*/
+static tp_obj    tinyPy_dumpBuiltin(tp_vm *tp)
+{
     int n=listOfPyClass.size();
     pyPrintf("You can get more help using CLASSNAME.help()\n");
     for(int i=0;i<n;i++)
@@ -335,4 +364,4 @@
     for(int i=0;i<nb;i++) s[i]=asString();
     return stringsToConfCouple(nb,c,s);
 }
-// EOF
\ No newline at end of file
+// EOF



From mean at mail.berlios.de  Wed May  4 07:58:35 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Wed,  4 May 2011 07:58:35 +0200
Subject: [Avidemux-svn-commit] r7184 - in
	branches/avidemux_2.6_branch_mean/autononreg/py: . sample_script
Message-ID: <20110504055835.685BE4813BB@sheep.berlios.de>

Author: mean
Date: 2011-05-04 07:58:35 +0200 (Wed, 04 May 2011)
New Revision: 7184

Added:
   branches/avidemux_2.6_branch_mean/autononreg/py/sample_script/
   branches/avidemux_2.6_branch_mean/autononreg/py/sample_script/convert_avi_to_x264_mkv.py
Log:
[py] Sample script that converts a folder to mkv/h264

Added: branches/avidemux_2.6_branch_mean/autononreg/py/sample_script/convert_avi_to_x264_mkv.py
===================================================================
--- branches/avidemux_2.6_branch_mean/autononreg/py/sample_script/convert_avi_to_x264_mkv.py	                        (rev 0)
+++ branches/avidemux_2.6_branch_mean/autononreg/py/sample_script/convert_avi_to_x264_mkv.py	2011-05-04 05:58:35 UTC (rev 7184)
@@ -0,0 +1,39 @@
+# check get_folder_content function
+# return the list of files with extention ext
+# full path is returned !
+# i.e. in the example below you will get a list
+# /work/samples/avi/foo.avi
+# /work/samples/avi/bar.avi
+# ...
+#
+ext="avi"
+#
+def convert(filein):
+    fileout=filein+".mkv"
+    print(filein+"=>"+fileout)
+    adm.loadVideo(filein)
+    adm.save(fileout)
+    print("Done")
+    
+#
+# Main
+#
+ui=Gui()
+adm=Avidemux()
+adm.videoCodec("x264","general.params=AQ=20","general.threads=99","general.fast_first_pass=True","level=31","vui.sar_height=1","vui.sar_width=1","MaxRefFrames=2","MinIdr=100","MaxIdr=500","MaxBFrame=2","i_bframe_adaptative=0","i_bframe_bias=0",  \
+"i_bframe_pyramid=0","b_deblocking_filter=False","i_deblocking_filter_alphac0=0","i_deblocking_filter_beta=0","cabac=True","interlaced=False","analyze.b_8x8=True","analyze.b_i4x4=False","analyze.b_i8x8=False"\
+,"analyze.b_p8x8=False","analyze.b_p16x16=False","analyze.b_b16x16=False","analyze.weighted_pred=0","analyze.weighted_bipred=False","analyze.direct_mv_pred=0","analyze.chroma_offset=0","analyze.me_method=0","analyze.subpel_refine=7","analyze.chroma_me=False","analyze.mixed_references=False","analyze.trellis=1","analyze.fast_pskip=True","analyze.dct_decimate=False","analyze.noise_reduction=0","analyze.psy=True","ratecontrol.rc_method=0","ratecontrol.qp_constant=0","ratecontrol.qp_min=0","ratecontrol.qp_max=0"\
+,"ratecontrol.qp_step=0","ratecontrol.bitrate=0","ratecontrol.vbv_max_bitrate=0","ratecontrol.vbv_buffer_size=0","ratecontrol.vbv_buffer_init=0","ratecontrol.ip_factor=0.000000","ratecontrol.pb_factor=0.000000","ratecontrol.aq_mode=0","ratecontrol.aq_strength=0.000000","ratecontrol.mb_tree=False","ratecontrol.lookahead=0")
+adm.audioReset()
+adm.audioCodec("copy",28152032)
+adm.setContainer("MKV","forceDisplayWidth=False","displayWidth=1280")
+#
+folder=ui.dirSelect("Select avi source folder")
+#folder="/work/samples/avi"
+if(folder is None):
+    displayError("oops","no folder selected")
+    raise
+list=get_folder_content(folder,ext)
+for i in list:
+        convert(i)
+print("Done")



From mean at mail.berlios.de  Wed May  4 07:58:36 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Wed,  4 May 2011 07:58:36 +0200
Subject: [Avidemux-svn-commit] r7185 -
	branches/avidemux_2.6_branch_mean/autononreg/py/sample_script
Message-ID: <20110504055836.8216B4813BB@sheep.berlios.de>

Author: mean
Date: 2011-05-04 07:58:36 +0200 (Wed, 04 May 2011)
New Revision: 7185

Modified:
   branches/avidemux_2.6_branch_mean/autononreg/py/sample_script/convert_avi_to_x264_mkv.py
Log:
[sample script] Working convert a whole dir of avi to mkv

Modified: branches/avidemux_2.6_branch_mean/autononreg/py/sample_script/convert_avi_to_x264_mkv.py
===================================================================
--- branches/avidemux_2.6_branch_mean/autononreg/py/sample_script/convert_avi_to_x264_mkv.py	2011-05-04 05:58:35 UTC (rev 7184)
+++ branches/avidemux_2.6_branch_mean/autononreg/py/sample_script/convert_avi_to_x264_mkv.py	2011-05-04 05:58:36 UTC (rev 7185)
@@ -11,7 +11,10 @@
 def convert(filein):
     fileout=filein+".mkv"
     print(filein+"=>"+fileout)
-    adm.loadVideo(filein)
+    if(0 == adm.loadVideo(filein)):
+        ui.displayError("oops","cannot load "+filein)
+        raise
+        
     adm.save(fileout)
     print("Done")
     
@@ -31,7 +34,7 @@
 folder=ui.dirSelect("Select avi source folder")
 #folder="/work/samples/avi"
 if(folder is None):
-    displayError("oops","no folder selected")
+    ui.displayError("oops","no folder selected")
     raise
 list=get_folder_content(folder,ext)
 for i in list:



From mean at mail.berlios.de  Wed May  4 07:58:37 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Wed,  4 May 2011 07:58:37 +0200
Subject: [Avidemux-svn-commit] r7186 -
	branches/avidemux_2.6_branch_mean/avidemux/common
Message-ID: <20110504055837.9D4A84813BB@sheep.berlios.de>

Author: mean
Date: 2011-05-04 07:58:37 +0200 (Wed, 04 May 2011)
New Revision: 7186

Modified:
   branches/avidemux_2.6_branch_mean/avidemux/common/gui_savenew.cpp
Log:
[main] Dont use audio if there is not audio , when saving

Modified: branches/avidemux_2.6_branch_mean/avidemux/common/gui_savenew.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux/common/gui_savenew.cpp	2011-05-04 05:58:36 UTC (rev 7185)
+++ branches/avidemux_2.6_branch_mean/avidemux/common/gui_savenew.cpp	2011-05-04 05:58:37 UTC (rev 7186)
@@ -290,7 +290,7 @@
         // In that case, get the real time and update audio with it...
         // Because we might have go back in time to catch the first intra
         startAudioTime=copy->getStartTime();
-        audio->goToTime(startAudioTime);
+        if(audio) audio->goToTime(startAudioTime);
     }else
     {
         // 1- create filter chain



From mean at mail.berlios.de  Wed May  4 07:58:38 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Wed,  4 May 2011 07:58:38 +0200
Subject: [Avidemux-svn-commit] r7187 -
	branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreTinyPy/src
Message-ID: <20110504055838.BFCF64813BB@sheep.berlios.de>

Author: mean
Date: 2011-05-04 07:58:38 +0200 (Wed, 04 May 2011)
New Revision: 7187

Modified:
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreTinyPy/src/ADM_tinypy.cpp
Log:
[tinypy] When building the content of a folder, use _tp_strcpy rather than tp_string so that the string is duplicated safely inside of tinypy rather than being an obsolete pointer

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreTinyPy/src/ADM_tinypy.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreTinyPy/src/ADM_tinypy.cpp	2011-05-04 05:58:37 UTC (rev 7186)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreTinyPy/src/ADM_tinypy.cpp	2011-05-04 05:58:38 UTC (rev 7187)
@@ -227,7 +227,10 @@
     }
     // add items to the list
     for(int i=0;i<nb;i++)
-        _tp_list_append(tp,list.list.val,tp_string(items[i]));
+    {
+        char *tem=items[i];
+        _tp_list_append(tp,list.list.val,tp_string_copy(tp,tem,strlen(tem)));
+    }
     // free the list
     for(int i=0;i<nb;i++)
     {



From mean at mail.berlios.de  Wed May  4 07:58:40 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Wed,  4 May 2011 07:58:40 +0200
Subject: [Avidemux-svn-commit] r7188 -
	branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_demuxers/MpegTS
Message-ID: <20110504055840.2A70B4813BB@sheep.berlios.de>

Author: mean
Date: 2011-05-04 07:58:39 +0200 (Wed, 04 May 2011)
New Revision: 7188

Modified:
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_demuxers/MpegTS/ADM_ts.h
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_demuxers/MpegTS/ADM_tsAudio.cpp
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_demuxers/MpegTS/ADM_tsAudioProbe.cpp
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_demuxers/MpegTS/ADM_tsIndex.cpp
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_demuxers/MpegTS/ADM_tsPatPmt.cpp
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_demuxers/MpegTS/ADM_tsPatPmt.h
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_demuxers/MpegTS/ADM_tsReadIndex.cpp
Log:
[ts/demux] Prepart to handle AAC, both LATM and ADTS

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_demuxers/MpegTS/ADM_ts.h
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_demuxers/MpegTS/ADM_ts.h	2011-05-04 05:58:38 UTC (rev 7187)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_demuxers/MpegTS/ADM_ts.h	2011-05-04 05:58:39 UTC (rev 7188)
@@ -42,14 +42,14 @@
                 uint32_t         pid;
                 uint64_t        dtsOffset;
                 uint32_t        videoCodec;
-                bool            isAdtsAac;
+                ADM_TS_MUX_TYPE muxing;
                 ADM_adts2aac    adts;
 public:
                 vector          <ADM_mpgAudioSeekPoint >seekPoints;
 public:
                 bool            setTimeOffset(uint64_t of) {dtsOffset=of;return true;}
                 
-                                  ADM_tsAccess(const char *name,uint32_t pid,bool append,bool aacAdts,int extraLen,uint8_t *extraData); 
+                                  ADM_tsAccess(const char *name,uint32_t pid,bool append,ADM_TS_MUX_TYPE muxing,int extraLen,uint8_t *extraData); 
                 virtual           ~ADM_tsAccess();
                                     /// Hint, the stream is pure CBR (AC3,MP2,MP3)
                 virtual bool      isCBR(void) { return true;}

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_demuxers/MpegTS/ADM_tsAudio.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_demuxers/MpegTS/ADM_tsAudio.cpp	2011-05-04 05:58:38 UTC (rev 7187)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_demuxers/MpegTS/ADM_tsAudio.cpp	2011-05-04 05:58:39 UTC (rev 7188)
@@ -36,14 +36,15 @@
     \param aacAdts[in] Set to true if the file is aac/adts
     \param myLen/myExtra[in] ExtraData if any
 */
-ADM_tsAccess::ADM_tsAccess(const char *name,uint32_t pid,bool append,bool aacAdts,int myLen,uint8_t  *myExtra)
+ADM_tsAccess::ADM_tsAccess(const char *name,uint32_t pid,bool append,ADM_TS_MUX_TYPE muxing,int myLen,uint8_t  *myExtra)
 {
 FP_TYPE fp=FP_DONT_APPEND;
         if(append) fp=FP_APPEND;
         this->pid=pid;
         if(!demuxer.open(name,fp)) ADM_assert(0);
         packet=new TS_PESpacket(pid);
-        isAdtsAac=aacAdts;
+        this->muxing=muxing;
+        ADM_info("Creating audio track, pid=%x, muxing =%d\n",pid,muxing);
         if(myLen && myExtra)
         {   
             extraData=new uint8_t [myLen];
@@ -152,7 +153,7 @@
     if(avail>maxSize) ADM_assert(0);
     *size=avail;
     // If it is adts, ask ffmpeg to unwrap it...
-    if(true==isAdtsAac)
+    if(ADM_TS_MUX_ADTS==muxing)
     {
         bool r=false;
         int outsize=0;

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_demuxers/MpegTS/ADM_tsAudioProbe.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_demuxers/MpegTS/ADM_tsAudioProbe.cpp	2011-05-04 05:58:38 UTC (rev 7187)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_demuxers/MpegTS/ADM_tsAudioProbe.cpp	2011-05-04 05:58:39 UTC (rev 7188)
@@ -61,7 +61,8 @@
             case ADM_TS_MPEG_AUDIO:
             case ADM_TS_AC3:
             case ADM_TS_EAC3:
-            case ADM_TS_AAC:
+            case ADM_TS_AAC_ADTS:
+            case ADM_TS_AAC_LATM:
                         break;
             default:
                 ADM_warning("Unsupported audio track\n");
@@ -74,51 +75,78 @@
         // This is a special case...
         // For ADTS, we read one packet and ask ffmpeg to extract
         // Extra data, frequency etc...
-        if(trackInfo->trackType==ADM_TS_AAC)
+        ADM_TS_TRACK_TYPE trackType=trackInfo->trackType;
+
+        //--------------------- AAC -------------------------
+        if(trackType==ADM_TS_AAC_ADTS || trackType==ADM_TS_AAC_LATM)
         {
+            // Step 1, try to get a packet...
             TS_PESpacket pes(trackInfo->esId);
             int retries=5;
             int offset;
-            ADM_adts2aac  adts;
-            while(retries)
+            uint32_t eLen=0;     
+            uint8_t *eData=NULL;
+
+            trackInfo->wav.encoding=WAV_AAC;  
+            
+         
+again:
+            if(!retries)
             {
-                if(false==p->getNextPES(&pes))
+                ADM_error("Cannot get info from audio\n");
+                return false;
+            }
+            if(false==p->getNextPES(&pes))
                 {
                     ADM_warning("Cannot get pes packet for AAC track\n");
                     return false;
                 }
-                uint8_t *ptr=pes.payload+pes.offset;
-                int size=pes.payloadSize-pes.offset;
-                int dummySize=0;
-                if(true==adts.convert(size,ptr,&dummySize,NULL)) // We dont need the output hence the null
-                        break;;
-                retries--;
-            }
-            if(!retries)
+            retries--;    
+            
+            // try to decode header..
+            uint8_t *ptr=pes.payload+pes.offset;
+            int size=pes.payloadSize-pes.offset;
+            switch(trackType)
             {
-                ADM_error("Cannot get AAC/ADTS info\n");
-                return false;
+                default:
+                case ADM_TS_AAC_LATM:
+                {
+                    ADM_error("Cannot handle LATM AAC\n");
+                    trackInfo->wav.frequency=48000;
+                    trackInfo->wav.channels=2;
+                    trackInfo->wav.byterate=128000>>3;
+                    return true;
+                    //
+                    break;
+                }
+                case ADM_TS_AAC_ADTS:
+                    {
+                    ADM_adts2aac  adts;
+                    trackInfo->mux=ADM_TS_MUX_ADTS;
+                    int dummySize=0;
+                    if(false==adts.convert(size,ptr,&dummySize,NULL)) // We dont need the output hence the null
+                        goto again;
+                    adts.getExtraData(&eLen,&eData);
+                    if( eLen!=2) 
+                    {
+                        ADM_error("%d bytes of extradata, expecting 2");
+                        return false;
+                    }
+                    trackInfo->extraDataLen=eLen;
+                    trackInfo->extraData[0]=eData[0];
+                    trackInfo->extraData[1]=eData[1];
+                    ADM_info("AAC extra data : %02x %02x\n",eData[0],eData[1]);
+                    trackInfo->wav.frequency=adts.getFrequency();
+                    trackInfo->wav.channels=adts.getChannels();
+                    trackInfo->wav.byterate=128000>>3;
+                    return true;
+                    }
+                    break;
             }
-            trackInfo->wav.encoding=WAV_AAC;    
-            trackInfo->wav.frequency=adts.getFrequency();
-            trackInfo->wav.channels=adts.getChannels();
-            trackInfo->wav.byterate=128000>>3;
             
-            uint32_t eLen=0;     
-            uint8_t *eData=NULL;
-            adts.getExtraData(&eLen,&eData);
-            
-            if(2!=eLen) 
-            {
-                ADM_error("%d bytes of extradata, expecting 2");
-                return false;
-            }
-            trackInfo->extraDataLen=2;
-            trackInfo->extraData[0]=eData[0];
-            trackInfo->extraData[1]=eData[1];
-            ADM_info("AAC extra data : %02x %02x\n",eData[0],eData[1]);
-            return true;
+            return false;
         }
+        // -------------- /AAC ------------------
         int rd=PROBE_ANALYZE_SIZE;
         if(!p->read(PROBE_ANALYZE_SIZE,audioBuffer))
         {

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_demuxers/MpegTS/ADM_tsIndex.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_demuxers/MpegTS/ADM_tsIndex.cpp	2011-05-04 05:58:38 UTC (rev 7187)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_demuxers/MpegTS/ADM_tsIndex.cpp	2011-05-04 05:58:39 UTC (rev 7188)
@@ -65,6 +65,7 @@
         tsAudioTrackInfo trk;
         trk.esId=tracks[i].trackPid;
         trk.trackType=tracks[i].trackType;
+        trk.mux=ADM_TS_MUX_NONE;
         if(true==tsGetAudioInfo(p,&trk))
         {
               audioTrack.push_back(trk);  
@@ -195,6 +196,7 @@
         qfprintf(index,"%s.fq=%d\n",head,t->wav.frequency);
         qfprintf(index,"%s.chan=%d\n",head,t->wav.channels);
         qfprintf(index,"%s.br=%d\n",head,t->wav.byterate);
+        qfprintf(index,"%s.muxing=%d\n",head,t->mux);
         if(t->extraDataLen)
         {
             qfprintf(index,"%s.extraData=%d",head,t->extraDataLen);

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_demuxers/MpegTS/ADM_tsPatPmt.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_demuxers/MpegTS/ADM_tsPatPmt.cpp	2011-05-04 05:58:38 UTC (rev 7187)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_demuxers/MpegTS/ADM_tsPatPmt.cpp	2011-05-04 05:58:39 UTC (rev 7188)
@@ -154,7 +154,8 @@
         for(int i=0;i<list.size();i++)
         {
             ADM_TS_TRACK_TYPE type=list[i].trackType;
-            if(type==ADM_TS_MPEG_AUDIO || type==ADM_TS_AC3 || type==ADM_TS_AAC || type==ADM_TS_EAC3)
+            if(type==ADM_TS_MPEG_AUDIO || type==ADM_TS_AC3 || type==ADM_TS_AAC_ADTS ||type==ADM_TS_AAC_LATM
+                        || type==ADM_TS_EAC3)
             {
                 TSpacketInfo pkt;
                 t->setPos(0);
@@ -281,17 +282,19 @@
     *str="????";
     switch(type)
     {
-                case 1:case 2: *str= "Mpeg Video";return ADM_TS_MPEG2;break;
-                case 3:case 4: *str= "Mpeg Audio";return ADM_TS_MPEG_AUDIO;break;
-                case 0x11: case 0xF:     *str= "Mpeg AAC";return ADM_TS_AAC;break;
-             //   case 0x10:        *streamType=ADM_STREAM_MPEG4;return "MP4 Video";
-                case 0x1B:  *str= "H264 Video";return ADM_TS_H264;break;
-                case 0x81:  *str= "AC3 (Not sure)";return ADM_TS_AC3;break;
-                case 0x84:  *str= "E-AC3 (Not sure)";return ADM_TS_EAC3;break;
-                case 0xea:  *str= "VC1 (Not sure)";return ADM_TS_VC1;break;
-                case 0x90:  *str= "Presentation graphics (BluRay)";return ADM_TS_UNKNOWN;break;
-                case 0x83:  *str= "TrueHD AC3  (BluRay)";return ADM_TS_AC3;break;
+                case 0x01:case 2: *str= "Mpeg Video";return ADM_TS_MPEG2;break;
+                case 0x03:case 4: *str= "Mpeg Audio";return ADM_TS_MPEG_AUDIO;break;
+                case 0xF:      *str= "Mpeg AAC ADTS";return ADM_TS_AAC_ADTS;break;
+                case 0x11:     *str= "Mpeg AAC LATM";return ADM_TS_AAC_LATM;break;
+                case 0x1B:     *str= "H264 Video";return ADM_TS_H264;break;
+                case 0x81:     *str= "AC3 (Not sure)";return ADM_TS_AC3;break;
+                //case 0x82:     *str= "DTS (Not sure)";return ADM_TS_DTS;break;
+                case 0x83:     *str= "TrueHD AC3  (BluRay)";return ADM_TS_AC3;break;
+                case 0x84:     *str= "E-AC3 (Not sure)";return ADM_TS_EAC3;break;
+                case 0xea:     *str= "VC1 (Not sure)";return ADM_TS_VC1;break;
+                case 0x90:     *str= "Presentation graphics (BluRay)";return ADM_TS_UNKNOWN;break;
                 
+                //   case 0x10:        *streamType=ADM_STREAM_MPEG4;return "MP4 Video";
                 default : break;
     }
     return ADM_TS_UNKNOWN;
@@ -313,16 +316,17 @@
         {
                 int streamType,streamPid,esInfoLength;
                 streamType=r[0];
+                printf("[PMT] StreamType=%d\n",streamType);
                 if(streamType==5) // descriptor
                 {
                     int descriptorLength=r[1];
                     if(descriptorLength+1>packLen) 
                     {
-                        printf("[PMT             Registration length bigger than section\n");
+                        ADM_warning("[PMT             Registration length bigger than section\n");
                         return true;
                     }
-                    printf("[PMT] Registration FCC %c%c%c%c \n",r[2],r[3],r[4],r[5]);
-                    uint8_t *tail=r+1+descriptorLength;
+                    printf("\t[PMT] Registration FCC %c%c%c%c \n",r[2],r[3],r[4],r[5]);
+                    uint8_t *tail=r+2+descriptorLength;
                     packLen-=1+descriptorLength;
                     decodeRegistration(descriptorLength,r);
                     r=tail;
@@ -335,12 +339,12 @@
                 packLen-=5;
                 packLen-=esInfoLength;
                 TrackTypeDescriptor *td=TrackTypeDescriptor::find(streamType);
-                printf("[PMT]           StreamType: 0x%x,<<%s>>\n",streamType,td->desc);    
-                printf("[PMT]           Pid:        0x%x\n",streamPid);
-                printf("[PMT]           Es Info Length: %d (0x%x)\n",esInfoLength,esInfoLength);
+                printf("\t[PMT]           StreamType: 0x%x,<<%s>>\n",streamType,td->desc);    
+                printf("\t[PMT]           Pid:        0x%x\n",streamPid);
+                printf("\t[PMT]           Es Info Length: %d (0x%x)\n",esInfoLength,esInfoLength);
                 if(packLen<1) 
                 {
-                    printf("[PMT             ES Info length bigger than section\n");
+                    ADM_warning("[PMT             ES Info length bigger than section\n");
                     return true;
                 }
                 //trk.trackType=td->trackType;
@@ -352,7 +356,7 @@
                     uint32_t tag,taglen;
                     tag=p[0];
                     taglen=p[1];
-                    printf("[PMT]           Tag :%x len:%d =",tag,taglen);
+                    printf("\t[PMT]           Tag :%x len:%d =",tag,taglen);
                     switch(tag) //http://www.coolstf.com/tsreader/descriptors.html
                     {
                         
@@ -403,10 +407,12 @@
                             printf("[PMT] Buffer size\n");
                             data+=3;
                             break;
-            default: return true;
+            default: 
+                        printf("Unknown registration tag :%d\n",tag);
+                        return true;
 
         }
     }
-
+    return true;
 }
 //EOF

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_demuxers/MpegTS/ADM_tsPatPmt.h
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_demuxers/MpegTS/ADM_tsPatPmt.h	2011-05-04 05:58:38 UTC (rev 7187)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_demuxers/MpegTS/ADM_tsPatPmt.h	2011-05-04 05:58:39 UTC (rev 7188)
@@ -29,10 +29,19 @@
     ADM_TS_H264,
     ADM_TS_MPEG_AUDIO=10,
     ADM_TS_AC3,
-    ADM_TS_AAC,
+    ADM_TS_AAC_ADTS,
+    ADM_TS_AAC_LATM,
     ADM_TS_EAC3,
     ADM_TS_VC1
 }ADM_TS_TRACK_TYPE;
+
+typedef enum
+{
+    ADM_TS_MUX_NONE=0,
+    ADM_TS_MUX_ADTS=1,
+    ADM_TS_MUX_MAX
+}ADM_TS_MUX_TYPE;
+
 /**
     \typedef ADM_TS_TRACK
 */
@@ -52,6 +61,7 @@
     WAVHeader         wav;
     uint32_t          esId;
     ADM_TS_TRACK_TYPE trackType;
+    ADM_TS_MUX_TYPE   mux;
     uint32_t          extraDataLen;
     uint8_t           extraData[ADM_TS_MAX_EXTRADATA];
 }tsAudioTrackInfo;

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_demuxers/MpegTS/ADM_tsReadIndex.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_demuxers/MpegTS/ADM_tsReadIndex.cpp	2011-05-04 05:58:38 UTC (rev 7187)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_demuxers/MpegTS/ADM_tsReadIndex.cpp	2011-05-04 05:58:39 UTC (rev 7188)
@@ -290,7 +290,7 @@
     {
         char header[40];
         char body[40];
-        uint32_t fq,chan,br,codec,pid;
+        uint32_t fq,chan,br,codec,pid,muxing=0;
         sprintf(header,"Track%d.",i);
 #define readInt(x,y) {sprintf(body,"%s"#y,header);x=index->getAsUint32(body);printf("%02d:"#y"=%"LU"\n",i,x);}
 #define readHex(x,y) {sprintf(body,"%s"#y,header);x=index->getAsHex(body);printf("%02x:"#y"=%"LU"\n",i,x);}
@@ -299,13 +299,12 @@
         readInt(chan,chan);
         readInt(codec,codec);
         readHex(pid,pid);
+        readInt(muxing,muxing);
         WAVHeader hdr;
             hdr.frequency=fq;
             hdr.byterate=br;
             hdr.channels=chan;
             hdr.encoding=codec;
-        bool aacAdts=false;
-        if(hdr.encoding==WAV_AAC) aacAdts=true;
         // Look up Track0.extraData line....
         sprintf(body,"Track%d.extraData",i);
         int extraLen=0;
@@ -336,7 +335,7 @@
         {
             ADM_info("No extradata (%s)\n",body);
         }
-        ADM_tsAccess *access=new ADM_tsAccess(name,pid,true,aacAdts,extraLen,extraData);
+        ADM_tsAccess *access=new ADM_tsAccess(name,pid,true,(ADM_TS_MUX_TYPE)muxing,extraLen,extraData);
         if(extraData) delete [] extraData;
         extraData=NULL;
         ADM_tsTrackDescriptor *desc=new ADM_tsTrackDescriptor;



From mean at mail.berlios.de  Wed May  4 07:58:41 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Wed,  4 May 2011 07:58:41 +0200
Subject: [Avidemux-svn-commit] r7189 -
	branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreDemuxerMpeg/include
Message-ID: <20110504055841.75F564813BB@sheep.berlios.de>

Author: mean
Date: 2011-05-04 07:58:41 +0200 (Wed, 04 May 2011)
New Revision: 7189

Modified:
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreDemuxerMpeg/include/ADM_indexFile.h
Log:
[Ts/PS] Bump index file version, added a muxing field in audio section

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreDemuxerMpeg/include/ADM_indexFile.h
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreDemuxerMpeg/include/ADM_indexFile.h	2011-05-04 05:58:39 UTC (rev 7188)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreDemuxerMpeg/include/ADM_indexFile.h	2011-05-04 05:58:41 UTC (rev 7189)
@@ -22,7 +22,7 @@
     \class indexFile
     \brief Read a index file easily
 */
-#define ADM_INDEX_FILE_VERSION 3
+#define ADM_INDEX_FILE_VERSION 4
 #define ADM_INDEX_BUFFER (20*1024)
 /**
     \class dmxToken



From mean at mail.berlios.de  Sat May  7 18:26:01 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Sat,  7 May 2011 18:26:01 +0200
Subject: [Avidemux-svn-commit] r7190 - in branches/avidemux_2.6_branch_mean:
	avidemux_core/ADM_coreAudioParser/include
	avidemux_core/ADM_coreAudioParser/src
	avidemux_core/ADM_coreUtils/include avidemux_core/ADM_coreUtils/src
	avidemux_plugins/ADM_demuxers/MpegTS
Message-ID: <20110507162601.2F69B48133A@sheep.berlios.de>

Author: mean
Date: 2011-05-07 18:26:00 +0200 (Sat, 07 May 2011)
New Revision: 7190

Added:
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreAudioParser/include/ADM_aacLatm.h
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreAudioParser/src/ADM_aacLatm.cpp
Modified:
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreAudioParser/src/CMakeLists.txt
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/include/ADM_getbits.h
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/ADM_getbits.cpp
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_demuxers/MpegTS/ADM_ts.h
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_demuxers/MpegTS/ADM_tsAudio.cpp
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_demuxers/MpegTS/ADM_tsAudioProbe.cpp
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_demuxers/MpegTS/ADM_tsPatPmt.h
Log:
[LATM] Being to add demuxer for LOAS/LATM (AAC in mpeg TS)

Added: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreAudioParser/include/ADM_aacLatm.h
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreAudioParser/include/ADM_aacLatm.h	                        (rev 0)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreAudioParser/include/ADM_aacLatm.h	2011-05-07 16:26:00 UTC (rev 7190)
@@ -0,0 +1,72 @@
+/***************************************************************************
+  \file ADM_aacLatm.h
+  \brief Extract AAC frames from LATM
+  Derived from vlc file mpeg4audio.c
+                Copyright (C) 2001, 2002, 2006 the VideoLAN team
+                * $Id: 3e4561c09d213a64031992f729c671bed66e824c $
+                *
+                * Authors: Laurent Aimar <fenrir at via.ecp.fr>
+                *          Gildas Bazin <gbazin at netcourrier.com>
+
+ ***************************************************************************/
+
+/***************************************************************************
+ *                                                                         *
+ *   This program is free software; you can redistribute it and/or modify  *
+ *   it under the terms of the GNU General Public License as published by  *
+ *   the Free Software Foundation; either version 2 of the License, or     *
+ *   (at your option) any later version.                                   *
+ *                                                                         *
+ ***************************************************************************/
+
+#ifndef ADM_AAC_LATM
+#define ADM_AAC_LATM
+#include "ADM_getbits.h"
+/**
+    \class ADM_latm2aac
+*/
+#define AAC_LATM_MAX_EXTRA 10
+#define LATM_MAX_LAYER     64
+#define LATM_MAX_BUFFER    8192
+typedef struct
+{
+    int      nbLayers;
+    int      payload[LATM_MAX_LAYER];
+    int      frameLengthType[LATM_MAX_LAYER];
+    int      audioMuxVersion;
+    int      audioMuxVersionA;
+    bool     allStreamsSameTimeFraming;
+    bool     gotConfig;
+}latmConf_t;
+
+
+class ADM_latm2aac
+{
+private:
+
+                uint32_t extraLen;
+                uint8_t  extraData[AAC_LATM_MAX_EXTRA];
+                uint32_t fq,channels;
+                bool     readAudioMux( getBits &bits );
+                bool     demuxLatm(uint64_t date,uint8_t *start,uint32_t size);
+                bool     AudioSpecificConfig(getBits &bits,int &bitsConsumed);
+                bool     readStreamMuxConfig(getBits &bits);
+                int      readPayloadInfoLength(getBits &bits);
+                bool     readPayload(getBits &bits, int size, uint8_t *to, int max);
+                uint8_t  buffer[LATM_MAX_BUFFER];
+                uint32_t bufferLen;
+                latmConf_t conf;
+public:
+                bool getExtraData(uint32_t *len,uint8_t **data);
+                bool pushData (int incomingLen,uint8_t *intData,uint64_t date);
+                bool empty(void);
+                bool getData(uint64_t *date, uint32_t *len, uint8_t *data,uint32_t maxData);
+                bool flush(void);
+                int  getFrequency(void);
+                int  getChannels(void);
+                     ADM_latm2aac();
+                    ~ADM_latm2aac();
+
+};
+#endif
+

Added: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreAudioParser/src/ADM_aacLatm.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreAudioParser/src/ADM_aacLatm.cpp	                        (rev 0)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreAudioParser/src/ADM_aacLatm.cpp	2011-05-07 16:26:00 UTC (rev 7190)
@@ -0,0 +1,473 @@
+/***************************************************************************
+  \file ADM_aacLatm.cpp
+  \brief  Extract aac packet from LOAS/LATM stream
+     Derived from vlc code, seel ADM_aacLatm.h for vlc (c)
+ ***************************************************************************/
+
+/***************************************************************************
+ *                                                                         *
+ *   This program is free software; you can redistribute it and/or modify  *
+ *   it under the terms of the GNU General Public License as published by  *
+ *   the Free Software Foundation; either version 2 of the License, or     *
+ *   (at your option) any later version.                                   *
+ *                                                                         *
+ ***************************************************************************/
+
+#include <math.h>
+#include "ADM_default.h"
+extern "C" {
+#include "libavcodec/avcodec.h"
+}
+#include "ADM_aacLatm.h"
+
+#define COOKIE   ((AVBitStreamFilterContext *)cookie)
+#define CONTEXT  ((AVCodecContext *)codec)
+
+#define xdebug ADM_info
+
+static const int aacChannels[16]=
+{
+0, //0: Defined in AOT Specifc Config
+1, //1: 1 channel: front-center
+2, //2: 2 channels: front-left, front-right
+3, //3: 3 channels: front-center, front-left, front-right
+4, //4: 4 channels: front-center, front-left, front-right, back-center
+5, // 5: 5 channels: front-center, front-left, front-right, back-left, back-right
+6, // 6: 6 channels: front-center, front-left, front-right, back-left, back-right, LFE-channel
+8, // 7: 8 channels: front-center, front-left, front-right, side-left, side-right, back-left, back-right, LFE-channel
+0,0,0,0,
+0,0,0,0,
+};
+
+static 	uint32_t aacSampleRate[16]=
+{
+	96000, 88200, 64000, 48000,
+	44100, 32000, 24000, 22050,
+	16000, 12000, 11025,  8000,
+	0,     0,     0,     0 
+};
+
+
+/**
+    \fn getExtraData
+    \brief extract extradata from adts/aac stream. You must have converted successfully at leat one frame.
+*/
+bool ADM_latm2aac::getExtraData(uint32_t *len,uint8_t **data)
+{
+    *data=extraData;
+    *len=extraLen;
+    return true;
+}
+/**
+    \fn getFrequency
+    \brief get stream frequency. Convert must have been called ok once.
+*/
+int ADM_latm2aac::getFrequency(void)
+{
+        return fq;
+}
+/**
+    \fn getChannels 
+    \brief returns # of channels. Convert must have been called ok once.
+*/
+int ADM_latm2aac::getChannels(void)
+{       
+        return channels;
+}
+/**
+
+*/
+static int  LatmGetValue( getBits bits )
+{
+    int i_bytes = bits.get( 2 );
+    int v = 0;
+    int i;
+    for( i = 0; i < i_bytes; i++ )
+        v = (v << 8) + bits.get(8);
+    return v;
+}
+static int read31plus(getBits &bits)
+{
+    int type=bits.get(5);
+    if(type==31)
+        type=32+bits.get(6);
+    return type;
+}
+/**
+    \fn AudioSpecificConfig
+*/
+bool ADM_latm2aac::AudioSpecificConfig(getBits &bits,int &bitsConsumed)
+{
+    int consumed=bits.getConsumedBits();
+    getBits myBits(bits); // get a copy, needed to extract extra data
+
+
+    int audioObjectType=read31plus(bits);
+    int samplingFrequencyIndex=bits.get(4);
+    int extensionAudioObjectType=0;
+    if(samplingFrequencyIndex==0xf)
+    {
+            fq=(bits.get(8)<<16)+bits.get(16);
+    }else
+    {
+        fq=aacSampleRate[samplingFrequencyIndex];
+    }
+    int channelConfiguration=bits.get(4);
+    channels=aacChannels[channelConfiguration];
+    bool sbrPresent=false;
+    printf("ObjectType=%d\n",audioObjectType);
+    
+    
+    switch(audioObjectType)
+    {
+        case 2: // GASpecificConfig
+                {
+                bool frameLength=bits.get(1);
+                bool dependsOnCoreCoder=bits.get(1);
+                if(dependsOnCoreCoder) bits.skip(14);
+                bool extensionFlag=bits.get(1);
+                if(!channelConfiguration)
+                {
+                    ADM_error("No channel configuraiton\n");
+                    return false;
+                }
+                if(extensionFlag)
+                {
+                    ADM_error("Extension flag\n");
+                    return false;
+                }
+                }
+                break;
+        default:
+                ADM_error("AudoObjecttype =%d not handled\n",audioObjectType);
+                return false;
+    }
+    consumed=bits.getConsumedBits()-consumed;
+    bitsConsumed=consumed;
+    xdebug("%d bits consumed\n",consumed);
+    extraLen=(consumed+7)/8;
+#if 0 // pad left
+    // fill to get 8 bits..
+    int top=consumed&7;
+    if(!top) top=8;
+    extraData[0]=myBits.get(top);
+    for(int i=1;i<extraLen;i++)
+    {
+            extraData[i]=myBits.get(8);
+    }
+#else // pad right
+    for(int i=0;i<extraLen;i++)
+    {
+            int rd=consumed;
+            if(rd>8) rd=8;
+            extraData[i]=(myBits.get(rd))<<(8-rd);
+            consumed-=rd;
+    }
+
+#endif
+    xdebug("Got %d extraData %x %x\n",extraLen,extraData[0],extraData[1]);
+    xdebug("Frequency %d, channels %d\n",fq,channels);
+    conf.gotConfig=true;
+    return true;
+
+}
+/**
+    \fn readPayloadInfoLength
+*/
+int ADM_latm2aac::readPayloadInfoLength(getBits &bits)
+{
+    if(conf.allStreamsSameTimeFraming)
+    {
+        // handle layer...
+        if(conf.frameLengthType[0]==0)
+        {
+            int l=0;
+            while(1)
+            {
+                int tmp=bits.get(8);
+                l+=tmp;
+                if(tmp!=255) break;
+            }
+            xdebug("Payload Len=%d\n",l);
+            return l;
+        }
+    }else
+    {
+        ADM_error("cannot handle allStreamSameTimeFraming==0\n");
+        return 0;
+    }
+}
+/**
+
+*/
+bool ADM_latm2aac::readPayload(getBits &bits, int size, uint8_t *to, int max)
+{
+    if(conf.allStreamsSameTimeFraming)
+    {
+            ADM_info("Payload %d \n",size);
+            if(size>max)
+            {
+                    ADM_warning("Packet too big %d vs %d\n",size,max);
+                    return false;
+            }
+        
+            for(int i=0;i<size;i++)
+            {
+                if(conf.gotConfig)
+                    buffer[i++]=bits.get(8);
+                else
+                    bits.skip(8);
+            }
+            if(conf.gotConfig)
+                bufferLen=size;
+            return true;
+    }else
+    {
+
+        ADM_error("cannot handle allStreamSameTimeFraming==0\n");
+        return false;
+    }
+}
+/**
+    \fn readStreamMuxConfig
+*/
+bool ADM_latm2aac::readStreamMuxConfig(getBits &bits)
+{
+ // streamMuxConfig
+        conf.audioMuxVersion = bits.get(1);
+        if(conf.audioMuxVersion==1)
+            conf.audioMuxVersionA = bits.get(1);
+        if( conf.audioMuxVersionA != 0 ) /* support only A=0 */
+        {
+            ADM_warning("LATM : versionA!=0, not supported\n");
+            return false;
+        }
+    
+        if( conf.audioMuxVersion == 1 )
+        {
+            LatmGetValue(bits); /* taraBufferFullness */
+        }
+        int streamCnt=0;
+        conf.allStreamsSameTimeFraming=bits.get(1);
+        xdebug("AllSTreamSameTimeFraming =%d\n",conf.allStreamsSameTimeFraming);
+        int numSubFrames=bits.get(6)+1;
+        int numbSubProgram=1+bits.get(4);
+
+        xdebug("NumSubFrame=%d, numSubProgram=%d\n",numSubFrames,numbSubProgram);
+
+        if(numSubFrames!=1 || numbSubProgram!=1  )
+        {
+            ADM_warning("LATM: only supports subframe=1, subprogram=1\n");
+            return false;
+        }
+
+        conf.nbLayers=1+bits.get(3);
+        xdebug("NumLayer=%d\n",conf.nbLayers);
+    
+        for(int i=0;i<conf.nbLayers;i++)
+        {
+            bool useSameConfig=false;
+            int consumed=0;
+            if(i)
+                useSameConfig=bits.get(1);
+            if(!useSameConfig)
+            {
+                if(!conf.audioMuxVersion)
+                {  // audio specific config
+                    if(false==AudioSpecificConfig(bits,consumed))
+                    {
+                        ADM_warning("Error reading audioSpecificConfig\n");
+                        return false;
+                    }
+
+                }else
+                {
+                    int ascLen=LatmGetValue(bits);
+                    int consumed;
+                    //ascLen-=audioSpecicConfig
+                    //fillBits(ascLen)
+                    if(false==AudioSpecificConfig(bits,consumed))
+                    {
+                        ADM_warning("Error reading audioSpecificConfig\n");
+                        return false;
+                    }
+                    if(consumed>ascLen)
+                    {
+                        ADM_warning("Too much bits consumed in AudioSpecificConfig (%d/%d)\n",consumed,ascLen);
+                        return false;                        
+                    }
+                    ascLen-=consumed;
+                    while(ascLen)
+                    {
+                        int r=ascLen;
+                        if(r>16) r=16;
+                        bits.skip(r);
+                        ascLen-=r;
+                    }
+                }
+            }
+            // frameLengthType
+            conf.frameLengthType[i]=bits.get(3);
+            xdebug("FrameLengthType=%d\n",conf.frameLengthType[i]);
+            if(conf.frameLengthType[i]!=0)
+            {
+                ADM_error("frameLengthType!=0 not supported (%d)\n",conf.frameLengthType[i]);
+                return false;
+            }
+            int latmBufferFulless=bits.get(8);
+            int otherData=bits.get(1);
+            int otherDataLen=0;
+            if(otherData)
+            {
+                if(conf.audioMuxVersion==1)
+                    otherDataLen=LatmGetValue(bits);
+                else
+                {
+                    while(1)
+                    {
+                        int esc=bits.get(1);
+                        int data=bits.get(8);
+                        otherDataLen=(otherDataLen<<8)+data;
+                        if(!esc) break;
+                    }
+                }
+                    
+            }
+            int crc=bits.get(1);
+            if(crc) bits.get(8);
+        }
+        return true;
+}
+/**
+    \fn readStreamMux
+    \brief from vlc
+*/
+bool  ADM_latm2aac::readAudioMux( getBits &bits )
+{
+
+    if( !bits.get(1) ) // use SameStreamMux
+    {
+       if(false==readStreamMuxConfig(bits)) return false;
+    } // streamMuxConfig
+//    if(!numSubFrames) return false;
+    if(conf.audioMuxVersionA==0)
+    {
+       // only 1 subFrames ATM... for(int i=0;i<numSubFrames;i++)
+        {
+            int len=readPayloadInfoLength(bits);
+            if(!len) return false;
+            
+            bool r=readPayload(bits,len,buffer,LATM_MAX_BUFFER);
+            bufferLen=len;
+            bits.align();
+            return r;
+        }
+        // otherdata
+    }
+    return true;
+}
+
+
+
+/**
+    \fn demuxLatm
+    \brief extract extrdata + aac frame from LATM
+*/
+bool ADM_latm2aac::demuxLatm(uint64_t date,uint8_t *start,uint32_t size)
+{
+    getBits  bits(size,start);
+    return readAudioMux(bits);
+}
+/**
+    \fn pushData
+    \brief Check for LOAS sync word, extract LATM frames
+*/
+
+bool ADM_latm2aac::pushData(int incomingLen,uint8_t *inData,uint64_t time)
+{
+    // Lookup sync
+    uint8_t *end=inData+incomingLen;
+    uint8_t *start=inData;
+    xdebug("Pushing data %d bytes\n",incomingLen);
+    while(start<end)
+    {
+        int key=(start[0]<<8)+start[1];
+        if((key & 0xffe0)!=0x56e0)
+        {
+            ADM_warning("Sync lost\n");
+            return true;
+        }
+        uint32_t len=start[2]+((key & 0x1f)<<8);
+        start+=3;
+        if(start+len>end)
+        {
+            ADM_warning("Not enough data, need %d, got %d\n",len,(int)(end-start));
+            return true;
+        }
+        ADM_info("Found LATM : size %d\n",len);
+        demuxLatm(time,start,len);
+        // LATM demux
+        start+=len;
+    }
+    xdebug("-- end of this LOAS frame --\n");
+    return true;
+}
+/**
+    \fn ctor
+*/
+
+ADM_latm2aac::ADM_latm2aac(void)
+{
+                fq=0;
+                channels=0;
+                extraLen=0;
+                memset(&conf,0,sizeof(conf));
+                conf.gotConfig=false;
+                bufferLen=0;
+}
+/**
+    \fn dtor
+*/
+
+ADM_latm2aac::~ADM_latm2aac()
+{
+}
+
+/**
+   \fn empty
+   \brief returns true if output packet queue is empty
+*/
+bool ADM_latm2aac::empty()
+{
+    if(bufferLen==0) return true;
+    return false;
+}
+/**
+    \fn flush
+    \brief flush packet queue. Must be called when seeking
+*/
+bool ADM_latm2aac::flush()
+{
+   bufferLen=0;
+   return true;
+}
+/**
+    \fn getData
+    \brief pop one packet from packet queue
+*/
+bool ADM_latm2aac::getData(uint64_t *time,uint32_t *len, uint8_t *data, uint32_t maxSize)
+{
+    if(bufferLen==0) return false;
+    if(bufferLen>maxSize)
+    {
+        ADM_warning("Buffer too small\n");
+        bufferLen=0;
+        return false;
+
+    }
+    memcpy(data,buffer,bufferLen);
+    *len=bufferLen;
+    bufferLen=0;
+    return true;
+}
+//EOF

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreAudioParser/src/CMakeLists.txt
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreAudioParser/src/CMakeLists.txt	2011-05-04 05:58:41 UTC (rev 7189)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreAudioParser/src/CMakeLists.txt	2011-05-07 16:26:00 UTC (rev 7190)
@@ -6,6 +6,7 @@
 ADM_dcainfo.cpp  
 ADM_eac3info.cpp
 ADM_aacadts.cpp
+ADM_aacLatm.cpp
 )	
 #*************************************************
 ADD_DEFINITIONS(-DADM_LEGACY_PROGGY)

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/include/ADM_getbits.h
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/include/ADM_getbits.h	2011-05-04 05:58:41 UTC (rev 7189)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/include/ADM_getbits.h	2011-05-07 16:26:00 UTC (rev 7190)
@@ -19,6 +19,7 @@
 protected:
          void *ctx;
 public:
+                getBits(const getBits &source);
                 getBits(int bufferSizeInBytes, uint8_t *buffer);
                 ~getBits();
             int get(int nb);
@@ -27,6 +28,7 @@
             int getUEG31(void);
             int skip(int nb);
             int getConsumedBits(void);
+            void align(void);
 };
 
 

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/ADM_getbits.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/ADM_getbits.cpp	2011-05-04 05:58:41 UTC (rev 7189)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/ADM_getbits.cpp	2011-05-07 16:26:00 UTC (rev 7190)
@@ -37,6 +37,20 @@
 /**
     \fn ctor
 */
+getBits::getBits(const getBits &source)
+{
+    GetBitContext *c=new  GetBitContext;
+    ctx=(void *)c;
+    *c=*(GetBitContext *)source.ctx;
+
+}
+void getBits::align(void)
+{
+    align_get_bits((GetBitContext *)ctx);
+}
+/**
+    \fn ctor
+*/
 getBits::getBits(int bufferSize, uint8_t *buffer)
 {
     GetBitContext *c=new  GetBitContext;

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_demuxers/MpegTS/ADM_ts.h
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_demuxers/MpegTS/ADM_ts.h	2011-05-04 05:58:41 UTC (rev 7189)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_demuxers/MpegTS/ADM_ts.h	2011-05-07 16:26:00 UTC (rev 7190)
@@ -28,7 +28,7 @@
 #include <vector>
 #include "ADM_coreDemuxerMpeg.h"
 #include "ADM_aacadts.h"
-
+#include "ADM_aacLatm.h"
 using std::vector;
 
 /**
@@ -44,6 +44,7 @@
                 uint32_t        videoCodec;
                 ADM_TS_MUX_TYPE muxing;
                 ADM_adts2aac    adts;
+                ADM_latm2aac    latm;
 public:
                 vector          <ADM_mpgAudioSeekPoint >seekPoints;
 public:

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_demuxers/MpegTS/ADM_tsAudio.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_demuxers/MpegTS/ADM_tsAudio.cpp	2011-05-04 05:58:41 UTC (rev 7189)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_demuxers/MpegTS/ADM_tsAudio.cpp	2011-05-07 16:26:00 UTC (rev 7190)
@@ -104,7 +104,7 @@
 bool      ADM_tsAccess::goToTime(uint64_t timeUs)
 {
     // Convert time in us to scaled 90 kHz tick
-    
+    latm.flush();
     if(timeUs<seekPoints[0].dts)
     {
             aprintf("[PsAudio] Requested %"LU" tick before 1st seek point at :%"LU"\n",(uint32_t)timeUs/1000,(uint32_t)seekPoints[0].dts/1000);
@@ -147,25 +147,56 @@
 */
 bool      ADM_tsAccess::getPacket(uint8_t *buffer, uint32_t *size, uint32_t maxSize,uint64_t *dts)
 {
+int retries=10;
+again:
 uint64_t p,d,start;
     if(false==demuxer.getNextPES(packet)) return false;
     int avail=packet->payloadSize-packet->offset;
     if(avail>maxSize) ADM_assert(0);
     *size=avail;
     // If it is adts, ask ffmpeg to unwrap it...
-    if(ADM_TS_MUX_ADTS==muxing)
+    switch(muxing)
     {
-        bool r=false;
-        int outsize=0;
-        *size=0;
-        r=adts.convert(avail,packet->payload+packet->offset,&outsize,buffer);
-        if(false==r) return false;
-        *size=outsize;
-    }else
-    {
-        memcpy(buffer,packet->payload+packet->offset,avail);
-    }
-    *dts=timeConvert(packet->pts);
+        case ADM_TS_MUX_ADTS:
+            {
+                    bool r=false;
+                    int outsize=0;
+                    *size=0;
+                    r=adts.convert(avail,packet->payload+packet->offset,&outsize,buffer);
+                    if(false==r) return false;
+                    *size=outsize;
+                    *dts=timeConvert(packet->pts);
+                    break;
+            }
+        case ADM_TS_MUX_NONE:
+            {
+                memcpy(buffer,packet->payload+packet->offset,avail);
+                *dts=timeConvert(packet->pts);
+                break;
+            }
+        case ADM_TS_MUX_LATM:
+            {
+                // Try to get one...
+                
+                if(!retries)
+                {
+                    ADM_warning("No packet out of latm\n");
+                    return false;   
+                }
+                if(latm.empty()==true)
+                {
+                        latm.pushData(avail,packet->payload+packet->offset,packet->pts);
+                        retries--;
+                        goto again;
+                 }
+                 uint64_t myPts;
+                 latm.getData(&myPts,size,buffer,maxSize);
+                 *dts=timeConvert(myPts);
+                 break;
+            }
+        default:
+            ADM_assert(0);
+     }
     if(*dts!=ADM_NO_PTS) 
     {
         aprintf("[psAudio] getPacket dts = %"LU" ms\n",(uint32_t)*dts/1000);

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_demuxers/MpegTS/ADM_tsAudioProbe.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_demuxers/MpegTS/ADM_tsAudioProbe.cpp	2011-05-04 05:58:41 UTC (rev 7189)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_demuxers/MpegTS/ADM_tsAudioProbe.cpp	2011-05-07 16:26:00 UTC (rev 7190)
@@ -25,6 +25,7 @@
 #include "ADM_mp3info.h"
 #include "ADM_dcainfo.h"
 #include "ADM_aacadts.h"
+#include "ADM_aacLatm.h"
 // Number of video packet seen to be enough to sample the audio tracks
 #define PROBE_PACKET_VIDEO_COUNT 500
 // Max size of a packet. Usually it is a bit more than 2300, so 10000 should be safe
@@ -111,11 +112,38 @@
                 default:
                 case ADM_TS_AAC_LATM:
                 {
-                    ADM_error("Cannot handle LATM AAC\n");
-                    trackInfo->wav.frequency=48000;
-                    trackInfo->wav.channels=2;
-                    trackInfo->wav.byterate=128000>>3;
-                    return true;
+                    ADM_latm2aac latm;
+                    ADM_info("Looking up LATM info");
+                    retries=20;
+                    while(retries)
+                    {
+                        ptr=pes.payload+pes.offset;
+                        size=pes.payloadSize-pes.offset;
+                        latm.flush();
+                        latm.pushData(size,ptr,0);
+                        if(latm.getFrequency())
+                        {
+                            ADM_assert(latm.getExtraData(&eLen,&eData));
+                            trackInfo->wav.frequency=latm.getFrequency();
+                            trackInfo->wav.channels=latm.getChannels();
+                            trackInfo->wav.byterate=128000>>3;
+                            trackInfo->extraDataLen=eLen;
+                            trackInfo->extraData[0]=eData[0];
+                            trackInfo->extraData[1]=eData[1];
+                            trackInfo->mux=ADM_TS_MUX_LATM;
+                            ADM_info("AAC extra data : %02x %02x\n",eData[0],eData[1]);
+                            return true;
+                        }
+                        // next packet
+                        retries--;
+                        if(false==p->getNextPES(&pes))
+                        {
+                            ADM_error("Cannot get next PES packet for LATM extradata\n");
+                            return false;
+                        }
+                    }
+                    ADM_error("LATM : Cannot get codec extra data\n");
+                    return false;
                     //
                     break;
                 }

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_demuxers/MpegTS/ADM_tsPatPmt.h
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_demuxers/MpegTS/ADM_tsPatPmt.h	2011-05-04 05:58:41 UTC (rev 7189)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_demuxers/MpegTS/ADM_tsPatPmt.h	2011-05-07 16:26:00 UTC (rev 7190)
@@ -39,6 +39,7 @@
 {
     ADM_TS_MUX_NONE=0,
     ADM_TS_MUX_ADTS=1,
+    ADM_TS_MUX_LATM=2,
     ADM_TS_MUX_MAX
 }ADM_TS_MUX_TYPE;
 



From mean at mail.berlios.de  Sat May  7 18:26:02 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Sat,  7 May 2011 18:26:02 +0200
Subject: [Avidemux-svn-commit] r7191 - in
	branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreAudioParser:
	include src
Message-ID: <20110507162602.A61B348133A@sheep.berlios.de>

Author: mean
Date: 2011-05-07 18:26:02 +0200 (Sat, 07 May 2011)
New Revision: 7191

Modified:
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreAudioParser/include/ADM_aacLatm.h
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreAudioParser/src/ADM_aacLatm.cpp
Log:
[LATM] Not working but close LOAS/LATM decoder for AAC in TS audio

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreAudioParser/include/ADM_aacLatm.h
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreAudioParser/include/ADM_aacLatm.h	2011-05-07 16:26:00 UTC (rev 7190)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreAudioParser/include/ADM_aacLatm.h	2011-05-07 16:26:02 UTC (rev 7191)
@@ -22,12 +22,15 @@
 #ifndef ADM_AAC_LATM
 #define ADM_AAC_LATM
 #include "ADM_getbits.h"
+#include <list>
 /**
     \class ADM_latm2aac
 */
-#define AAC_LATM_MAX_EXTRA 10
-#define LATM_MAX_LAYER     64
-#define LATM_MAX_BUFFER    8192
+#define AAC_LATM_MAX_EXTRA      10
+#define LATM_MAX_LAYER          64
+#define LATM_MAX_BUFFER_SIZE    8192
+#define LATM_NB_BUFFERS         16
+
 typedef struct
 {
     int      nbLayers;
@@ -40,21 +43,29 @@
 }latmConf_t;
 
 
+typedef struct
+{
+        uint8_t  buffer[LATM_MAX_BUFFER_SIZE];
+        uint32_t bufferLen;
+        uint64_t dts;
+}latmBuffer;
+
 class ADM_latm2aac
 {
 private:
-
+                latmBuffer buffers[LATM_NB_BUFFERS];
+                std::list <latmBuffer *> listOfFreeBuffers;
+                std::list <latmBuffer *> listOfUsedBuffers;
                 uint32_t extraLen;
                 uint8_t  extraData[AAC_LATM_MAX_EXTRA];
                 uint32_t fq,channels;
-                bool     readAudioMux( getBits &bits );
+                bool     readAudioMux(uint64_t dts, getBits &bits );
                 bool     demuxLatm(uint64_t date,uint8_t *start,uint32_t size);
                 bool     AudioSpecificConfig(getBits &bits,int &bitsConsumed);
                 bool     readStreamMuxConfig(getBits &bits);
                 int      readPayloadInfoLength(getBits &bits);
-                bool     readPayload(getBits &bits, int size, uint8_t *to, int max);
-                uint8_t  buffer[LATM_MAX_BUFFER];
-                uint32_t bufferLen;
+                bool     readPayload(getBits &bits, uint64_t dts,int size);
+
                 latmConf_t conf;
 public:
                 bool getExtraData(uint32_t *len,uint8_t **data);

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreAudioParser/src/ADM_aacLatm.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreAudioParser/src/ADM_aacLatm.cpp	2011-05-07 16:26:00 UTC (rev 7190)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreAudioParser/src/ADM_aacLatm.cpp	2011-05-07 16:26:02 UTC (rev 7191)
@@ -178,7 +178,7 @@
 {
     if(conf.allStreamsSameTimeFraming)
     {
-        // handle layer...
+        // handle layer..., only one accepted ATM
         if(conf.frameLengthType[0]==0)
         {
             int l=0;
@@ -198,28 +198,37 @@
     }
 }
 /**
-
+    \fn readPayload
 */
-bool ADM_latm2aac::readPayload(getBits &bits, int size, uint8_t *to, int max)
+bool ADM_latm2aac::readPayload(getBits &bits, uint64_t dts,int size)
 {
     if(conf.allStreamsSameTimeFraming)
     {
             ADM_info("Payload %d \n",size);
-            if(size>max)
+            if(size>LATM_MAX_BUFFER_SIZE)
             {
-                    ADM_warning("Packet too big %d vs %d\n",size,max);
+                    ADM_warning("Packet too big %d vs %d\n",size,LATM_MAX_BUFFER_SIZE);
                     return false;
             }
         
-            for(int i=0;i<size;i++)
+            // try to get a buffer...
+            if(!listOfFreeBuffers.size())
             {
-                if(conf.gotConfig)
-                    buffer[i++]=bits.get(8);
-                else
-                    bits.skip(8);
+                    ADM_error("No free buffer!\n");
+                    return false;
             }
-            if(conf.gotConfig)
-                bufferLen=size;
+            latmBuffer *b=listOfFreeBuffers.back();
+            listOfFreeBuffers.pop_back();
+            b->dts=dts;
+            for(int i=0;i<size;i++)
+            {                
+                    b->buffer[i]=bits.get(8);
+            }
+            b->bufferLen=size;
+            if(!conf.gotConfig)
+                listOfFreeBuffers.push_back(b);
+            else
+                listOfUsedBuffers.push_back(b);
             return true;
     }else
     {
@@ -342,7 +351,7 @@
     \fn readStreamMux
     \brief from vlc
 */
-bool  ADM_latm2aac::readAudioMux( getBits &bits )
+bool  ADM_latm2aac::readAudioMux( uint64_t dts,getBits &bits )
 {
 
     if( !bits.get(1) ) // use SameStreamMux
@@ -357,8 +366,7 @@
             int len=readPayloadInfoLength(bits);
             if(!len) return false;
             
-            bool r=readPayload(bits,len,buffer,LATM_MAX_BUFFER);
-            bufferLen=len;
+            bool r=readPayload(bits,dts,len);
             bits.align();
             return r;
         }
@@ -376,14 +384,14 @@
 bool ADM_latm2aac::demuxLatm(uint64_t date,uint8_t *start,uint32_t size)
 {
     getBits  bits(size,start);
-    return readAudioMux(bits);
+    return readAudioMux(date,bits);
 }
 /**
     \fn pushData
     \brief Check for LOAS sync word, extract LATM frames
 */
 
-bool ADM_latm2aac::pushData(int incomingLen,uint8_t *inData,uint64_t time)
+bool ADM_latm2aac::pushData(int incomingLen,uint8_t *inData,uint64_t dts)
 {
     // Lookup sync
     uint8_t *end=inData+incomingLen;
@@ -405,7 +413,8 @@
             return true;
         }
         ADM_info("Found LATM : size %d\n",len);
-        demuxLatm(time,start,len);
+        demuxLatm(dts,start,len);
+        dts=ADM_NO_PTS;
         // LATM demux
         start+=len;
     }
@@ -423,7 +432,8 @@
                 extraLen=0;
                 memset(&conf,0,sizeof(conf));
                 conf.gotConfig=false;
-                bufferLen=0;
+                for(int i=0;i<LATM_NB_BUFFERS;i++)
+                    listOfFreeBuffers.push_back(&(buffers[i]));
 }
 /**
     \fn dtor
@@ -439,7 +449,7 @@
 */
 bool ADM_latm2aac::empty()
 {
-    if(bufferLen==0) return true;
+    if(listOfUsedBuffers.size()==0) return true;
     return false;
 }
 /**
@@ -448,7 +458,10 @@
 */
 bool ADM_latm2aac::flush()
 {
-   bufferLen=0;
+   listOfFreeBuffers.clear();
+   listOfUsedBuffers.clear();
+   for(int i=0;i<LATM_NB_BUFFERS;i++)
+                    listOfFreeBuffers.push_back(&(buffers[i]));
    return true;
 }
 /**
@@ -457,17 +470,22 @@
 */
 bool ADM_latm2aac::getData(uint64_t *time,uint32_t *len, uint8_t *data, uint32_t maxSize)
 {
-    if(bufferLen==0) return false;
-    if(bufferLen>maxSize)
+    if(empty()) return false;
+    printf("%d slogs in latm buffers\n",listOfUsedBuffers.size());
+    latmBuffer *b=listOfUsedBuffers.front();
+    listOfUsedBuffers.pop_front();
+    listOfFreeBuffers.push_back(b);
+    if(b->bufferLen>maxSize)
     {
         ADM_warning("Buffer too small\n");
-        bufferLen=0;
         return false;
 
     }
-    memcpy(data,buffer,bufferLen);
-    *len=bufferLen;
-    bufferLen=0;
+    memcpy(data,b->buffer,b->bufferLen);
+    *len=b->bufferLen;
+    b->bufferLen=0;
+    *time=b->dts;
+    printf("   read %d bytes\n",*len);
     return true;
 }
 //EOF



From mean at mail.berlios.de  Sat May  7 20:03:59 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Sat,  7 May 2011 20:03:59 +0200
Subject: [Avidemux-svn-commit] r7192 - in branches/avidemux_2.6_branch_mean:
	avidemux_core/ADM_coreAudioParser/src
	avidemux_plugins/ADM_demuxers/MpegTS
Message-ID: <20110507180359.1EC2E481343@sheep.berlios.de>

Author: mean
Date: 2011-05-07 20:03:58 +0200 (Sat, 07 May 2011)
New Revision: 7192

Modified:
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreAudioParser/src/ADM_aacLatm.cpp
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_demuxers/MpegTS/ADM_tsAudio.cpp
Log:
[LATM] Fix packet queue management, working except SBR

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreAudioParser/src/ADM_aacLatm.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreAudioParser/src/ADM_aacLatm.cpp	2011-05-07 16:26:02 UTC (rev 7191)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreAudioParser/src/ADM_aacLatm.cpp	2011-05-07 18:03:58 UTC (rev 7192)
@@ -23,7 +23,11 @@
 #define COOKIE   ((AVBitStreamFilterContext *)cookie)
 #define CONTEXT  ((AVCodecContext *)codec)
 
+#if 0
 #define xdebug ADM_info
+#else
+#define xdebug(...) {}
+#endif
 
 static const int aacChannels[16]=
 {
@@ -115,7 +119,7 @@
     int channelConfiguration=bits.get(4);
     channels=aacChannels[channelConfiguration];
     bool sbrPresent=false;
-    printf("ObjectType=%d\n",audioObjectType);
+    xdebug("ObjectType=%d\n",audioObjectType);
     
     
     switch(audioObjectType)
@@ -204,7 +208,7 @@
 {
     if(conf.allStreamsSameTimeFraming)
     {
-            ADM_info("Payload %d \n",size);
+            xdebug("Payload %d \n",size);
             if(size>LATM_MAX_BUFFER_SIZE)
             {
                     ADM_warning("Packet too big %d vs %d\n",size,LATM_MAX_BUFFER_SIZE);
@@ -412,7 +416,7 @@
             ADM_warning("Not enough data, need %d, got %d\n",len,(int)(end-start));
             return true;
         }
-        ADM_info("Found LATM : size %d\n",len);
+        xdebug("Found LATM : size %d\n",len);
         demuxLatm(dts,start,len);
         dts=ADM_NO_PTS;
         // LATM demux
@@ -471,7 +475,7 @@
 bool ADM_latm2aac::getData(uint64_t *time,uint32_t *len, uint8_t *data, uint32_t maxSize)
 {
     if(empty()) return false;
-    printf("%d slogs in latm buffers\n",listOfUsedBuffers.size());
+    xdebug("%d slogs in latm buffers\n",listOfUsedBuffers.size());
     latmBuffer *b=listOfUsedBuffers.front();
     listOfUsedBuffers.pop_front();
     listOfFreeBuffers.push_back(b);
@@ -485,7 +489,7 @@
     *len=b->bufferLen;
     b->bufferLen=0;
     *time=b->dts;
-    printf("   read %d bytes\n",*len);
+    xdebug("   read %d bytes\n",*len);
     return true;
 }
 //EOF

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_demuxers/MpegTS/ADM_tsAudio.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_demuxers/MpegTS/ADM_tsAudio.cpp	2011-05-07 16:26:02 UTC (rev 7191)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_demuxers/MpegTS/ADM_tsAudio.cpp	2011-05-07 18:03:58 UTC (rev 7192)
@@ -147,13 +147,7 @@
 */
 bool      ADM_tsAccess::getPacket(uint8_t *buffer, uint32_t *size, uint32_t maxSize,uint64_t *dts)
 {
-int retries=10;
-again:
 uint64_t p,d,start;
-    if(false==demuxer.getNextPES(packet)) return false;
-    int avail=packet->payloadSize-packet->offset;
-    if(avail>maxSize) ADM_assert(0);
-    *size=avail;
     // If it is adts, ask ffmpeg to unwrap it...
     switch(muxing)
     {
@@ -162,6 +156,10 @@
                     bool r=false;
                     int outsize=0;
                     *size=0;
+                    if(false==demuxer.getNextPES(packet)) return false;
+                    int avail=packet->payloadSize-packet->offset;
+                    if(avail>maxSize) ADM_assert(0);
+                    *size=avail;
                     r=adts.convert(avail,packet->payload+packet->offset,&outsize,buffer);
                     if(false==r) return false;
                     *size=outsize;
@@ -170,6 +168,10 @@
             }
         case ADM_TS_MUX_NONE:
             {
+                if(false==demuxer.getNextPES(packet)) return false;
+                int avail=packet->payloadSize-packet->offset;
+                if(avail>maxSize) ADM_assert(0);
+                *size=avail;
                 memcpy(buffer,packet->payload+packet->offset,avail);
                 *dts=timeConvert(packet->pts);
                 break;
@@ -177,17 +179,23 @@
         case ADM_TS_MUX_LATM:
             {
                 // Try to get one...
-                
-                if(!retries)
+                int retries=10;
+                again:
+                if(latm.empty()==true) // fetch next LOAS frame, it will contain several frames
                 {
-                    ADM_warning("No packet out of latm\n");
-                    return false;   
-                }
-                if(latm.empty()==true)
-                {
-                        latm.pushData(avail,packet->payload+packet->offset,packet->pts);
-                        retries--;
-                        goto again;
+                    
+               
+                    if(!retries)
+                    {
+                        ADM_error("Cannot get AAC packet from LATM\n");
+                        return false;
+                    }
+                    if(false==demuxer.getNextPES(packet)) return false;
+                    int avail=packet->payloadSize-packet->offset;
+                    if(avail>maxSize) ADM_assert(0);
+                    latm.pushData(avail,packet->payload+packet->offset,packet->pts);
+                    retries--;
+                    goto again;
                  }
                  uint64_t myPts;
                  latm.getData(&myPts,size,buffer,maxSize);



From mean at mail.berlios.de  Sun May  8 09:28:01 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Sun,  8 May 2011 09:28:01 +0200
Subject: [Avidemux-svn-commit] r7193 -
	branches/avidemux_2.6_branch_mean/avidemux/common/ADM_editor
Message-ID: <20110508072801.7C5A948129D@sheep.berlios.de>

Author: mean
Date: 2011-05-08 09:28:00 +0200 (Sun, 08 May 2011)
New Revision: 7193

Added:
   branches/avidemux_2.6_branch_mean/avidemux/common/ADM_editor/ADM_edAudioPacket.cpp
   branches/avidemux_2.6_branch_mean/avidemux/common/ADM_editor/ADM_edAudioPcm.cpp
Removed:
   branches/avidemux_2.6_branch_mean/avidemux/common/ADM_editor/ADMedAVIAUD.cpp
Modified:
   branches/avidemux_2.6_branch_mean/avidemux/common/ADM_editor/CMakeLists.txt
Log:
[editor] Rename audio related files to follow general naming rule, split PCM management

Added: branches/avidemux_2.6_branch_mean/avidemux/common/ADM_editor/ADM_edAudioPacket.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux/common/ADM_editor/ADM_edAudioPacket.cpp	                        (rev 0)
+++ branches/avidemux_2.6_branch_mean/avidemux/common/ADM_editor/ADM_edAudioPacket.cpp	2011-05-08 07:28:00 UTC (rev 7193)
@@ -0,0 +1,289 @@
+/***************************************************************************
+   \fn  ADMedAVIAUD.cpp
+   \brief Interface to audio track(s) from editor
+
+    Handle switching from pieces of movie
+    Also fix the gap/overlap in audio to offer a strictly continuous audio stream
+    
+    copyright            : (C) 2008/2009 by mean
+    email                : fixounet at free.fr
+
+Todo:
+-----
+        x Fix handling of overlay/gap, it is wrong.
+
+
+ ***************************************************************************/
+
+/***************************************************************************
+ *                                                                         *
+ *   This program is free software; you can redistribute it and/or modify  *
+ *   it under the terms of the GNU General Public License as published by  *
+ *   the Free Software Foundation; either version 2 of the License, or     *
+ *   (at your option) any later version.                                   *
+ *                                                                         *
+ ***************************************************************************/
+
+#include <string.h>
+#include "ADM_cpp.h"
+#include "ADM_default.h"
+#include <math.h>
+
+
+#include "fourcc.h"
+#include "ADM_editor/ADM_edit.hxx"
+
+#include "ADM_debugID.h"
+#define MODULE_NAME MODULE_AUDIO_EDITOR
+#include "ADM_debug.h"
+
+#include "ADM_vidMisc.h"
+
+#define AUDIOSEG 	_segments[_audioseg]._reference
+#define SEG 		_segments[seg]._reference
+
+#define ADM_ALLOWED_DRIFT_US 40000 // Allow 4b0 ms jitter on audio
+
+#if 1
+#define vprintf(...) {}
+#else
+#define vprintf printf
+#endif
+
+/**
+ *      \fn switchToNextAudioSegment
+ *
+ */
+bool ADM_Composer::switchToNextAudioSegment(void)
+{
+        // Try to switch segment
+        if(_audioSeg+1>=_segments.getNbSegments()) return false;
+
+        ADM_warning("Switching to segment %"LU"\n",_audioSeg+1);
+        _audioSeg++;
+        _SEGMENT *seg=_segments.getSegment(_audioSeg);
+        ADM_audioStreamTrack *trk=getTrack(seg->_reference);
+        // Go to beginning of the stream
+        if(false==trk->stream->goToTime(seg->_refStartTimeUs))
+          {
+            ADM_warning("Fail to seek audio to %"LLU"ms\n",seg->_refStartTimeUs/1000);
+            return false;
+          }
+        ADM_info("Switched ok to audio segment %"LU", with a ref time=%s\n",
+            _audioSeg,ADM_us2plain(seg->_refStartTimeUs));
+        return true;
+
+}
+/**
+    \fn refillPacketBuffer
+    \brief Fetch a new packet
+*/
+bool ADM_Composer::refillPacketBuffer(void)
+{
+   packetBufferSize=0; 
+   uint64_t dts;
+   _SEGMENT *seg=_segments.getSegment(_audioSeg);
+   static bool endOfAudio=false;
+   if(!seg) return false;
+
+   if(lastDts>=seg->_startTimeUs+seg->_durationUs)
+     {
+       ADM_info("Consumed all data from this audio segment\n");
+       switchToNextAudioSegment();
+       seg=_segments.getSegment(_audioSeg);
+     }
+
+
+
+   ADM_audioStreamTrack *trk=getTrack(seg->_reference);
+    if(!trk) return false;    
+
+    if(!trk->stream->getPacket(packetBuffer,&packetBufferSize,ADM_EDITOR_PACKET_BUFFER_SIZE,
+                        &packetBufferSamples,&dts))
+    {
+              if(true==switchToNextAudioSegment())
+              {
+                 endOfAudio=false;
+                 return refillPacketBuffer();
+              }
+             if(endOfAudio==false)
+                ADM_warning("End of audio\n");
+             endOfAudio=true;
+             return false;
+    }
+    //
+    // Ok we have a packet, rescale audio
+    if(dts==ADM_NO_PTS) packetBufferDts=ADM_NO_PTS;
+    else
+    {
+      if(dts>=seg->_refStartTimeUs) packetBufferDts=dts+seg->_startTimeUs-seg->_refStartTimeUs;
+      else
+        {
+          ADM_warning("Got PTS=%"LLU" which is too early for start=%"LLU"ms\n",dts/1000,seg->_refStartTimeUs);
+          return refillPacketBuffer();
+        }
+    }
+    endOfAudio=false;
+    return true;
+}
+
+/**
+        \fn getPacket
+        \brief
+*/
+uint8_t ADM_Composer::getPacket(uint8_t  *dest, uint32_t *len,uint32_t sizeMax, uint32_t *samples,uint64_t *odts)
+{
+zgain:        
+    _SEGMENT *seg=_segments.getSegment(_audioSeg);
+    ADM_audioStreamTrack *trk=getTrack(seg->_reference);
+    if(!trk) return 0;
+   
+    // Read a packet
+
+    bool r=trk->stream->getPacket(dest,len,sizeMax,samples,odts);
+    if(r==false) 
+    {
+            ADM_warning("AudioGetPacket failed, audioSegment=%d\n",(int)_audioSeg);
+            // if it fails, we have to switch segment
+            if(false==switchToNextAudioSegment())
+            {
+                ADM_warning("..and this is the last segment\n");
+                return false;
+            }
+            goto zgain;
+    }
+
+    // Rescale odts
+    if(*odts!=ADM_NO_PTS)
+    {
+        if(*odts<seg->_refStartTimeUs)
+        {
+            ADM_warning("Audio packet is too early %"LLU" ms, this segment starts at %"LLU"ms\n",*odts,seg->_refStartTimeUs);
+            goto zgain;
+        }
+#if 0
+        ADM_info("Audio DTS:%"LLU" ms, ref StartTime :%"LLU" Delta:%"LLU" duration :%"LLU"\n",
+                    *odts/1000,seg->_refStartTimeUs/1000,(*odts-seg->_refStartTimeUs)/1000,seg->_durationUs/1000);
+#endif
+        *odts-=seg->_refStartTimeUs;
+        if(*odts>seg->_durationUs)
+        {
+            if(switchToNextAudioSegment()==false)
+            {
+                ADM_warning("Audio:Switching to next segment failed\n");
+                return false;
+            }
+            goto zgain;
+        }
+        *odts+=seg->_startTimeUs;
+    }else
+    {
+        *odts=ADM_NO_PTS;
+    }
+    //ADM_info("Time : %s\n",ADM_us2plain(*odts));
+    //advanceDtsBySample(*samples);
+    return true;
+}
+/**
+    \fn goToTime
+    \brief Audio Seek in ms
+
+*/
+bool ADM_Composer::goToTime (uint64_t ustime)
+{
+  uint32_t seg;
+  uint64_t segTime;
+    ADM_info(" go to time %02.2f secs\n",((float)ustime)/1000000.);
+    if(false==_segments.convertLinearTimeToSeg(ustime,&seg,&segTime))
+      {
+        ADM_warning("Cannot convert %"LLU" to linear time\n",ustime/1000);
+        return false;
+      }
+    ADM_info("=> seg %d, rel time %02.2f secs\n",(int)seg,((float)segTime)/1000000.);
+    _SEGMENT *s=_segments.getSegment(seg);
+    ADM_audioStreamTrack *trk=getTrack(s->_reference);
+    if(!trk)
+      {
+        ADM_warning("No audio for segment %"LU"\n",seg);
+        return false;
+      }
+    uint64_t seekTime;
+    seekTime=segTime+s->_refStartTimeUs;
+    if(true==trk->stream->goToTime(seekTime))
+    {
+        _audioSeg=seg;
+        setDts(ustime);
+        return true;
+    }
+    return false;
+}
+
+/**
+    \fn getAudioStream
+
+*/
+uint8_t ADM_Composer::getAudioStream (ADM_audioStream ** audio)
+{
+   ADM_audioStreamTrack *trk=getTrack(0);
+    if(!trk)
+    {
+      *audio = NULL;
+      return 0;
+
+    }
+  *audio = this;
+  return 1;
+};
+
+/**
+    \fn getInfo
+    \brief returns synthetic audio info
+*/
+WAVHeader       *ADM_Composer::getInfo(void)
+{
+
+  _SEGMENT *seg=_segments.getSegment(_audioSeg);
+    ADM_audioStreamTrack *trk=getTrack(seg->_reference);
+    if(!trk) return NULL;
+    return trk->stream->getInfo();
+}
+/**
+    \fn getChannelMapping
+    \brief returns channel mapping
+*/
+ CHANNEL_TYPE    *ADM_Composer::getChannelMapping(void )
+{
+  _SEGMENT *seg=_segments.getSegment(_audioSeg);
+  ADM_audioStreamTrack *trk=getTrack(seg->_reference);
+    if(!trk) return NULL;
+    return trk->codec->channelMapping;
+}
+/**
+    \fn getExtraData
+*/
+bool            ADM_Composer::getExtraData(uint32_t *l, uint8_t **d)
+{
+  _SEGMENT *seg=_segments.getSegment(_audioSeg);
+  ADM_audioStreamTrack *trk=getTrack(seg->_reference);
+
+    *l=0;
+    *d=NULL;
+    if(!trk) return false;
+    return trk->stream->getExtraData(l,d); 
+
+}
+/**
+    \fn getTrack
+    \brief Returns Track for ref video given as parameter
+    @param : Reference video
+*/
+ADM_audioStreamTrack *ADM_Composer::getTrack(uint32_t refVideo)
+{
+    _VIDEOS *v=_segments.getRefVideo(refVideo);
+    if(!v->audioTracks) return NULL;
+
+    return v->audioTracks[v->currentAudioStream];
+}
+
+//EOF
+

Added: branches/avidemux_2.6_branch_mean/avidemux/common/ADM_editor/ADM_edAudioPcm.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux/common/ADM_editor/ADM_edAudioPcm.cpp	                        (rev 0)
+++ branches/avidemux_2.6_branch_mean/avidemux/common/ADM_editor/ADM_edAudioPcm.cpp	2011-05-08 07:28:00 UTC (rev 7193)
@@ -0,0 +1,168 @@
+/***************************************************************************
+   \fn  ADMedAVIAUD.cpp
+   \brief Interface to audio track(s) from editor
+
+    Handle switching from pieces of movie
+    Also fix the gap/overlap in audio to offer a strictly continuous audio stream
+    
+    copyright            : (C) 2008/2009 by mean
+    email                : fixounet at free.fr
+
+Todo:
+-----
+        x Fix handling of overlay/gap, it is wrong.
+
+
+ ***************************************************************************/
+
+/***************************************************************************
+ *                                                                         *
+ *   This program is free software; you can redistribute it and/or modify  *
+ *   it under the terms of the GNU General Public License as published by  *
+ *   the Free Software Foundation; either version 2 of the License, or     *
+ *   (at your option) any later version.                                   *
+ *                                                                         *
+ ***************************************************************************/
+
+#include <string.h>
+#include "ADM_cpp.h"
+#include "ADM_default.h"
+#include <math.h>
+
+
+#include "fourcc.h"
+#include "ADM_editor/ADM_edit.hxx"
+
+#include "ADM_debugID.h"
+#define MODULE_NAME MODULE_AUDIO_EDITOR
+#include "ADM_debug.h"
+
+#include "ADM_vidMisc.h"
+
+#define AUDIOSEG 	_segments[_audioseg]._reference
+#define SEG 		_segments[seg]._reference
+
+#define ADM_ALLOWED_DRIFT_US 40000 // Allow 4b0 ms jitter on audio
+
+#if 1
+#define vprintf(...) {}
+#else
+#define vprintf printf
+#endif
+
+
+/**
+    \fn     getPCMPacket
+    \brief  Get audio packet
+
+*/
+
+bool ADM_Composer::getPCMPacket(float  *dest, uint32_t sizeMax, uint32_t *samples,uint64_t *odts)
+{
+uint32_t fillerSample=0;   // FIXME : Store & fix the DTS error correctly!!!!
+uint32_t inSize;
+bool drop=false;
+static bool fail=false;
+
+again:
+    *samples=0;
+    ADM_audioStreamTrack *trk=getTrack(0);
+    if(!trk) return false;
+    // Do we already have a packet ?
+    if(!packetBufferSize)
+    {
+        if(!refillPacketBuffer())
+        {
+            if(fail==false)
+              ADM_warning("[Editor] Cannot refill audio\n");
+            fail=true;
+            return false;
+        }
+    }
+    // We do now
+    vprintf("[PCMPacket]  Got %d samples, time code %08lu  lastDts=%08lu delta =%08ld\n",packetBufferSamples,packetBufferDts,lastDts,packetBufferDts-lastDts);
+    fail=false;
+
+    // Check if the Dts matches
+    if(lastDts!=ADM_AUDIO_NO_DTS &&packetBufferDts!=ADM_AUDIO_NO_DTS)
+    {
+        if(abs(lastDts-packetBufferDts)>ADM_ALLOWED_DRIFT_US)
+        {
+            printf("[Composer::getPCMPacket] drift %d, computed :%"LLU" got %"LLU"\n",(int)(lastDts-packetBufferDts),lastDts,packetBufferDts);
+            if(packetBufferDts<lastDts)
+            {
+                printf("[Composer::getPCMPacket] Dropping packet %"LU" last =%"LU"\n",(uint32_t)(lastDts/1000),(uint32_t)(packetBufferDts/1000));
+                drop=true;
+            }else 
+            {
+                // There is a "hole" in audio
+                // Let's add some filler
+                // Compute filler size
+                float f=packetBufferDts-lastDts; // in us
+                f*=wavHeader.frequency;
+                f/=1000000.;
+                // in samples!
+                uint32_t fillerSample=(uint32_t )(f+0.49);
+                uint32_t mx=sizeMax/trk->wavheader.channels;
+                
+                if(mx<fillerSample) fillerSample=mx;
+                // arbitrary cap, max 4kSample in one go
+                // about 100 ms
+                if(fillerSample>4*1024) 
+                {
+                    fillerSample=4*1024;
+                }
+                uint32_t start=fillerSample*sizeof(float)*trk->wavheader.channels;
+                memset(dest,0,start);
+
+                advanceDtsBySample(fillerSample);
+                dest+=fillerSample*trk->wavheader.channels;
+                *samples=fillerSample;
+                vprintf("[Composer::getPCMPacket] Adding %u padding samples, dts is now %lu\n",fillerSample,lastDts);
+                return true;
+       }
+      }
+    }
+    // If lastDts is not initialized....
+    if(lastDts==ADM_AUDIO_NO_DTS) lastDts=packetBufferDts;
+    
+    //
+    //  The packet is ok, decode it...
+    //
+    uint32_t nbOut=0; // Nb sample as seen by codec
+    if(!trk->codec->run(packetBuffer, packetBufferSize, dest, &nbOut))
+    {
+            packetBufferSize=0; // consume
+            adm_printf(ADM_PRINT_ERROR,"[Composer::getPCMPacket] codec failed failed\n");
+            return false;
+    }
+    packetBufferSize=0; // consume
+
+    // Compute how much decoded sample to compare with what demuxer said
+    uint32_t decodedSample=nbOut;
+    decodedSample/=trk->wavheader.channels;
+    if(!decodedSample) goto again;
+#define ADM_MAX_JITTER 5000  // in samples, due to clock accuracy, it can be +er, -er, + er, -er etc etc
+    if(abs(decodedSample-packetBufferSamples)>ADM_MAX_JITTER)
+    {
+        printf("[Composer::getPCMPacket] Demuxer was wrong %d vs %d samples!\n",packetBufferSamples,decodedSample);
+    }
+    
+    // This packet has been dropped (too early packt), try the next one
+    if(drop==true)
+    {
+        // TODO Check if the packet somehow overlaps, i.e. starts too early but finish ok
+        goto again;
+    }
+    // Update infos
+    *samples=(decodedSample);
+    *odts=lastDts;
+    advanceDtsBySample(decodedSample);
+    vprintf("[Composer::getPCMPacket] Adding %u decodedSample, dts is not %lu\n",fillerSample,lastDts);
+    ADM_assert(sizeMax>=(fillerSample+decodedSample)*trk->wavheader.channels);
+    return true;
+}
+
+
+//EOF
+

Deleted: branches/avidemux_2.6_branch_mean/avidemux/common/ADM_editor/ADMedAVIAUD.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux/common/ADM_editor/ADMedAVIAUD.cpp	2011-05-07 18:03:58 UTC (rev 7192)
+++ branches/avidemux_2.6_branch_mean/avidemux/common/ADM_editor/ADMedAVIAUD.cpp	2011-05-08 07:28:00 UTC (rev 7193)
@@ -1,400 +0,0 @@
-/***************************************************************************
-   \fn  ADMedAVIAUD.cpp
-   \brief Interface to audio track(s) from editor
-
-    Handle switching from pieces of movie
-    Also fix the gap/overlap in audio to offer a strictly continuous audio stream
-    
-    copyright            : (C) 2008/2009 by mean
-    email                : fixounet at free.fr
-
-Todo:
------
-        x Fix handling of overlay/gap, it is wrong.
-
-
- ***************************************************************************/
-
-/***************************************************************************
- *                                                                         *
- *   This program is free software; you can redistribute it and/or modify  *
- *   it under the terms of the GNU General Public License as published by  *
- *   the Free Software Foundation; either version 2 of the License, or     *
- *   (at your option) any later version.                                   *
- *                                                                         *
- ***************************************************************************/
-
-#include <string.h>
-#include "ADM_cpp.h"
-#include "ADM_default.h"
-#include <math.h>
-
-
-#include "fourcc.h"
-#include "ADM_editor/ADM_edit.hxx"
-
-#include "ADM_debugID.h"
-#define MODULE_NAME MODULE_AUDIO_EDITOR
-#include "ADM_debug.h"
-
-#include "ADM_vidMisc.h"
-
-#define AUDIOSEG 	_segments[_audioseg]._reference
-#define SEG 		_segments[seg]._reference
-
-#define ADM_ALLOWED_DRIFT_US 40000 // Allow 4b0 ms jitter on audio
-
-#if 1
-#define vprintf(...) {}
-#else
-#define vprintf printf
-#endif
-
-/**
- *      \fn switchToNextAudioSegment
- *
- */
-bool ADM_Composer::switchToNextAudioSegment(void)
-{
-        // Try to switch segment
-        if(_audioSeg+1>=_segments.getNbSegments()) return false;
-
-        ADM_warning("Switching to segment %"LU"\n",_audioSeg+1);
-        _audioSeg++;
-        _SEGMENT *seg=_segments.getSegment(_audioSeg);
-        ADM_audioStreamTrack *trk=getTrack(seg->_reference);
-        // Go to beginning of the stream
-        if(false==trk->stream->goToTime(seg->_refStartTimeUs))
-          {
-            ADM_warning("Fail to seek audio to %"LLU"ms\n",seg->_refStartTimeUs/1000);
-            return false;
-          }
-        ADM_info("Switched ok to audio segment %"LU", with a ref time=%s\n",
-            _audioSeg,ADM_us2plain(seg->_refStartTimeUs));
-        return true;
-
-}
-/**
-    \fn refillPacketBuffer
-    \brief Fetch a new packet
-*/
-bool ADM_Composer::refillPacketBuffer(void)
-{
-   packetBufferSize=0; 
-   uint64_t dts;
-   _SEGMENT *seg=_segments.getSegment(_audioSeg);
-   static bool endOfAudio=false;
-   if(!seg) return false;
-
-   if(lastDts>=seg->_startTimeUs+seg->_durationUs)
-     {
-       ADM_info("Consumed all data from this audio segment\n");
-       switchToNextAudioSegment();
-       seg=_segments.getSegment(_audioSeg);
-     }
-
-
-
-   ADM_audioStreamTrack *trk=getTrack(seg->_reference);
-    if(!trk) return false;    
-
-    if(!trk->stream->getPacket(packetBuffer,&packetBufferSize,ADM_EDITOR_PACKET_BUFFER_SIZE,
-                        &packetBufferSamples,&dts))
-    {
-              if(true==switchToNextAudioSegment())
-              {
-                 endOfAudio=false;
-                 return refillPacketBuffer();
-              }
-             if(endOfAudio==false)
-                ADM_warning("End of audio\n");
-             endOfAudio=true;
-             return false;
-    }
-    //
-    // Ok we have a packet, rescale audio
-    if(dts==ADM_NO_PTS) packetBufferDts=ADM_NO_PTS;
-    else
-    {
-      if(dts>=seg->_refStartTimeUs) packetBufferDts=dts+seg->_startTimeUs-seg->_refStartTimeUs;
-      else
-        {
-          ADM_warning("Got PTS=%"LLU" which is too early for start=%"LLU"ms\n",dts/1000,seg->_refStartTimeUs);
-          return refillPacketBuffer();
-        }
-    }
-    endOfAudio=false;
-    return true;
-}
-
-/**
-    \fn     getPCMPacket
-    \brief  Get audio packet
-
-*/
-
-bool ADM_Composer::getPCMPacket(float  *dest, uint32_t sizeMax, uint32_t *samples,uint64_t *odts)
-{
-uint32_t fillerSample=0;   // FIXME : Store & fix the DTS error correctly!!!!
-uint32_t inSize;
-bool drop=false;
-static bool fail=false;
-
-again:
-    *samples=0;
-    ADM_audioStreamTrack *trk=getTrack(0);
-    if(!trk) return false;
-    // Do we already have a packet ?
-    if(!packetBufferSize)
-    {
-        if(!refillPacketBuffer())
-        {
-            if(fail==false)
-              ADM_warning("[Editor] Cannot refill audio\n");
-            fail=true;
-            return false;
-        }
-    }
-    // We do now
-    vprintf("[PCMPacket]  Got %d samples, time code %08lu  lastDts=%08lu delta =%08ld\n",packetBufferSamples,packetBufferDts,lastDts,packetBufferDts-lastDts);
-    fail=false;
-
-    // Check if the Dts matches
-    if(lastDts!=ADM_AUDIO_NO_DTS &&packetBufferDts!=ADM_AUDIO_NO_DTS)
-    {
-        if(abs(lastDts-packetBufferDts)>ADM_ALLOWED_DRIFT_US)
-        {
-            printf("[Composer::getPCMPacket] drift %d, computed :%"LLU" got %"LLU"\n",(int)(lastDts-packetBufferDts),lastDts,packetBufferDts);
-            if(packetBufferDts<lastDts)
-            {
-                printf("[Composer::getPCMPacket] Dropping packet %"LU" last =%"LU"\n",(uint32_t)(lastDts/1000),(uint32_t)(packetBufferDts/1000));
-                drop=true;
-            }else 
-            {
-                // There is a "hole" in audio
-                // Let's add some filler
-                // Compute filler size
-                float f=packetBufferDts-lastDts; // in us
-                f*=wavHeader.frequency;
-                f/=1000000.;
-                // in samples!
-                uint32_t fillerSample=(uint32_t )(f+0.49);
-                uint32_t mx=sizeMax/trk->wavheader.channels;
-                
-                if(mx<fillerSample) fillerSample=mx;
-                // arbitrary cap, max 4kSample in one go
-                // about 100 ms
-                if(fillerSample>4*1024) 
-                {
-                    fillerSample=4*1024;
-                }
-                uint32_t start=fillerSample*sizeof(float)*trk->wavheader.channels;
-                memset(dest,0,start);
-
-                advanceDtsBySample(fillerSample);
-                dest+=fillerSample*trk->wavheader.channels;
-                *samples=fillerSample;
-                vprintf("[Composer::getPCMPacket] Adding %u padding samples, dts is now %lu\n",fillerSample,lastDts);
-                return true;
-       }
-      }
-    }
-    // If lastDts is not initialized....
-    if(lastDts==ADM_AUDIO_NO_DTS) lastDts=packetBufferDts;
-    
-    //
-    //  The packet is ok, decode it...
-    //
-    uint32_t nbOut=0; // Nb sample as seen by codec
-    if(!trk->codec->run(packetBuffer, packetBufferSize, dest, &nbOut))
-    {
-            packetBufferSize=0; // consume
-            adm_printf(ADM_PRINT_ERROR,"[Composer::getPCMPacket] codec failed failed\n");
-            return false;
-    }
-    packetBufferSize=0; // consume
-
-    // Compute how much decoded sample to compare with what demuxer said
-    uint32_t decodedSample=nbOut;
-    decodedSample/=trk->wavheader.channels;
-    if(!decodedSample) goto again;
-#define ADM_MAX_JITTER 5000  // in samples, due to clock accuracy, it can be +er, -er, + er, -er etc etc
-    if(abs(decodedSample-packetBufferSamples)>ADM_MAX_JITTER)
-    {
-        printf("[Composer::getPCMPacket] Demuxer was wrong %d vs %d samples!\n",packetBufferSamples,decodedSample);
-    }
-    
-    // This packet has been dropped (too early packt), try the next one
-    if(drop==true)
-    {
-        // TODO Check if the packet somehow overlaps, i.e. starts too early but finish ok
-        goto again;
-    }
-    // Update infos
-    *samples=(decodedSample);
-    *odts=lastDts;
-    advanceDtsBySample(decodedSample);
-    vprintf("[Composer::getPCMPacket] Adding %u decodedSample, dts is not %lu\n",fillerSample,lastDts);
-    ADM_assert(sizeMax>=(fillerSample+decodedSample)*trk->wavheader.channels);
-    return true;
-}
-/**
-        \fn getPacket
-        \brief
-*/
-uint8_t ADM_Composer::getPacket(uint8_t  *dest, uint32_t *len,uint32_t sizeMax, uint32_t *samples,uint64_t *odts)
-{
-zgain:        
-    _SEGMENT *seg=_segments.getSegment(_audioSeg);
-    ADM_audioStreamTrack *trk=getTrack(seg->_reference);
-    if(!trk) return 0;
-   
-    // Read a packet
-
-    bool r=trk->stream->getPacket(dest,len,sizeMax,samples,odts);
-    if(r==false) 
-    {
-            ADM_warning("AudioGetPacket failed, audioSegment=%d\n",(int)_audioSeg);
-            // if it fails, we have to switch segment
-            if(false==switchToNextAudioSegment())
-            {
-                ADM_warning("..and this is the last segment\n");
-                return false;
-            }
-            goto zgain;
-    }
-
-    // Rescale odts
-    if(*odts!=ADM_NO_PTS)
-    {
-        if(*odts<seg->_refStartTimeUs)
-        {
-            ADM_warning("Audio packet is too early %"LLU" ms, this segment starts at %"LLU"ms\n",*odts,seg->_refStartTimeUs);
-            goto zgain;
-        }
-#if 0
-        ADM_info("Audio DTS:%"LLU" ms, ref StartTime :%"LLU" Delta:%"LLU" duration :%"LLU"\n",
-                    *odts/1000,seg->_refStartTimeUs/1000,(*odts-seg->_refStartTimeUs)/1000,seg->_durationUs/1000);
-#endif
-        *odts-=seg->_refStartTimeUs;
-        if(*odts>seg->_durationUs)
-        {
-            if(switchToNextAudioSegment()==false)
-            {
-                ADM_warning("Audio:Switching to next segment failed\n");
-                return false;
-            }
-            goto zgain;
-        }
-        *odts+=seg->_startTimeUs;
-    }else
-    {
-        *odts=ADM_NO_PTS;
-    }
-    //ADM_info("Time : %s\n",ADM_us2plain(*odts));
-    //advanceDtsBySample(*samples);
-    return true;
-}
-/**
-    \fn goToTime
-    \brief Audio Seek in ms
-
-*/
-bool ADM_Composer::goToTime (uint64_t ustime)
-{
-  uint32_t seg;
-  uint64_t segTime;
-    ADM_info(" go to time %02.2f secs\n",((float)ustime)/1000000.);
-    if(false==_segments.convertLinearTimeToSeg(ustime,&seg,&segTime))
-      {
-        ADM_warning("Cannot convert %"LLU" to linear time\n",ustime/1000);
-        return false;
-      }
-    ADM_info("=> seg %d, rel time %02.2f secs\n",(int)seg,((float)segTime)/1000000.);
-    _SEGMENT *s=_segments.getSegment(seg);
-    ADM_audioStreamTrack *trk=getTrack(s->_reference);
-    if(!trk)
-      {
-        ADM_warning("No audio for segment %"LU"\n",seg);
-        return false;
-      }
-    uint64_t seekTime;
-    seekTime=segTime+s->_refStartTimeUs;
-    if(true==trk->stream->goToTime(seekTime))
-    {
-        _audioSeg=seg;
-        setDts(ustime);
-        return true;
-    }
-    return false;
-}
-
-/**
-    \fn getAudioStream
-
-*/
-uint8_t ADM_Composer::getAudioStream (ADM_audioStream ** audio)
-{
-   ADM_audioStreamTrack *trk=getTrack(0);
-    if(!trk)
-    {
-      *audio = NULL;
-      return 0;
-
-    }
-  *audio = this;
-  return 1;
-};
-
-/**
-    \fn getInfo
-    \brief returns synthetic audio info
-*/
-WAVHeader       *ADM_Composer::getInfo(void)
-{
-
-  _SEGMENT *seg=_segments.getSegment(_audioSeg);
-    ADM_audioStreamTrack *trk=getTrack(seg->_reference);
-    if(!trk) return NULL;
-    return trk->stream->getInfo();
-}
-/**
-    \fn getChannelMapping
-    \brief returns channel mapping
-*/
- CHANNEL_TYPE    *ADM_Composer::getChannelMapping(void )
-{
-  _SEGMENT *seg=_segments.getSegment(_audioSeg);
-  ADM_audioStreamTrack *trk=getTrack(seg->_reference);
-    if(!trk) return NULL;
-    return trk->codec->channelMapping;
-}
-/**
-    \fn getExtraData
-*/
-bool            ADM_Composer::getExtraData(uint32_t *l, uint8_t **d)
-{
-  _SEGMENT *seg=_segments.getSegment(_audioSeg);
-  ADM_audioStreamTrack *trk=getTrack(seg->_reference);
-
-    *l=0;
-    *d=NULL;
-    if(!trk) return false;
-    return trk->stream->getExtraData(l,d); 
-
-}
-/**
-    \fn getTrack
-    \brief Returns Track for ref video given as parameter
-    @param : Reference video
-*/
-ADM_audioStreamTrack *ADM_Composer::getTrack(uint32_t refVideo)
-{
-    _VIDEOS *v=_segments.getRefVideo(refVideo);
-    if(!v->audioTracks) return NULL;
-
-    return v->audioTracks[v->currentAudioStream];
-}
-
-//EOF
-

Modified: branches/avidemux_2.6_branch_mean/avidemux/common/ADM_editor/CMakeLists.txt
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux/common/ADM_editor/CMakeLists.txt	2011-05-07 18:03:58 UTC (rev 7192)
+++ branches/avidemux_2.6_branch_mean/avidemux/common/ADM_editor/CMakeLists.txt	2011-05-08 07:28:00 UTC (rev 7193)
@@ -3,7 +3,6 @@
 ADM_edIdentify.cpp 
 ADM_edLoadSave.cpp 
 ADM_edSearch.cpp 
-ADMedAVIAUD.cpp
 ADM_edFrameType.cpp 
 ADM_edit.cpp 
 ADM_edRender.cpp 
@@ -14,6 +13,8 @@
 ADM_edVideoCopy.cpp
 ADM_segment.cpp
 ADM_edPySave.cpp
+ADM_edAudioPacket.cpp
+ADM_edAudioPcm.cpp
 )
 
 ADD_LIBRARY(ADM_editor6 STATIC ${ADM_editor_SRCS})



From mean at mail.berlios.de  Sun May  8 09:28:02 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Sun,  8 May 2011 09:28:02 +0200
Subject: [Avidemux-svn-commit] r7194 -
	branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_demuxers/Flv
Message-ID: <20110508072802.90E9848129D@sheep.berlios.de>

Author: mean
Date: 2011-05-08 09:28:02 +0200 (Sun, 08 May 2011)
New Revision: 7194

Modified:
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_demuxers/Flv/ADM_flv.cpp
Log:
[flv] use pts and not dts, fixes streams not starting at zero such as Meteo.flv

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_demuxers/Flv/ADM_flv.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_demuxers/Flv/ADM_flv.cpp	2011-05-08 07:28:00 UTC (rev 7193)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_demuxers/Flv/ADM_flv.cpp	2011-05-08 07:28:02 UTC (rev 7194)
@@ -803,7 +803,7 @@
 {
      if(frame>=videoTrack->_nbIndex) return 0;
      flvIndex *idx=&(videoTrack->_index[frame]);
-     return idx->dtsUs;
+     return idx->ptsUs;
 }
 /**
         \fn getFrame



From mean at mail.berlios.de  Tue May 10 07:40:48 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Tue, 10 May 2011 07:40:48 +0200
Subject: [Avidemux-svn-commit] r7195 - in branches/avidemux_2.6_branch_mean:
	avidemux/common/ADM_audiocodec
	avidemux_plugins/ADM_audioDecoders/ADM_ad_faad
Message-ID: <20110510054048.60DD0480F9E@sheep.berlios.de>

Author: mean
Date: 2011-05-10 07:40:47 +0200 (Tue, 10 May 2011)
New Revision: 7195

Modified:
   branches/avidemux_2.6_branch_mean/avidemux/common/ADM_audiocodec/ADM_ad_plugin.h
   branches/avidemux_2.6_branch_mean/avidemux/common/ADM_audiocodec/ADM_audiocodec.h
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_audioDecoders/ADM_ad_faad/ADM_ad_faad.cpp
Log:
[audioDecoder] Add a function to get ouput fq, used when sbr is on

Modified: branches/avidemux_2.6_branch_mean/avidemux/common/ADM_audiocodec/ADM_ad_plugin.h
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux/common/ADM_audiocodec/ADM_ad_plugin.h	2011-05-08 07:28:02 UTC (rev 7194)
+++ branches/avidemux_2.6_branch_mean/avidemux/common/ADM_audiocodec/ADM_ad_plugin.h	2011-05-10 05:40:47 UTC (rev 7195)
@@ -9,7 +9,7 @@
 #include "ADM_audiocodec.h"
 
 
-#define AD_API_VERSION 2
+#define AD_API_VERSION 3
 /* These are the 6 functions exported by each plugin ...*/
 typedef ADM_Audiocodec  *(ADM_ad_CreateFunction)(uint32_t fourcc, 
 								WAVHeader *info,uint32_t extraLength,uint8_t *extraData);

Modified: branches/avidemux_2.6_branch_mean/avidemux/common/ADM_audiocodec/ADM_audiocodec.h
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux/common/ADM_audiocodec/ADM_audiocodec.h	2011-05-08 07:28:02 UTC (rev 7194)
+++ branches/avidemux_2.6_branch_mean/avidemux/common/ADM_audiocodec/ADM_audiocodec.h	2011-05-10 05:40:47 UTC (rev 7195)
@@ -32,9 +32,9 @@
             _init=0;
             _wavHeader=NULL;
         };
-
-        virtual	~ADM_Audiocodec() {};
-        virtual	void purge(void) {}
+        virtual uint32_t getOutputFrequency(void)  {return _wavHeader->frequency;}
+        virtual	        ~ADM_Audiocodec() {};
+        virtual	        void purge(void) {}
         virtual	uint8_t beginDecompress(void)=0;
         virtual	uint8_t endDecompress(void)=0;
         virtual	uint8_t run(uint8_t *inptr, uint32_t nbIn, float *outptr, uint32_t *nbOut)=0;

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_audioDecoders/ADM_ad_faad/ADM_ad_faad.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_audioDecoders/ADM_ad_faad/ADM_ad_faad.cpp	2011-05-08 07:28:02 UTC (rev 7194)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_audioDecoders/ADM_ad_faad/ADM_ad_faad.cpp	2011-05-10 05:40:47 UTC (rev 7195)
@@ -30,7 +30,7 @@
 		uint8_t  _buffer[FAAD_BUFFER*2];
 		uint32_t head, tail;
         bool     monoFaadBug; // if true, the stream is mono, but faad outputs stereo
-
+        bool     sbr;
 	public:
 		ADM_faad(uint32_t fourcc, WAVHeader *info, uint32_t l, uint8_t *d);
 		virtual	~ADM_faad();
@@ -40,6 +40,7 @@
 		virtual	uint8_t isDecompressable(void) {return 1;}
 		virtual	uint8_t beginDecompress(void);
 		virtual	uint8_t endDecompress(void);
+        virtual uint32_t getOutputFrequency(void);
 };
 // Supported formats + declare our plugin
 //*******************************************************
@@ -54,7 +55,16 @@
 			Formats, 											// Supported formats
 			"Faad2 decoder plugin for avidemux (c) Mean\n"); 	// Desc
 //********************************************************
+/**
+    \fn getOutputFrequency
+*/
+uint32_t ADM_faad::getOutputFrequency(void)
+{
+    uint32_t fq=_wavHeader->frequency;
+    if(sbr) return fq*2;
+    else return fq;
 
+}
 ADM_faad::ADM_faad( uint32_t fourcc ,WAVHeader *info,uint32_t l,uint8_t *d) :   ADM_Audiocodec(fourcc)
 {
 faacDecConfigurationPtr conf;
@@ -64,6 +74,7 @@
 uint32_t srate;
 #endif
 unsigned char chan;
+        sbr=false;
 		_inited=0;
 		_instance=NULL;
         head=tail=0;
@@ -92,8 +103,14 @@
 			printf("[FAAD]Found :%"LU" rate %"LU" channels\n",(uint32_t)srate,(uint32_t)chan);
                         if(srate!=info->frequency)
                         {
-                            printf("[FAAD]Frequency mismatch!!! %d to %"LU" (SBR ?)\n",info->frequency,(uint32_t)srate);
-                            info->frequency=srate;
+                            ADM_info("[FAAD]Frequency mismatch!!! %d to %"LU" (SBR ?)\n",info->frequency,(uint32_t)srate);
+                            if(srate==2*info->frequency)
+                            {
+                                ADM_info("Sbr detected\n");
+                                sbr=true;
+                            }
+                            
+                            //info->frequency=srate;
                         }
                         if(chan!=info->channels) // Ask for stereo !
                         {



From mean at mail.berlios.de  Tue May 10 07:40:49 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Tue, 10 May 2011 07:40:49 +0200
Subject: [Avidemux-svn-commit] r7196 - in
	branches/avidemux_2.6_branch_mean/avidemux/common:
	ADM_audioFilter/src ADM_editor
Message-ID: <20110510054049.AC624480F9E@sheep.berlios.de>

Author: mean
Date: 2011-05-10 07:40:49 +0200 (Tue, 10 May 2011)
New Revision: 7196

Modified:
   branches/avidemux_2.6_branch_mean/avidemux/common/ADM_audioFilter/src/audiofilter_bridge.cpp
   branches/avidemux_2.6_branch_mean/avidemux/common/ADM_editor/ADM_edAudioPcm.cpp
   branches/avidemux_2.6_branch_mean/avidemux/common/ADM_editor/ADM_edit.hxx
Log:
[audio] Make change to support output fq!=intput fq( sbr)

Modified: branches/avidemux_2.6_branch_mean/avidemux/common/ADM_audioFilter/src/audiofilter_bridge.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux/common/ADM_audioFilter/src/audiofilter_bridge.cpp	2011-05-10 05:40:47 UTC (rev 7195)
+++ branches/avidemux_2.6_branch_mean/avidemux/common/ADM_audioFilter/src/audiofilter_bridge.cpp	2011-05-10 05:40:49 UTC (rev 7196)
@@ -33,6 +33,10 @@
 {
   _incoming=incoming;
   memcpy(&_wavHeader,_incoming->getInfo(),sizeof(_wavHeader));
+  // For SBR TEST
+  //_wavHeader.frequency*=2;
+  _wavHeader.frequency=_incoming->getOutputFrequency();
+  // /For SBR Test
   _startTime=startInMs;
   shiftMs=-shiftMs;
   _shift=shiftMs;

Modified: branches/avidemux_2.6_branch_mean/avidemux/common/ADM_editor/ADM_edAudioPcm.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux/common/ADM_editor/ADM_edAudioPcm.cpp	2011-05-10 05:40:47 UTC (rev 7195)
+++ branches/avidemux_2.6_branch_mean/avidemux/common/ADM_editor/ADM_edAudioPcm.cpp	2011-05-10 05:40:49 UTC (rev 7196)
@@ -49,8 +49,24 @@
 #else
 #define vprintf printf
 #endif
+/**
+    \fn     getOutputFrequency
+    \brief  Get output fq, 2*wavheader->fq for sbr
 
+*/
 
+uint32_t        ADM_Composer::getOutputFrequency(void)
+{
+    ADM_audioStreamTrack *trk=getTrack(0);
+    if(!trk) 
+    {
+        ADM_warning("No audio track\n");
+        return 0;
+    }
+    if(!trk->codec)
+        return trk->wavheader.frequency;
+    return trk->codec->getOutputFrequency();
+}
 /**
     \fn     getPCMPacket
     \brief  Get audio packet
@@ -63,7 +79,7 @@
 uint32_t inSize;
 bool drop=false;
 static bool fail=false;
-
+uint32_t outFrequency=getTrack(0)->codec->getOutputFrequency();
 again:
     *samples=0;
     ADM_audioStreamTrack *trk=getTrack(0);
@@ -99,7 +115,7 @@
                 // Let's add some filler
                 // Compute filler size
                 float f=packetBufferDts-lastDts; // in us
-                f*=wavHeader.frequency;
+                f*=outFrequency;
                 f/=1000000.;
                 // in samples!
                 uint32_t fillerSample=(uint32_t )(f+0.49);
@@ -115,7 +131,7 @@
                 uint32_t start=fillerSample*sizeof(float)*trk->wavheader.channels;
                 memset(dest,0,start);
 
-                advanceDtsBySample(fillerSample);
+                advanceDtsByCustomSample(fillerSample,outFrequency);
                 dest+=fillerSample*trk->wavheader.channels;
                 *samples=fillerSample;
                 vprintf("[Composer::getPCMPacket] Adding %u padding samples, dts is now %lu\n",fillerSample,lastDts);
@@ -157,7 +173,7 @@
     // Update infos
     *samples=(decodedSample);
     *odts=lastDts;
-    advanceDtsBySample(decodedSample);
+    advanceDtsByCustomSample(decodedSample,outFrequency);
     vprintf("[Composer::getPCMPacket] Adding %u decodedSample, dts is not %lu\n",fillerSample,lastDts);
     ADM_assert(sizeMax>=(fillerSample+decodedSample)*trk->wavheader.channels);
     return true;

Modified: branches/avidemux_2.6_branch_mean/avidemux/common/ADM_editor/ADM_edit.hxx
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux/common/ADM_editor/ADM_edit.hxx	2011-05-10 05:40:47 UTC (rev 7195)
+++ branches/avidemux_2.6_branch_mean/avidemux/common/ADM_editor/ADM_edit.hxx	2011-05-10 05:40:49 UTC (rev 7196)
@@ -185,6 +185,7 @@
                     uint64_t        getDurationInUs(void);
                     uint8_t			getAudioStream(ADM_audioStream **audio);
             virtual WAVHeader       *getInfo(void);
+                    uint32_t        getOutputFrequency(void); // sbr
             virtual CHANNEL_TYPE    *getChannelMapping(void );
 /************************************ /audioStream ******************************/
                     bool            getAudioStreamsInfo(uint64_t xtime,uint32_t *nbStreams, audioInfo **infos);



From mean at mail.berlios.de  Tue May 10 07:40:52 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Tue, 10 May 2011 07:40:52 +0200
Subject: [Avidemux-svn-commit] r7197 - in branches/avidemux_2.6_branch_mean:
	avidemux/common/ADM_audiocodec avidemux_core/ADM_coreAudio/include
	avidemux_core/ADM_coreAudio/src
	avidemux_plugins/ADM_audioDecoders/ADM_ad_ac3
	avidemux_plugins/ADM_audioDecoders/ADM_ad_faad
	avidemux_plugins/ADM_audioDecoders/ADM_ad_ima_adpcm
	avidemux_plugins/ADM_audioDecoders/ADM_ad_lav
	avidemux_plugins/ADM_audioDecoders/ADM_ad_mad
	avidemux_plugins/ADM_audioDecoders/ADM_ad_ms_adpcm
	avidemux_plugins/ADM_audioDecoders/ADM_ad_ulaw
	avidemux_plugins/ADM_audioDecoders/ADM_ad_vorbis
Message-ID: <20110510054052.21840480F9E@sheep.berlios.de>

Author: mean
Date: 2011-05-10 07:40:51 +0200 (Tue, 10 May 2011)
New Revision: 7197

Modified:
   branches/avidemux_2.6_branch_mean/avidemux/common/ADM_audiocodec/ADM_8bits.cpp
   branches/avidemux_2.6_branch_mean/avidemux/common/ADM_audiocodec/ADM_audiocodec.cpp
   branches/avidemux_2.6_branch_mean/avidemux/common/ADM_audiocodec/ADM_audiocodec.h
   branches/avidemux_2.6_branch_mean/avidemux/common/ADM_audiocodec/ADM_codecwav.cpp
   branches/avidemux_2.6_branch_mean/avidemux/common/ADM_audiocodec/ADM_lpcm.cpp
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreAudio/include/ADM_audioStream.h
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreAudio/src/ADM_audioStream.cpp
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_audioDecoders/ADM_ad_ac3/ADM_ad_a52.cpp
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_audioDecoders/ADM_ad_faad/ADM_ad_faad.cpp
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_audioDecoders/ADM_ad_ima_adpcm/ADM_ad_ima_adpcm.cpp
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_audioDecoders/ADM_ad_lav/ADM_ad_lav.cpp
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_audioDecoders/ADM_ad_mad/ADM_ad_mad.cpp
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_audioDecoders/ADM_ad_ms_adpcm/ADM_ad_ms_adpcm.cpp
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_audioDecoders/ADM_ad_ulaw/ADM_ad_ulaw.cpp
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_audioDecoders/ADM_ad_vorbis/ADM_ad_vorbis.cpp
Log:
[audio] Add a copy of wavinfo at constructor level, might be needed later

Modified: branches/avidemux_2.6_branch_mean/avidemux/common/ADM_audiocodec/ADM_8bits.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux/common/ADM_audiocodec/ADM_8bits.cpp	2011-05-10 05:40:49 UTC (rev 7196)
+++ branches/avidemux_2.6_branch_mean/avidemux/common/ADM_audiocodec/ADM_8bits.cpp	2011-05-10 05:40:51 UTC (rev 7197)
@@ -30,7 +30,8 @@
 #include "ADM_audiocodec/ADM_audiocodec.h"
 
 
-ADM_Audiocodec8Bits::ADM_Audiocodec8Bits( uint32_t fourcc) :   ADM_Audiocodec(fourcc)
+ADM_Audiocodec8Bits::ADM_Audiocodec8Bits( uint32_t fourcc,const WAVHeader &info) :  
+            ADM_Audiocodec(fourcc,info)
 {
  	ADM_assert(fourcc==WAV_8BITS||fourcc==WAV_8BITS_UNSIGNED);
 	if(fourcc==WAV_8BITS_UNSIGNED)

Modified: branches/avidemux_2.6_branch_mean/avidemux/common/ADM_audiocodec/ADM_audiocodec.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux/common/ADM_audiocodec/ADM_audiocodec.cpp	2011-05-10 05:40:49 UTC (rev 7196)
+++ branches/avidemux_2.6_branch_mean/avidemux/common/ADM_audiocodec/ADM_audiocodec.cpp	2011-05-10 05:40:51 UTC (rev 7197)
@@ -40,25 +40,25 @@
 				case WAV_PCM:
                     printf("[audioCodec] Audio codec:  WAV\n");
 #ifdef ADM_BIG_ENDIAN
-                    out= (ADM_Audiocodec *)new ADM_AudiocodecWavSwapped(fourcc);
+                    out= (ADM_Audiocodec *)new ADM_AudiocodecWavSwapped(fourcc,*info);
 #else
-					out= (ADM_Audiocodec *)new ADM_AudiocodecWav(fourcc);
+					out= (ADM_Audiocodec *)new ADM_AudiocodecWav(fourcc,*info);
 #endif
                   			break;
 				case WAV_8BITS:
 					printf("[audioCodec] 8 BIts pseudo codec\n");
-                    out= (ADM_Audiocodec *)new ADM_Audiocodec8Bits(fourcc);
+                    out= (ADM_Audiocodec *)new ADM_Audiocodec8Bits(fourcc,*info);
 					break;
 				case WAV_8BITS_UNSIGNED:
 					printf("[audioCodec] 8 BIts pseudo codec unsigned\n");
-    					out= (ADM_Audiocodec *)new ADM_Audiocodec8Bits(fourcc);
+    					out= (ADM_Audiocodec *)new ADM_Audiocodec8Bits(fourcc,*info);
 					break;
 		  		case WAV_LPCM:
 					printf("[audioCodec] Audio codec:  LPCM swapped\n");
 #ifndef ADM_BIG_ENDIAN
-                    out= (ADM_Audiocodec *)new ADM_AudiocodecWavSwapped(fourcc);
+                    out= (ADM_Audiocodec *)new ADM_AudiocodecWavSwapped(fourcc,*info);
 #else
-					out= (ADM_Audiocodec *)new ADM_AudiocodecWav(fourcc);
+					out= (ADM_Audiocodec *)new ADM_AudiocodecWav(fourcc,*info);
 #endif
                   		break;
             default:
@@ -68,7 +68,7 @@
 	if (out == NULL)
 	{
 		printf("[audioCodec] Unknown codec : %"LU"\n",fourcc);
-		out = (ADM_Audiocodec *) new ADM_AudiocodecUnknown(fourcc);
+		out = (ADM_Audiocodec *) new ADM_AudiocodecUnknown(fourcc,*info);
 	}
 	// For channel mapping, simple case we do it here so that the decoder does not have
 	// to worry.

Modified: branches/avidemux_2.6_branch_mean/avidemux/common/ADM_audiocodec/ADM_audiocodec.h
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux/common/ADM_audiocodec/ADM_audiocodec.h	2011-05-10 05:40:49 UTC (rev 7196)
+++ branches/avidemux_2.6_branch_mean/avidemux/common/ADM_audiocodec/ADM_audiocodec.h	2011-05-10 05:40:51 UTC (rev 7197)
@@ -24,15 +24,15 @@
 {
     protected:
         uint8_t	_init;
-        WAVHeader *_wavHeader;
+        WAVHeader wavHeader;
     public:
-        ADM_Audiocodec(uint32_t fourcc)
+        ADM_Audiocodec(uint32_t fourcc,const WAVHeader &info)
         {
             UNUSED_ARG(fourcc);
             _init=0;
-            _wavHeader=NULL;
+            wavHeader=info;
         };
-        virtual uint32_t getOutputFrequency(void)  {return _wavHeader->frequency;}
+        virtual uint32_t getOutputFrequency(void)  {return wavHeader.frequency;}
         virtual	        ~ADM_Audiocodec() {};
         virtual	        void purge(void) {}
         virtual	uint8_t beginDecompress(void)=0;
@@ -49,7 +49,7 @@
 class ADM_AudiocodecWav : public     ADM_Audiocodec
 {
 	public:
-		ADM_AudiocodecWav(uint32_t fourcc);
+		ADM_AudiocodecWav(uint32_t fourcc,const WAVHeader &info);
 		virtual	~ADM_AudiocodecWav();
 		virtual	uint8_t beginDecompress(void);
 		virtual	uint8_t endDecompress(void);
@@ -60,7 +60,7 @@
 class ADM_AudiocodecWavSwapped : public     ADM_Audiocodec
 {
 	public:
-		ADM_AudiocodecWavSwapped(uint32_t fourcc);
+		ADM_AudiocodecWavSwapped(uint32_t fourcc,const WAVHeader &info);
 		virtual	~ADM_AudiocodecWavSwapped();
 		virtual	uint8_t beginDecompress(void);
 		virtual	uint8_t endDecompress(void);
@@ -72,7 +72,7 @@
 class ADM_AudiocodecUnknown : public     ADM_Audiocodec
 {
 	public:
-		ADM_AudiocodecUnknown(uint32_t fourcc) : ADM_Audiocodec(fourcc) {}
+		ADM_AudiocodecUnknown(uint32_t fourcc,const WAVHeader &info) : ADM_Audiocodec(fourcc,info) {}
 		~ADM_AudiocodecUnknown() {}
 		uint8_t beginDecompress(void) {return 0;}
 		uint8_t endDecompress(void) {return 0;}
@@ -89,7 +89,7 @@
 		uint8_t _unsign;
 
 	public:
-		ADM_Audiocodec8Bits(uint32_t fourcc);
+		ADM_Audiocodec8Bits(uint32_t fourcc,const WAVHeader &info);
 		virtual	~ADM_Audiocodec8Bits();
 		virtual	uint8_t beginDecompress(void) {return 1;}
 		virtual	uint8_t endDecompress(void) {return 1;}

Modified: branches/avidemux_2.6_branch_mean/avidemux/common/ADM_audiocodec/ADM_codecwav.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux/common/ADM_audiocodec/ADM_codecwav.cpp	2011-05-10 05:40:49 UTC (rev 7196)
+++ branches/avidemux_2.6_branch_mean/avidemux/common/ADM_audiocodec/ADM_codecwav.cpp	2011-05-10 05:40:51 UTC (rev 7197)
@@ -18,7 +18,7 @@
 #include <math.h>
 #include "ADM_audiocodec/ADM_audiocodec.h"
 
-ADM_AudiocodecWav::ADM_AudiocodecWav( uint32_t fourcc ) : ADM_Audiocodec(fourcc)
+ADM_AudiocodecWav::ADM_AudiocodecWav( uint32_t fourcc,const WAVHeader &info ) : ADM_Audiocodec(fourcc,info)
 {
     ADM_info("Creating not swapped wav decoder (PCM)\n");
 }

Modified: branches/avidemux_2.6_branch_mean/avidemux/common/ADM_audiocodec/ADM_lpcm.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux/common/ADM_audiocodec/ADM_lpcm.cpp	2011-05-10 05:40:49 UTC (rev 7196)
+++ branches/avidemux_2.6_branch_mean/avidemux/common/ADM_audiocodec/ADM_lpcm.cpp	2011-05-10 05:40:51 UTC (rev 7197)
@@ -25,7 +25,7 @@
 #include "ADM_audiocodec/ADM_audiocodec.h"
 
 
-ADM_AudiocodecWavSwapped::ADM_AudiocodecWavSwapped( uint32_t fourcc ) : ADM_Audiocodec(fourcc)
+ADM_AudiocodecWavSwapped::ADM_AudiocodecWavSwapped( uint32_t fourcc,const WAVHeader &info ) : ADM_Audiocodec(fourcc,info)
 {
 	channelMapping[0] = ADM_CH_FRONT_LEFT;
 	channelMapping[1] = ADM_CH_FRONT_RIGHT;

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreAudio/include/ADM_audioStream.h
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreAudio/include/ADM_audioStream.h	2011-05-10 05:40:49 UTC (rev 7196)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreAudio/include/ADM_audioStream.h	2011-05-10 05:40:51 UTC (rev 7197)
@@ -84,6 +84,8 @@
                         void                    setDts(uint64_t newDts);
     /// increment DTS by samples
                        bool                     advanceDtsBySample(uint32_t samples);
+    /// Same with provided frequency (SBR)
+                       bool                     advanceDtsByCustomSample(uint32_t samples,uint32_t fq);
         public:
 /// Default constructor
                        ADM_audioStream(WAVHeader *header,ADM_audioAccess *access);  

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreAudio/src/ADM_audioStream.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreAudio/src/ADM_audioStream.cpp	2011-05-10 05:40:49 UTC (rev 7196)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreAudio/src/ADM_audioStream.cpp	2011-05-10 05:40:51 UTC (rev 7197)
@@ -130,6 +130,19 @@
         return true;
 }
 /**
+        \fn advanceDtsByCustomSample
+*/
+bool    ADM_audioStream::advanceDtsByCustomSample(uint32_t samples,uint32_t fq)
+{
+        sampleElapsed+=samples;
+        float f=sampleElapsed*1000;
+            f/=fq;
+            f*=1000;
+            lastDts=lastDtsBase+(uint64_t)(f+0.5);
+        return true;
+}
+
+/**
                 Create the appropriate audio stream
 */
 ADM_audioStream  *ADM_audioCreateStream(WAVHeader *wavheader, ADM_audioAccess *access,bool makeTimeMap)

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_audioDecoders/ADM_ad_ac3/ADM_ad_a52.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_audioDecoders/ADM_ad_ac3/ADM_ad_a52.cpp	2011-05-10 05:40:49 UTC (rev 7196)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_audioDecoders/ADM_ad_ac3/ADM_ad_a52.cpp	2011-05-10 05:40:51 UTC (rev 7197)
@@ -50,10 +50,10 @@
    //********************************************************
 
 ADM_AudiocodecAC3::ADM_AudiocodecAC3( uint32_t fourcc, WAVHeader *info,uint32_t extraLength,uint8_t *extraData)
-		:   ADM_Audiocodec(fourcc)
+		:   ADM_Audiocodec(fourcc,*info)
 {
     int flags=0;
-    _wavHeader = new WAVHeader;
+    
     ADM_assert(fourcc==WAV_AC3);
     ac3_handle=NULL;
     ac3_sample=NULL;
@@ -76,8 +76,8 @@
         ADM_warning("Cannot init a52 sample\n");
         ADM_assert(0);
     }
-      _wavHeader = new WAVHeader;
-      *_wavHeader=*info;
+
+      
 }
 
 ADM_AudiocodecAC3::~ADM_AudiocodecAC3( )
@@ -88,11 +88,7 @@
         ac3_handle=NULL;
         ac3_sample=NULL;
     }
-    if( _wavHeader)
-    {
-        delete  _wavHeader;
-        _wavHeader=NULL;
-    }
+    
 }
 
 uint8_t ADM_AudiocodecAC3::beginDecompress( void )
@@ -110,7 +106,7 @@
     uint32_t avail;
     uint32_t length;
     int flags = 0, samprate = 0, bitrate = 0;
-    uint8_t chan = _wavHeader->channels;
+    uint8_t chan = wavHeader.channels;
     *nbOut=0;
 
     //  Ready to decode

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_audioDecoders/ADM_ad_faad/ADM_ad_faad.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_audioDecoders/ADM_ad_faad/ADM_ad_faad.cpp	2011-05-10 05:40:49 UTC (rev 7196)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_audioDecoders/ADM_ad_faad/ADM_ad_faad.cpp	2011-05-10 05:40:51 UTC (rev 7197)
@@ -30,7 +30,7 @@
 		uint8_t  _buffer[FAAD_BUFFER*2];
 		uint32_t head, tail;
         bool     monoFaadBug; // if true, the stream is mono, but faad outputs stereo
-        bool     sbr;
+        uint32_t fq;
 	public:
 		ADM_faad(uint32_t fourcc, WAVHeader *info, uint32_t l, uint8_t *d);
 		virtual	~ADM_faad();
@@ -60,12 +60,10 @@
 */
 uint32_t ADM_faad::getOutputFrequency(void)
 {
-    uint32_t fq=_wavHeader->frequency;
-    if(sbr) return fq*2;
-    else return fq;
+    return fq;
 
 }
-ADM_faad::ADM_faad( uint32_t fourcc ,WAVHeader *info,uint32_t l,uint8_t *d) :   ADM_Audiocodec(fourcc)
+ADM_faad::ADM_faad( uint32_t fourcc ,WAVHeader *info,uint32_t l,uint8_t *d) :   ADM_Audiocodec(fourcc,*info)
 {
 faacDecConfigurationPtr conf;
 #ifdef FAAD_OLD_PROTOTYPE
@@ -74,7 +72,7 @@
 uint32_t srate;
 #endif
 unsigned char chan;
-        sbr=false;
+        
 		_inited=0;
 		_instance=NULL;
         head=tail=0;
@@ -86,7 +84,8 @@
 		conf->defSampleRate=info->frequency;
   	    conf->defObjectType =LC;
         // Disable SBR...
-        conf->dontUpSampleImplicitSBR=1;
+        //conf->dontUpSampleImplicitSBR=1;
+        fq=info->frequency;
         //
 		faacDecSetConfiguration(_instance, conf);
         printf("[FAAD] using %u bytes of extradata\n",l);
@@ -107,7 +106,7 @@
                             if(srate==2*info->frequency)
                             {
                                 ADM_info("Sbr detected\n");
-                                sbr=true;
+                                fq=srate;
                             }
                             
                             //info->frequency=srate;

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_audioDecoders/ADM_ad_ima_adpcm/ADM_ad_ima_adpcm.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_audioDecoders/ADM_ad_ima_adpcm/ADM_ad_ima_adpcm.cpp	2011-05-10 05:40:49 UTC (rev 7196)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_audioDecoders/ADM_ad_ima_adpcm/ADM_ad_ima_adpcm.cpp	2011-05-10 05:40:51 UTC (rev 7197)
@@ -131,7 +131,7 @@
 // };
 
 ADM_AudiocodecImaAdpcm::ADM_AudiocodecImaAdpcm( uint32_t fourcc, WAVHeader *info, uint32_t l, uint8_t *d)
-        : ADM_Audiocodec(fourcc)
+        : ADM_Audiocodec(fourcc,*info)
 {
         _me=info->encoding;
         _channels=info->channels;

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_audioDecoders/ADM_ad_lav/ADM_ad_lav.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_audioDecoders/ADM_ad_lav/ADM_ad_lav.cpp	2011-05-10 05:40:49 UTC (rev 7196)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_audioDecoders/ADM_ad_lav/ADM_ad_lav.cpp	2011-05-10 05:40:51 UTC (rev 7197)
@@ -97,7 +97,7 @@
 */
 
  ADM_AudiocoderLavcodec::ADM_AudiocoderLavcodec(uint32_t fourcc,WAVHeader *info,uint32_t l,uint8_t *d)
-       :  ADM_Audiocodec(fourcc)
+       :  ADM_Audiocodec(fourcc,*info)
  {
     ADM_info(" [ADM_AD_LAV] Using decoder for type 0x%x\n",info->encoding);
     ADM_info(" [ADM_AD_LAV] #of channels %d\n",info->channels);

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_audioDecoders/ADM_ad_mad/ADM_ad_mad.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_audioDecoders/ADM_ad_mad/ADM_ad_mad.cpp	2011-05-10 05:40:49 UTC (rev 7196)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_audioDecoders/ADM_ad_mad/ADM_ad_mad.cpp	2011-05-10 05:40:51 UTC (rev 7197)
@@ -57,7 +57,8 @@
 			"LibMad decoder plugin for avidemux (c) Mean\n"); 	// Desc
 //********************************************************
 
-ADM_AudiocodecMP3::ADM_AudiocodecMP3( uint32_t fourcc,WAVHeader *info,uint32_t extraLength,uint8_t *extraData) :   ADM_Audiocodec(fourcc)
+ADM_AudiocodecMP3::ADM_AudiocodecMP3( uint32_t fourcc,WAVHeader *info,uint32_t extraLength,uint8_t *extraData) 
+        :   ADM_Audiocodec(fourcc,*info)
 {
         if((fourcc!=WAV_MP3) && (fourcc!=WAV_MP2))
             ADM_assert(0); 

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_audioDecoders/ADM_ad_ms_adpcm/ADM_ad_ms_adpcm.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_audioDecoders/ADM_ad_ms_adpcm/ADM_ad_ms_adpcm.cpp	2011-05-10 05:40:49 UTC (rev 7196)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_audioDecoders/ADM_ad_ms_adpcm/ADM_ad_ms_adpcm.cpp	2011-05-10 05:40:51 UTC (rev 7197)
@@ -219,7 +219,7 @@
     \brief
 */
 ADM_AudiocodecMsAdpcm::ADM_AudiocodecMsAdpcm( uint32_t fourcc, WAVHeader *info, uint32_t l, uint8_t *d)
-        : ADM_Audiocodec(fourcc)
+        : ADM_Audiocodec(fourcc,*info)
 {
         _me=info->encoding;
         _channels=info->channels;

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_audioDecoders/ADM_ad_ulaw/ADM_ad_ulaw.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_audioDecoders/ADM_ad_ulaw/ADM_ad_ulaw.cpp	2011-05-10 05:40:49 UTC (rev 7196)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_audioDecoders/ADM_ad_ulaw/ADM_ad_ulaw.cpp	2011-05-10 05:40:51 UTC (rev 7197)
@@ -51,7 +51,8 @@
     \fn ADM_AudiocodecUlaw
     \brief
 */
-ADM_AudiocodecUlaw::ADM_AudiocodecUlaw(uint32_t fourcc, WAVHeader *info, uint32_t l, uint8_t *d) : ADM_Audiocodec(fourcc)
+ADM_AudiocodecUlaw::ADM_AudiocodecUlaw(uint32_t fourcc, WAVHeader *info, uint32_t l, uint8_t *d) 
+: ADM_Audiocodec(fourcc,*info)
 {
 		
 }

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_audioDecoders/ADM_ad_vorbis/ADM_ad_vorbis.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_audioDecoders/ADM_ad_vorbis/ADM_ad_vorbis.cpp	2011-05-10 05:40:49 UTC (rev 7196)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_audioDecoders/ADM_ad_vorbis/ADM_ad_vorbis.cpp	2011-05-10 05:40:51 UTC (rev 7197)
@@ -76,7 +76,7 @@
  }
 
  ADM_vorbis::ADM_vorbis(uint32_t fcc, WAVHeader *info, uint32_t extra, uint8_t *extraData)
- 	: ADM_Audiocodec(fcc)
+ 	: ADM_Audiocodec(fcc,*info)
  {
  ogg_packet packet;
  vorbis_comment comment;



From mean at mail.berlios.de  Tue May 10 08:07:28 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Tue, 10 May 2011 08:07:28 +0200
Subject: [Avidemux-svn-commit] r7198 - in
	branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_audioDecoders:
	ADM_ad_lav ADM_ad_opencore_amrnb ADM_ad_opencore_amrwb
Message-ID: <20110510060728.7FCB8480FA0@sheep.berlios.de>

Author: mean
Date: 2011-05-10 08:07:28 +0200 (Tue, 10 May 2011)
New Revision: 7198

Modified:
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_audioDecoders/ADM_ad_lav/ADM_ad_lav.cpp
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_audioDecoders/ADM_ad_opencore_amrnb/ADM_ad_opencore_amrnb.cpp
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_audioDecoders/ADM_ad_opencore_amrwb/ADM_ad_opencore_amrwb.cpp
Log:
[audio] Add opencore, prepare lavcodec aac decoder for sbr

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_audioDecoders/ADM_ad_lav/ADM_ad_lav.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_audioDecoders/ADM_ad_lav/ADM_ad_lav.cpp	2011-05-10 05:40:51 UTC (rev 7197)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_audioDecoders/ADM_ad_lav/ADM_ad_lav.cpp	2011-05-10 06:07:28 UTC (rev 7198)
@@ -36,6 +36,7 @@
         uint32_t    channels;
         bool        decodeToS16(float *outptr,uint32_t *nbOut);
         bool        decodeToFloat(float *outptr,uint32_t *nbOut);
+        uint32_t    outputFrequency;
 	public:
 		ADM_AudiocoderLavcodec(uint32_t fourcc, WAVHeader *info, uint32_t l, uint8_t *d);
 		virtual	~ADM_AudiocoderLavcodec() ;
@@ -43,6 +44,7 @@
 		virtual	uint8_t endDecompress(void);
 		virtual	uint8_t run(uint8_t *inptr, uint32_t nbIn, float *outptr, uint32_t *nbOut);
 		virtual	uint8_t isCompressed(void) {return 1;}
+        virtual uint32_t getOutputFrequency(void) {return outputFrequency;}
 };
 
 
@@ -111,6 +113,7 @@
     _context->channels = info->channels;
     _blockalign=_context->block_align = info->blockalign;
     _context->bit_rate = info->byterate*8;
+    outputFrequency=info->frequency;
     switch(fourcc)
     {
       case WAV_WMA:
@@ -202,7 +205,12 @@
       }
     }
     ADM_info("[ADM_ad_lav] init successful (blockalign %d)\n",info->blockalign);
-
+    if(_context->sample_rate!=outputFrequency)
+    {
+        ADM_warning("Output frequency does not match input frequency (SBR ?) : %d / %d\n",
+            _context->sample_rate,outputFrequency);
+        outputFrequency=_context->sample_rate;
+    }
 }
 /**
     \fn dtor

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_audioDecoders/ADM_ad_opencore_amrnb/ADM_ad_opencore_amrnb.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_audioDecoders/ADM_ad_opencore_amrnb/ADM_ad_opencore_amrnb.cpp	2011-05-10 05:40:51 UTC (rev 7197)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_audioDecoders/ADM_ad_opencore_amrnb/ADM_ad_opencore_amrnb.cpp	2011-05-10 06:07:28 UTC (rev 7198)
@@ -63,11 +63,9 @@
 };
 
 ADM_AudiocodecOpencoreAmrNb::ADM_AudiocodecOpencoreAmrNb(
-	uint32_t fourcc, WAVHeader *info, uint32_t extraLength, uint8_t *extraData) : ADM_Audiocodec(fourcc)
+	uint32_t fourcc, WAVHeader *info, uint32_t extraLength, uint8_t *extraData) : ADM_Audiocodec(fourcc,*info)
 {
 	state = Decoder_Interface_init();
-	_wavHeader = info;
-	ADM_assert(_wavHeader);
 }
 
 ADM_AudiocodecOpencoreAmrNb::~ADM_AudiocodecOpencoreAmrNb( )

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_audioDecoders/ADM_ad_opencore_amrwb/ADM_ad_opencore_amrwb.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_audioDecoders/ADM_ad_opencore_amrwb/ADM_ad_opencore_amrwb.cpp	2011-05-10 05:40:51 UTC (rev 7197)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_audioDecoders/ADM_ad_opencore_amrwb/ADM_ad_opencore_amrwb.cpp	2011-05-10 06:07:28 UTC (rev 7198)
@@ -63,11 +63,10 @@
 };
 
 ADM_AudiocodecOpencoreAmrWb::ADM_AudiocodecOpencoreAmrWb(
-	uint32_t fourcc, WAVHeader *info, uint32_t extraLength, uint8_t *extraData) : ADM_Audiocodec(fourcc)
+	uint32_t fourcc, WAVHeader *info, uint32_t extraLength, uint8_t *extraData) : ADM_Audiocodec(fourcc,*info)
 {
 	state = D_IF_init();
-	_wavHeader = info;
-	ADM_assert(_wavHeader);
+	
 
 	info->channels = 1;
 }



From gruntster at mail.berlios.de  Wed May 11 19:54:15 2011
From: gruntster at mail.berlios.de (gruntster at mail.berlios.de)
Date: Wed, 11 May 2011 19:54:15 +0200
Subject: [Avidemux-svn-commit] r7199 - in
	branches/avidemux_2.5_branch_gruntster: avidemux
	avidemux/ADM_libraries cmake cmake/patches
	platforms/windows/installer
Message-ID: <20110511175416.1636448122A@sheep.berlios.de>

Author: gruntster
Date: 2011-05-11 19:54:15 +0200 (Wed, 11 May 2011)
New Revision: 7199

Added:
   branches/avidemux_2.5_branch_gruntster/avidemux/ADM_libraries/ffmpeg-0.7-rc1.tar.gz
Removed:
   branches/avidemux_2.5_branch_gruntster/avidemux/ADM_libraries/ffmpeg_r25041.tar.gz
   branches/avidemux_2.5_branch_gruntster/avidemux/ADM_libraries/libswscale_r32049.tar.gz
Modified:
   branches/avidemux_2.5_branch_gruntster/avidemux/CMakeLists.txt
   branches/avidemux_2.5_branch_gruntster/cmake/admFFmpegBuild.cmake
   branches/avidemux_2.5_branch_gruntster/cmake/admFFmpegPrepareTar.cmake
   branches/avidemux_2.5_branch_gruntster/cmake/admFFmpegUtil.cmake
   branches/avidemux_2.5_branch_gruntster/cmake/patches/createPatches.sh
   branches/avidemux_2.5_branch_gruntster/cmake/patches/libavcodec_avcodec.h.patch
   branches/avidemux_2.5_branch_gruntster/cmake/patches/libavcodec_h263dec.c.patch
   branches/avidemux_2.5_branch_gruntster/cmake/patches/libavcodec_h264.c.patch
   branches/avidemux_2.5_branch_gruntster/cmake/patches/libavcodec_h264_parser.c.patch
   branches/avidemux_2.5_branch_gruntster/cmake/patches/libavcodec_mpeg12.c.patch
   branches/avidemux_2.5_branch_gruntster/cmake/patches/libavcodec_mpegvideo.c.patch
   branches/avidemux_2.5_branch_gruntster/cmake/patches/libavcodec_mpegvideo_enc.c.patch
   branches/avidemux_2.5_branch_gruntster/cmake/patches/libavcodec_utils.c.patch
   branches/avidemux_2.5_branch_gruntster/cmake/patches/libavcodec_vc1dec.c.patch
   branches/avidemux_2.5_branch_gruntster/cmake/patches/libavformat_file.c.patch
   branches/avidemux_2.5_branch_gruntster/cmake/patches/libavformat_isom.c.patch
   branches/avidemux_2.5_branch_gruntster/cmake/patches/libavformat_matroskaenc.c.patch
   branches/avidemux_2.5_branch_gruntster/platforms/windows/installer/avidemux.nsi
Log:
[ffmpeg] roll ffmpeg forward again so win64 works properly (0.7rc1)

Added: branches/avidemux_2.5_branch_gruntster/avidemux/ADM_libraries/ffmpeg-0.7-rc1.tar.gz
===================================================================
(Binary files differ)


Property changes on: branches/avidemux_2.5_branch_gruntster/avidemux/ADM_libraries/ffmpeg-0.7-rc1.tar.gz
___________________________________________________________________
Added: svn:mime-type
   + application/octet-stream

Deleted: branches/avidemux_2.5_branch_gruntster/avidemux/ADM_libraries/ffmpeg_r25041.tar.gz
===================================================================
(Binary files differ)

Deleted: branches/avidemux_2.5_branch_gruntster/avidemux/ADM_libraries/libswscale_r32049.tar.gz
===================================================================
(Binary files differ)

Modified: branches/avidemux_2.5_branch_gruntster/avidemux/CMakeLists.txt
===================================================================
--- branches/avidemux_2.5_branch_gruntster/avidemux/CMakeLists.txt	2011-05-10 06:07:28 UTC (rev 7198)
+++ branches/avidemux_2.5_branch_gruntster/avidemux/CMakeLists.txt	2011-05-11 17:54:15 UTC (rev 7199)
@@ -279,8 +279,7 @@
 	ADM_libpostproc
 	ADM_libswscale
 	ADM_libavcodec
-	ADM_libavformat
-	ADM_libavcore)
+	ADM_libavformat)
 
 if (USE_SYSTEM_SPIDERMONKEY)
 	ADD_LIB_ALL_TARGETS(${SPIDERMONKEY_LIBRARY_DIR})

Modified: branches/avidemux_2.5_branch_gruntster/cmake/admFFmpegBuild.cmake
===================================================================
--- branches/avidemux_2.5_branch_gruntster/cmake/admFFmpegBuild.cmake	2011-05-10 06:07:28 UTC (rev 7198)
+++ branches/avidemux_2.5_branch_gruntster/cmake/admFFmpegBuild.cmake	2011-05-11 17:54:15 UTC (rev 7199)
@@ -1,16 +1,20 @@
 include(admFFmpegUtil)
 
-set(FFMPEG_VERSION 25041)	# http://git.ffmpeg.org/?p=ffmpeg;a=snapshot;h=2be4fa05c5528073bcfc472d1c23f2d77b679a9d;sf=tgz
-set(SWSCALE_VERSION 32049)	# http://git.ffmpeg.org/?p=libswscale;a=snapshot;h=d1a43021d9198868fa7a023a30e5ee9e09a907d3;sf=tgz
+set(FFMPEG_VERSION 0.7-rc1)
+set(FFMPEG_SOURCE_ARCHIVE "ffmpeg-${FFMPEG_VERSION}.tar.gz")
+set(FFMPEG_SOURCE_ARCHIVE_DIR "ffmpeg-${FFMPEG_VERSION}")
 
+#set(FFMPEG_VERSION 26061)	# http://git.ffmpeg.org/?p=ffmpeg;a=snapshot;h=2be4fa05c5528073bcfc472d1c23f2d77b679a9d;sf=tgz
+#set(SWSCALE_VERSION 32724)	# http://git.ffmpeg.org/?p=libswscale;a=snapshot;h=d1a43021d9198868fa7a023a30e5ee9e09a907d3;sf=tgz
+
 set(LIBRARY_SOURCE_DIR "${CMAKE_SOURCE_DIR}/avidemux/ADM_libraries")
 set(FFMPEG_SOURCE_DIR "${LIBRARY_SOURCE_DIR}/ffmpeg")
 set(FFMPEG_BINARY_DIR "${CMAKE_BINARY_DIR}/avidemux/ADM_libraries/ffmpeg")
 
-set(FFMPEG_DECODERS  adpcm_ima_amv  amv  bmp  cinepak  cyuv  dca  dvbsub  dvvideo  ffv1  ffvhuff  flv  fraps  h263  h264  huffyuv  mjpeg
-					 mjpegb  mpeg2video  mpeg4  msmpeg4v2  msmpeg4v3  msvideo1  nellymoser  png  qdm2  rawvideo  snow  svq3  theora  tscc
-					 vc1  vp3  vp6  vp6a  vp6f  wmav2  wmv1  wmv2  wmv3)
-set(FFMPEG_ENCODERS  ac3  dvvideo  ffv1  ffvhuff  flv  h263  huffyuv  mjpeg  mp2  mpeg1video  mpeg2video  mpeg4  snow)
+set(FFMPEG_DECODERS  adpcm_ima_amv  amv  bmp  cinepak  cyuv  dca  dvbsub  dvvideo  ffv1  ffvhuff  flac  flv  fraps  h263  h264  huffyuv
+					 mjpeg  mjpegb  mpeg2video  mpeg4  msmpeg4v2  msmpeg4v3  msvideo1  nellymoser  png  qdm2  rawvideo  snow  svq3
+					 theora  tscc  vc1  vp3  vp6  vp6a  vp6f  wmav2  wmv1  wmv2  wmv3)
+set(FFMPEG_ENCODERS  ac3  ac3_fixed  ac3_float  dvvideo  ffv1  ffvhuff  flv  h263  huffyuv  mjpeg  mp2  mpeg1video  mpeg2video  mpeg4  snow)
 set(FFMPEG_MUXERS  flv  matroska  mpeg1vcd  mpeg2dvd  mpeg2svcd  mpegts  mov  mp4  psp)
 set(FFMPEG_PARSERS  ac3  h263  h264  mpeg4video)
 set(FFMPEG_PROTOCOLS  file)
@@ -20,9 +24,9 @@
 include(admFFmpegPatch)
 include(admFFmpegPrepareTar)
 
-if (NOT FFMPEG_PREPARED)
-	include(admFFmpegPrepareSvn)
-endif (NOT FFMPEG_PREPARED)
+#if (NOT FFMPEG_PREPARED)
+	#include(admFFmpegPrepareSvn)
+#endif (NOT FFMPEG_PREPARED)
 
 if (NOT VERBOSE)
 	set(ffmpegBuildOutput OUTPUT_VARIABLE FFMPEG_CONFIGURE_OUTPUT)
@@ -205,10 +209,6 @@
 set_property(TARGET ADM_libavformat PROPERTY IMPORTED_LOCATION "${FFMPEG_BINARY_DIR}/libavformat/${LIBAVFORMAT_LIB}")
 install(${FFMPEG_SHLIB_INSTALL_TYPE} "${FFMPEG_BINARY_DIR}/libavformat/${LIBAVFORMAT_LIB}" DESTINATION "${FFMPEG_INSTALL_DIR}")
 
-add_library(ADM_libavcore UNKNOWN IMPORTED)
-set_property(TARGET ADM_libavcore PROPERTY IMPORTED_LOCATION "${FFMPEG_BINARY_DIR}/libavcore/${LIBAVCORE_LIB}")
-install(${FFMPEG_SHLIB_INSTALL_TYPE} "${FFMPEG_BINARY_DIR}/libavcore/${LIBAVCORE_LIB}" DESTINATION "${FFMPEG_INSTALL_DIR}")
-
 include_directories("${FFMPEG_SOURCE_DIR}")
 include_directories("${FFMPEG_SOURCE_DIR}/libavutil")
 include_directories("${FFMPEG_SOURCE_DIR}/libpostproc")

Modified: branches/avidemux_2.5_branch_gruntster/cmake/admFFmpegPrepareTar.cmake
===================================================================
--- branches/avidemux_2.5_branch_gruntster/cmake/admFFmpegPrepareTar.cmake	2011-05-10 06:07:28 UTC (rev 7198)
+++ branches/avidemux_2.5_branch_gruntster/cmake/admFFmpegPrepareTar.cmake	2011-05-11 17:54:15 UTC (rev 7199)
@@ -2,33 +2,39 @@
 	set(ffmpegExtractOutput OUTPUT_VARIABLE FFMPEG_EXTRACT_OUTPUT)
 endif (NOT VERBOSE)
 
-set(FFMPEG_SOURCE_ARCHIVE "ffmpeg_r${FFMPEG_VERSION}.tar.gz")
-set(SWSCALE_SOURCE_ARCHIVE "libswscale_r${SWSCALE_VERSION}.tar.gz")
+#set(FFMPEG_SOURCE_ARCHIVE "ffmpeg_r${FFMPEG_VERSION}.tar.gz")
+#set(SWSCALE_SOURCE_ARCHIVE "libswscale_r${SWSCALE_VERSION}.tar.gz")
 
-if (EXISTS "${LIBRARY_SOURCE_DIR}/${FFMPEG_SOURCE_ARCHIVE}" AND EXISTS "${LIBRARY_SOURCE_DIR}/${SWSCALE_SOURCE_ARCHIVE}")
+if (EXISTS "${LIBRARY_SOURCE_DIR}/${FFMPEG_SOURCE_ARCHIVE}") # AND EXISTS "${LIBRARY_SOURCE_DIR}/${SWSCALE_SOURCE_ARCHIVE}")
 	if (NOT EXISTS "${FFMPEG_SOURCE_DIR}/ffmpeg.c" OR NOT ${LAST_FFMPEG_VERSION} EQUAL ${FFMPEG_VERSION})
 		find_package(Tar)
 
+		execute_process(COMMAND ${CMAKE_COMMAND} -E remove "ffmpeg"
+					WORKING_DIRECTORY "${LIBRARY_SOURCE_DIR}")
+
 		execute_process(COMMAND ${TAR_EXECUTABLE} xvf ${FFMPEG_SOURCE_ARCHIVE}
 					WORKING_DIRECTORY "${LIBRARY_SOURCE_DIR}"
 					${ffmpegExtractOutput})
 
+		execute_process(COMMAND ${CMAKE_COMMAND} -E rename "ffmpeg-0.7-rc1" "ffmpeg"
+					WORKING_DIRECTORY "${LIBRARY_SOURCE_DIR}")
+
 		set(FFMPEG_PERFORM_PATCH 1)
 		set(FFMPEG_PERFORM_BUILD 1)
 	endif (NOT EXISTS "${FFMPEG_SOURCE_DIR}/ffmpeg.c" OR NOT ${LAST_FFMPEG_VERSION} EQUAL ${FFMPEG_VERSION})
 
-	if (NOT EXISTS "${FFMPEG_SOURCE_DIR}/libswscale/swscale.c" OR NOT ${LAST_SWSCALE_VERSION} EQUAL ${SWSCALE_VERSION})
-		find_package(Tar)
+	#if (NOT EXISTS "${FFMPEG_SOURCE_DIR}/libswscale/swscale.c" OR NOT ${LAST_SWSCALE_VERSION} EQUAL ${SWSCALE_VERSION})
+		#find_package(Tar)
 
-		execute_process(COMMAND ${TAR_EXECUTABLE} xvf ../${SWSCALE_SOURCE_ARCHIVE}
-					WORKING_DIRECTORY "${FFMPEG_SOURCE_DIR}"
-					${ffmpegExtractOutput})
+		#execute_process(COMMAND ${TAR_EXECUTABLE} xvf ../${SWSCALE_SOURCE_ARCHIVE}
+					#WORKING_DIRECTORY "${FFMPEG_SOURCE_DIR}"
+					#${ffmpegExtractOutput})
 
-		set(FFMPEG_PERFORM_PATCH 1)
-		set(FFMPEG_PERFORM_BUILD 1)
-	endif (NOT EXISTS "${FFMPEG_SOURCE_DIR}/libswscale/swscale.c" OR NOT ${LAST_SWSCALE_VERSION} EQUAL ${SWSCALE_VERSION})
+		#set(FFMPEG_PERFORM_PATCH 1)
+		#set(FFMPEG_PERFORM_BUILD 1)
+	#endif (NOT EXISTS "${FFMPEG_SOURCE_DIR}/libswscale/swscale.c" OR NOT ${LAST_SWSCALE_VERSION} EQUAL ${SWSCALE_VERSION})
 
 	set(FFMPEG_PREPARED 1)
 	set(LAST_FFMPEG_VERSION "${FFMPEG_VERSION}" CACHE STRING "" FORCE)
-	set(LAST_SWSCALE_VERSION "${SWSCALE_VERSION}" CACHE STRING "" FORCE)
-endif (EXISTS "${LIBRARY_SOURCE_DIR}/${FFMPEG_SOURCE_ARCHIVE}" AND EXISTS "${LIBRARY_SOURCE_DIR}/${SWSCALE_SOURCE_ARCHIVE}")
\ No newline at end of file
+	#set(LAST_SWSCALE_VERSION "${SWSCALE_VERSION}" CACHE STRING "" FORCE)
+endif (EXISTS "${LIBRARY_SOURCE_DIR}/${FFMPEG_SOURCE_ARCHIVE}") # AND EXISTS "${LIBRARY_SOURCE_DIR}/${SWSCALE_SOURCE_ARCHIVE}")
\ No newline at end of file

Modified: branches/avidemux_2.5_branch_gruntster/cmake/admFFmpegUtil.cmake
===================================================================
--- branches/avidemux_2.5_branch_gruntster/cmake/admFFmpegUtil.cmake	2011-05-10 06:07:28 UTC (rev 7198)
+++ branches/avidemux_2.5_branch_gruntster/cmake/admFFmpegUtil.cmake	2011-05-11 17:54:15 UTC (rev 7199)
@@ -5,9 +5,8 @@
 ENDMACRO (getFfmpegVersionFromHeader)
 
 MACRO (getFfmpegLibNames sourceDir)
-	getFfmpegVersionFromHeader("libavcodec" "${sourceDir}/libavcodec/avcodec.h" LIBAVCODEC_VERSION_MAJOR LIBAVCODEC_VERSION)
-	getFfmpegVersionFromHeader("libavcore" "${sourceDir}/libavcore/avcore.h" LIBAVCORE_VERSION_MAJOR LIBAVCORE_VERSION)	
-	getFfmpegVersionFromHeader("libavformat" "${sourceDir}/libavformat/avformat.h" LIBAVFORMAT_VERSION_MAJOR LIBAVFORMAT_VERSION)
+	getFfmpegVersionFromHeader("libavcodec" "${sourceDir}/libavcodec/version.h" LIBAVCODEC_VERSION_MAJOR LIBAVCODEC_VERSION)
+	getFfmpegVersionFromHeader("libavformat" "${sourceDir}/libavformat/version.h" LIBAVFORMAT_VERSION_MAJOR LIBAVFORMAT_VERSION)
 	getFfmpegVersionFromHeader("libavutil" "${sourceDir}/libavutil/avutil.h" LIBAVUTIL_VERSION_MAJOR LIBAVUTIL_VERSION)
 	getFfmpegVersionFromHeader("libpostproc" "${sourceDir}/libpostproc/postprocess.h" LIBPOSTPROC_VERSION_MAJOR LIBPOSTPROC_VERSION)
 	getFfmpegVersionFromHeader("libswscale" "${sourceDir}/libswscale/swscale.h" LIBSWSCALE_VERSION_MAJOR LIBSWSCALE_VERSION)
@@ -18,21 +17,18 @@
 
 	if (APPLE)
 		set(LIBAVCODEC_LIB lib${LIBAVCODEC_ADM}avcodec.${LIBAVCODEC_VERSION}${CMAKE_SHARED_LIBRARY_SUFFIX})
-		set(LIBAVCORE_LIB lib${LIBAVCODEC_ADM}avcore.${LIBAVCORE_VERSION}${CMAKE_SHARED_LIBRARY_SUFFIX})
 		set(LIBAVFORMAT_LIB lib${LIBAVCODEC_ADM}avformat.${LIBAVFORMAT_VERSION}${CMAKE_SHARED_LIBRARY_SUFFIX})
 		set(LIBAVUTIL_LIB lib${LIBAVCODEC_ADM}avutil.${LIBAVUTIL_VERSION}${CMAKE_SHARED_LIBRARY_SUFFIX})
 		set(LIBPOSTPROC_LIB lib${LIBAVCODEC_ADM}postproc.${LIBPOSTPROC_VERSION}${CMAKE_SHARED_LIBRARY_SUFFIX})
 		set(LIBSWSCALE_LIB lib${LIBAVCODEC_ADM}swscale.${LIBSWSCALE_VERSION}${CMAKE_SHARED_LIBRARY_SUFFIX})
 	elseif (UNIX)
 		set(LIBAVCODEC_LIB lib${LIBAVCODEC_ADM}avcodec${CMAKE_SHARED_LIBRARY_SUFFIX}.${LIBAVCODEC_VERSION})
-		set(LIBAVCORE_LIB lib${LIBAVCODEC_ADM}avcore${CMAKE_SHARED_LIBRARY_SUFFIX}.${LIBAVCORE_VERSION})
 		set(LIBAVFORMAT_LIB lib${LIBAVCODEC_ADM}avformat${CMAKE_SHARED_LIBRARY_SUFFIX}.${LIBAVFORMAT_VERSION})
 		set(LIBAVUTIL_LIB lib${LIBAVCODEC_ADM}avutil${CMAKE_SHARED_LIBRARY_SUFFIX}.${LIBAVUTIL_VERSION})
 		set(LIBPOSTPROC_LIB lib${LIBAVCODEC_ADM}postproc${CMAKE_SHARED_LIBRARY_SUFFIX}.${LIBPOSTPROC_VERSION})
 		set(LIBSWSCALE_LIB lib${LIBAVCODEC_ADM}swscale${CMAKE_SHARED_LIBRARY_SUFFIX}.${LIBSWSCALE_VERSION})
 	else (APPLE)
 		set(LIBAVCODEC_LIB ${LIBAVCODEC_ADM}avcodec-${LIBAVCODEC_VERSION}${CMAKE_SHARED_LIBRARY_SUFFIX})
-		set(LIBAVCORE_LIB ${LIBAVCODEC_ADM}avcore-${LIBAVCORE_VERSION}${CMAKE_SHARED_LIBRARY_SUFFIX})
 		set(LIBAVFORMAT_LIB ${LIBAVCODEC_ADM}avformat-${LIBAVFORMAT_VERSION}${CMAKE_SHARED_LIBRARY_SUFFIX})
 		set(LIBAVUTIL_LIB ${LIBAVCODEC_ADM}avutil-${LIBAVUTIL_VERSION}${CMAKE_SHARED_LIBRARY_SUFFIX})
 		set(LIBPOSTPROC_LIB ${LIBAVCODEC_ADM}postproc-${LIBPOSTPROC_VERSION}${CMAKE_SHARED_LIBRARY_SUFFIX})

Modified: branches/avidemux_2.5_branch_gruntster/cmake/patches/createPatches.sh
===================================================================
--- branches/avidemux_2.5_branch_gruntster/cmake/patches/createPatches.sh	2011-05-10 06:07:28 UTC (rev 7198)
+++ branches/avidemux_2.5_branch_gruntster/cmake/patches/createPatches.sh	2011-05-11 17:54:15 UTC (rev 7199)
@@ -4,15 +4,22 @@
 export ffmpegPath=../../avidemux/ADM_libraries/ffmpeg
 
 function updatePatch {
+	#cd $ffmpegPath
+	#cp $1/$2 $1/$2.new
+	#svn revert $1/$2
+	#unix2dos $1/$2
+	#unix2dos $1/$2.new
+	#mv $1/$2 $1/$2.old
+	#mv $1/$2.new $1/$2
+	#diff -u $1/$2.old $1/$2 > $curDir/$1_$2.patch
+	#rm $1/$2.old
+	#cd $curDir
+	#dos2unix $1_$2.patch
+
 	cd $ffmpegPath
-	cp $1/$2 $1/$2.new
-	svn revert $1/$2
 	unix2dos $1/$2
-	unix2dos $1/$2.new
-	mv $1/$2 $1/$2.old
-	mv $1/$2.new $1/$2
-	diff -u $1/$2.old $1/$2 > $curDir/$1_$2.patch
-	rm $1/$2.old
+	unix2dos $1/$2.orig
+	diff -u $1/$2.orig $1/$2 > $curDir/$1_$2.patch
 	cd $curDir
 	dos2unix $1_$2.patch
 }

Modified: branches/avidemux_2.5_branch_gruntster/cmake/patches/libavcodec_avcodec.h.patch
===================================================================
--- branches/avidemux_2.5_branch_gruntster/cmake/patches/libavcodec_avcodec.h.patch	2011-05-10 06:07:28 UTC (rev 7198)
+++ branches/avidemux_2.5_branch_gruntster/cmake/patches/libavcodec_avcodec.h.patch	2011-05-11 17:54:15 UTC (rev 7199)
@@ -1,6 +1,6 @@
---- libavcodec/avcodec.h.old	2010-12-20 13:49:18 +0000
-+++ libavcodec/avcodec.h	2010-12-20 13:49:18 +0000
-@@ -665,6 +665,8 @@
+--- libavcodec/avcodec.h.orig	2011-05-10 22:40:28 +0100
++++ libavcodec/avcodec.h	2011-05-10 22:40:28 +0100
+@@ -636,6 +636,8 @@
  #define CODEC_FLAG2_PSY           0x00080000 ///< Use psycho visual optimizations.
  #define CODEC_FLAG2_SSIM          0x00100000 ///< Compute SSIM during encoding, error[] values are undefined.
  #define CODEC_FLAG2_INTRA_REFRESH 0x00200000 ///< Use periodic insertion of intra blocks instead of keyframes.
@@ -9,7 +9,7 @@
  
  /* Unsupported options :
   *              Syntax Arithmetic coding (SAC)
-@@ -1559,6 +1561,7 @@
+@@ -1589,6 +1591,7 @@
       * - decoding: unused
       */
      int rc_max_rate;
@@ -17,7 +17,7 @@
  
      /**
       * minimum bitrate
-@@ -1573,6 +1576,8 @@
+@@ -1603,6 +1606,8 @@
       * - decoding: unused
       */
      int rc_buffer_size;

Modified: branches/avidemux_2.5_branch_gruntster/cmake/patches/libavcodec_h263dec.c.patch
===================================================================
--- branches/avidemux_2.5_branch_gruntster/cmake/patches/libavcodec_h263dec.c.patch	2011-05-10 06:07:28 UTC (rev 7198)
+++ branches/avidemux_2.5_branch_gruntster/cmake/patches/libavcodec_h263dec.c.patch	2011-05-11 17:54:15 UTC (rev 7199)
@@ -1,6 +1,6 @@
---- libavcodec/h263dec.c.old	2010-12-20 13:49:21 +0000
-+++ libavcodec/h263dec.c	2010-12-20 13:49:21 +0000
-@@ -120,6 +120,25 @@
+--- libavcodec/h263dec.c.orig	2011-05-10 22:40:29 +0100
++++ libavcodec/h263dec.c	2011-05-10 22:40:29 +0100
+@@ -121,6 +121,25 @@
  
      return 0;
  }
@@ -26,7 +26,7 @@
  
  av_cold int ff_h263_decode_end(AVCodecContext *avctx)
  {
-@@ -422,6 +441,12 @@
+@@ -437,6 +456,12 @@
      } else {
          ret = h263_decode_picture_header(s);
      }
@@ -39,7 +39,7 @@
  
      if(ret==FRAME_SKIPPED) return get_consumed_bytes(s, buf_size);
  
-@@ -717,6 +742,14 @@
+@@ -738,6 +763,14 @@
  
  assert(s->current_picture.pict_type == s->current_picture_ptr->pict_type);
  assert(s->current_picture.pict_type == s->pict_type);

Modified: branches/avidemux_2.5_branch_gruntster/cmake/patches/libavcodec_h264.c.patch
===================================================================
--- branches/avidemux_2.5_branch_gruntster/cmake/patches/libavcodec_h264.c.patch	2011-05-10 06:07:28 UTC (rev 7198)
+++ branches/avidemux_2.5_branch_gruntster/cmake/patches/libavcodec_h264.c.patch	2011-05-11 17:54:15 UTC (rev 7199)
@@ -1,8 +1,8 @@
---- libavcodec/h264.c.old	2010-12-20 13:49:22 +0000
-+++ libavcodec/h264.c	2010-12-20 13:49:22 +0000
-@@ -3395,6 +3395,19 @@
-     return 0;
- }
+--- libavcodec/h264.c.orig	2011-04-26 23:58:23 +0100
++++ libavcodec/h264.c	2011-05-10 22:34:57 +0100
+@@ -3458,6 +3458,20 @@
+     { FF_PROFILE_UNKNOWN },
+ };
  
 +/* MEANX */
 +int av_getAVCStreamInfo(AVCodecContext *avctx, uint32_t  *nalSize, uint32_t *isAvc);
@@ -17,6 +17,7 @@
 +
 +  }
 +/* MeanX */
- 
- AVCodec h264_decoder = {
++
+ AVCodec ff_h264_decoder = {
      "h264",
+     AVMEDIA_TYPE_VIDEO,

Modified: branches/avidemux_2.5_branch_gruntster/cmake/patches/libavcodec_h264_parser.c.patch
===================================================================
--- branches/avidemux_2.5_branch_gruntster/cmake/patches/libavcodec_h264_parser.c.patch	2011-05-10 06:07:28 UTC (rev 7198)
+++ branches/avidemux_2.5_branch_gruntster/cmake/patches/libavcodec_h264_parser.c.patch	2011-05-11 17:54:15 UTC (rev 7199)
@@ -1,6 +1,6 @@
---- libavcodec/h264_parser.c.old	2010-12-20 13:49:23 +0000
-+++ libavcodec/h264_parser.c	2010-12-20 13:49:23 +0000
-@@ -30,7 +30,52 @@
+--- libavcodec/h264_parser.c.orig	2011-05-10 22:40:29 +0100
++++ libavcodec/h264_parser.c	2011-05-10 22:40:29 +0100
+@@ -29,7 +29,52 @@
  #include "h264data.h"
  #include "golomb.h"
  
@@ -52,4 +52,4 @@
 +// /MEANX
  
  
- int ff_h264_find_frame_end(H264Context *h, const uint8_t *buf, int buf_size)
+ static int ff_h264_find_frame_end(H264Context *h, const uint8_t *buf, int buf_size)

Modified: branches/avidemux_2.5_branch_gruntster/cmake/patches/libavcodec_mpeg12.c.patch
===================================================================
--- branches/avidemux_2.5_branch_gruntster/cmake/patches/libavcodec_mpeg12.c.patch	2011-05-10 06:07:28 UTC (rev 7198)
+++ branches/avidemux_2.5_branch_gruntster/cmake/patches/libavcodec_mpeg12.c.patch	2011-05-11 17:54:15 UTC (rev 7199)
@@ -1,6 +1,6 @@
---- libavcodec/mpeg12.c.old	2010-12-20 13:49:23 +0000
-+++ libavcodec/mpeg12.c	2010-12-20 13:49:23 +0000
-@@ -1948,6 +1948,11 @@
+--- libavcodec/mpeg12.c.orig	2011-05-10 22:40:29 +0100
++++ libavcodec/mpeg12.c	2011-05-10 22:40:29 +0100
+@@ -1999,6 +1999,11 @@
          ff_er_frame_end(s);
  
          MPV_frame_end(s);

Modified: branches/avidemux_2.5_branch_gruntster/cmake/patches/libavcodec_mpegvideo.c.patch
===================================================================
--- branches/avidemux_2.5_branch_gruntster/cmake/patches/libavcodec_mpegvideo.c.patch	2011-05-10 06:07:28 UTC (rev 7198)
+++ branches/avidemux_2.5_branch_gruntster/cmake/patches/libavcodec_mpegvideo.c.patch	2011-05-11 17:54:15 UTC (rev 7199)
@@ -1,6 +1,6 @@
---- libavcodec/mpegvideo.c.old	2010-12-20 13:49:25 +0000
-+++ libavcodec/mpegvideo.c	2010-12-20 13:49:25 +0000
-@@ -653,7 +653,11 @@
+--- libavcodec/mpegvideo.c.orig	2011-05-10 22:40:30 +0100
++++ libavcodec/mpegvideo.c	2011-05-10 22:40:29 +0100
+@@ -735,7 +735,11 @@
      FF_ALLOCZ_OR_GOTO(s->avctx, s->prev_pict_types, PREV_PICT_TYPES_BUFFER_SIZE, fail);
  
      s->parse_context.state= -1;

Modified: branches/avidemux_2.5_branch_gruntster/cmake/patches/libavcodec_mpegvideo_enc.c.patch
===================================================================
--- branches/avidemux_2.5_branch_gruntster/cmake/patches/libavcodec_mpegvideo_enc.c.patch	2011-05-10 06:07:28 UTC (rev 7198)
+++ branches/avidemux_2.5_branch_gruntster/cmake/patches/libavcodec_mpegvideo_enc.c.patch	2011-05-11 17:54:15 UTC (rev 7199)
@@ -1,6 +1,6 @@
---- libavcodec/mpegvideo_enc.c.old	2010-12-20 13:49:26 +0000
-+++ libavcodec/mpegvideo_enc.c	2010-12-20 13:49:26 +0000
-@@ -367,12 +367,14 @@
+--- libavcodec/mpegvideo_enc.c.orig	2011-05-10 22:40:30 +0100
++++ libavcodec/mpegvideo_enc.c	2011-05-10 22:40:30 +0100
+@@ -376,12 +376,14 @@
  
          av_log(avctx, AV_LOG_INFO, "Warning vbv_delay will be set to 0xFFFF (=VBR) as the specified vbv buffer is too large for the given bitrate!\n");
      }
@@ -15,7 +15,7 @@
  
      if(s->obmc && s->avctx->mb_decision != FF_MB_DECISION_SIMPLE){
          av_log(avctx, AV_LOG_ERROR, "OBMC is only supported with simple mb decision\n");
-@@ -413,10 +415,12 @@
+@@ -422,10 +424,12 @@
          return -1;
      }
  

Modified: branches/avidemux_2.5_branch_gruntster/cmake/patches/libavcodec_utils.c.patch
===================================================================
--- branches/avidemux_2.5_branch_gruntster/cmake/patches/libavcodec_utils.c.patch	2011-05-10 06:07:28 UTC (rev 7198)
+++ branches/avidemux_2.5_branch_gruntster/cmake/patches/libavcodec_utils.c.patch	2011-05-11 17:54:15 UTC (rev 7199)
@@ -1,6 +1,6 @@
---- libavcodec/utils.c.old	2010-12-20 13:49:27 +0000
-+++ libavcodec/utils.c	2010-12-20 13:49:27 +0000
-@@ -659,10 +659,12 @@
+--- libavcodec/utils.c.orig	2011-05-10 22:40:30 +0100
++++ libavcodec/utils.c	2011-05-10 22:40:30 +0100
+@@ -766,10 +766,12 @@
  
      if((avctx->codec->capabilities & CODEC_CAP_DELAY) || avpkt->size){
          //FIXME remove the check below _after_ ensuring that all audio check that the available space is enough

Modified: branches/avidemux_2.5_branch_gruntster/cmake/patches/libavcodec_vc1dec.c.patch
===================================================================
--- branches/avidemux_2.5_branch_gruntster/cmake/patches/libavcodec_vc1dec.c.patch	2011-05-10 06:07:28 UTC (rev 7198)
+++ branches/avidemux_2.5_branch_gruntster/cmake/patches/libavcodec_vc1dec.c.patch	2011-05-11 17:54:15 UTC (rev 7199)
@@ -1,14 +1,14 @@
---- libavcodec/vc1dec.c.old	2010-12-20 13:49:28 +0000
-+++ libavcodec/vc1dec.c	2010-12-20 13:49:28 +0000
-@@ -3146,7 +3146,10 @@
-     AVFrame *pict = data;
-     uint8_t *buf2 = NULL;
-     const uint8_t *buf_start = buf;
--
-+/** MEANX **/
-+    if(s->flags& CODEC_FLAG_LOW_DELAY)
-+        s->low_delay=1;
-+/** /MEANX **/
+--- libavcodec/vc1dec.c.orig	2011-04-26 23:58:23 +0100
++++ libavcodec/vc1dec.c	2011-05-10 21:01:54 +0100
+@@ -3390,6 +3390,11 @@
+         int mby_start;
+     } *slices = NULL;
+ 
++	/** MEANX **/
++	if(s->flags & CODEC_FLAG_LOW_DELAY)
++		s->low_delay = 1;
++	/** /MEANX **/
++
      /* no supplementary picture */
-     if (buf_size == 0) {
+     if (buf_size == 0 || (buf_size == 4 && AV_RB32(buf) == VC1_CODE_ENDOFSEQ)) {
          /* special case for last picture */

Modified: branches/avidemux_2.5_branch_gruntster/cmake/patches/libavformat_file.c.patch
===================================================================
--- branches/avidemux_2.5_branch_gruntster/cmake/patches/libavformat_file.c.patch	2011-05-10 06:07:28 UTC (rev 7198)
+++ branches/avidemux_2.5_branch_gruntster/cmake/patches/libavformat_file.c.patch	2011-05-11 17:54:15 UTC (rev 7199)
@@ -1,8 +1,8 @@
---- libavformat/file.c.old	2010-12-20 13:49:28 +0000
-+++ libavformat/file.c	2010-12-20 13:49:29 +0000
-@@ -30,6 +30,75 @@
- #include <stdlib.h>
+--- libavformat/file.c.orig	2011-05-10 22:40:30 +0100
++++ libavformat/file.c	2011-05-10 22:40:30 +0100
+@@ -31,6 +31,75 @@
  #include "os_support.h"
+ #include "url.h"
  
 +// GRUNTSTER start
 +#ifdef __WIN32

Modified: branches/avidemux_2.5_branch_gruntster/cmake/patches/libavformat_isom.c.patch
===================================================================
--- branches/avidemux_2.5_branch_gruntster/cmake/patches/libavformat_isom.c.patch	2011-05-10 06:07:28 UTC (rev 7198)
+++ branches/avidemux_2.5_branch_gruntster/cmake/patches/libavformat_isom.c.patch	2011-05-11 17:54:15 UTC (rev 7199)
@@ -1,6 +1,6 @@
---- libavformat/isom.c.old	2010-12-20 13:49:29 +0000
-+++ libavformat/isom.c	2010-12-20 13:49:29 +0000
-@@ -222,7 +222,10 @@
+--- libavformat/isom.c.orig	2011-05-10 22:40:30 +0100
++++ libavformat/isom.c	2011-05-10 22:40:30 +0100
+@@ -234,7 +234,10 @@
      { CODEC_ID_MP1, MKTAG('.', 'm', 'p', '1') }, /* MPEG layer 1 */
      { CODEC_ID_MP2, MKTAG('.', 'm', 'p', '2') }, /* MPEG layer 2 */
  

Modified: branches/avidemux_2.5_branch_gruntster/cmake/patches/libavformat_matroskaenc.c.patch
===================================================================
--- branches/avidemux_2.5_branch_gruntster/cmake/patches/libavformat_matroskaenc.c.patch	2011-05-10 06:07:28 UTC (rev 7198)
+++ branches/avidemux_2.5_branch_gruntster/cmake/patches/libavformat_matroskaenc.c.patch	2011-05-11 17:54:15 UTC (rev 7199)
@@ -1,15 +1,15 @@
---- libavformat/matroskaenc.c.old	2010-12-20 13:49:30 +0000
-+++ libavformat/matroskaenc.c	2010-12-20 13:49:30 +0000
+--- libavformat/matroskaenc.c.orig	2011-05-10 22:40:30 +0100
++++ libavformat/matroskaenc.c	2011-05-10 22:40:30 +0100
 @@ -410,6 +410,7 @@
  
- static int put_xiph_codecpriv(AVFormatContext *s, ByteIOContext *pb, AVCodecContext *codec)
+ static int put_xiph_codecpriv(AVFormatContext *s, AVIOContext *pb, AVCodecContext *codec)
  {
 +#if 0 // MEANX avidemux does thing differently
      uint8_t *header_start[3];
      int header_len[3];
      int first_header_size;
 @@ -434,6 +435,28 @@
-         put_buffer(pb, header_start[j], header_len[j]);
+         avio_write(pb, header_start[j], header_len[j]);
  
      return 0;
 +#else
@@ -37,7 +37,7 @@
  }
  
  static void get_aac_sample_rates(AVFormatContext *s, AVCodecContext *codec, int *sample_rate, int *output_sample_rate)
-@@ -552,6 +575,24 @@
+@@ -538,6 +561,24 @@
          put_ebml_uint (pb, MATROSKA_ID_TRACKUID        , i + 1);
          put_ebml_uint (pb, MATROSKA_ID_TRACKFLAGLACING , 0);    // no lacing (yet)
  

Modified: branches/avidemux_2.5_branch_gruntster/platforms/windows/installer/avidemux.nsi
===================================================================
--- branches/avidemux_2.5_branch_gruntster/platforms/windows/installer/avidemux.nsi	2011-05-10 06:07:28 UTC (rev 7198)
+++ branches/avidemux_2.5_branch_gruntster/platforms/windows/installer/avidemux.nsi	2011-05-11 17:54:15 UTC (rev 7199)
@@ -304,7 +304,6 @@
     ${File} COPYING.
     ${File} README.
     ${File} avcodec-*.dll
-    ${File} avcore-*.dll
     ${File} avformat-*.dll
     ${File} avutil-*.dll
     ${File} postproc-*.dll



From gruntster at mail.berlios.de  Wed May 11 19:57:57 2011
From: gruntster at mail.berlios.de (gruntster at mail.berlios.de)
Date: Wed, 11 May 2011 19:57:57 +0200
Subject: [Avidemux-svn-commit] r7200 -
	branches/avidemux_2.5_branch_gruntster/cmake
Message-ID: <20110511175757.D963548122A@sheep.berlios.de>

Author: gruntster
Date: 2011-05-11 19:57:56 +0200 (Wed, 11 May 2011)
New Revision: 7200

Modified:
   branches/avidemux_2.5_branch_gruntster/cmake/admFFmpegPrepareTar.cmake
Log:
[ffmpeg] remove previous ffmpeg source

Modified: branches/avidemux_2.5_branch_gruntster/cmake/admFFmpegPrepareTar.cmake
===================================================================
--- branches/avidemux_2.5_branch_gruntster/cmake/admFFmpegPrepareTar.cmake	2011-05-11 17:54:15 UTC (rev 7199)
+++ branches/avidemux_2.5_branch_gruntster/cmake/admFFmpegPrepareTar.cmake	2011-05-11 17:57:56 UTC (rev 7200)
@@ -9,7 +9,7 @@
 	if (NOT EXISTS "${FFMPEG_SOURCE_DIR}/ffmpeg.c" OR NOT ${LAST_FFMPEG_VERSION} EQUAL ${FFMPEG_VERSION})
 		find_package(Tar)
 
-		execute_process(COMMAND ${CMAKE_COMMAND} -E remove "ffmpeg"
+		execute_process(COMMAND ${CMAKE_COMMAND} -E remove_directory "ffmpeg"
 					WORKING_DIRECTORY "${LIBRARY_SOURCE_DIR}")
 
 		execute_process(COMMAND ${TAR_EXECUTABLE} xvf ${FFMPEG_SOURCE_ARCHIVE}



From mean at mail.berlios.de  Sat May 14 21:47:08 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Sat, 14 May 2011 21:47:08 +0200
Subject: [Avidemux-svn-commit] r7201 - in
	branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreAudioParser:
	include src
Message-ID: <20110514194708.B751E4813F7@sheep.berlios.de>

Author: mean
Date: 2011-05-14 21:47:08 +0200 (Sat, 14 May 2011)
New Revision: 7201

Modified:
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreAudioParser/include/ADM_aacinfo.h
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreAudioParser/src/ADM_aacinfo.cpp
Log:
[audio core] update aacinfo to read audiospecif decoder config

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreAudioParser/include/ADM_aacinfo.h
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreAudioParser/include/ADM_aacinfo.h	2011-05-11 17:57:56 UTC (rev 7200)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreAudioParser/include/ADM_aacinfo.h	2011-05-14 19:47:08 UTC (rev 7201)
@@ -5,21 +5,16 @@
 
 #ifndef ADM__AAC__INFO
 #define ADM__AAC__INFO
-
+/**
+    \fn AacAudioInfo
+*/
 typedef struct 
 {
-	
-	uint32_t layer;		// 0 mpeg4, 1 mpeg2 
-	uint32_t profile;	// 0 Main/1 LC
-	uint32_t samplerate;	// i.e. Frequency
-	uint32_t channels;	// # channels
-	uint32_t nbBlock;	// Packet size including header
-	uint32_t size;		// size of complete frame
-	uint32_t samples;	// # of sample in this packet
-	uint8_t  extra[2];
-
+	uint32_t frequency;		
+	uint32_t channels;	
+	bool     sbr;	
 }AacAudioInfo;
 
-
-bool getAdtsAacInfo(int size, uint8_t *data, AacAudioInfo *info,int *offset,bool createExtra);
+/// extract fq etc.. from ESDS atom
+bool getAdtsAacInfo(int size, uint8_t *data, AacAudioInfo &info);
 #endif
\ No newline at end of file

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreAudioParser/src/ADM_aacinfo.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreAudioParser/src/ADM_aacinfo.cpp	2011-05-11 17:57:56 UTC (rev 7200)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreAudioParser/src/ADM_aacinfo.cpp	2011-05-14 19:47:08 UTC (rev 7201)
@@ -22,10 +22,7 @@
 
 #include "ADM_default.h"
 #include <math.h>
-
-
-#include "ADM_default.h"
-//#include "aviaudio.hxx"
+#include "ADM_getbits.h"
 #include "ADM_aacinfo.h"
 
 static const int aacChannels[8]=
@@ -40,155 +37,95 @@
 8 // 7: 8 channels: front-center, front-left, front-right, side-left, side-right, back-left, back-right, LFE-channel
 };
 
-static 	uint32_t aacBitrate[16]=
+static 	uint32_t aacSampleRate[16]=
 {
 	96000, 88200, 64000, 48000,
 	44100, 32000, 24000, 22050,
 	16000, 12000, 11025,  8000,
 	0,     0,     0,     0 
 };
-/*
-[0]
-	12 bits 111111	0xFC Sync tag
-	
-	1		layer 1 Mpeg2 0 Mpeg4
-	2		00
-	1		prot : 1 absent 0 present
-	
-[2]/16 bits	
-	2		profile  00 main/01 LC
-	4		sampling index
-	1		private
-	
-	1		channel
-[3]/24 bits
-	2               channel (cont'ed)
-	
-	1		original
-	1		Home
--------------------------------------	
-	Sum=28 bits
-	
-	
-	1		copyriht
-	1		copyright id 
-	2               *** AAC frame length (including headers)
-[4]
-        8		*** AAC frame length (including headers)
-[5]
-        3		*** AAC frame length (including headers)
-	5		Buffer fullness 0x7FF = vbr
-[6]
-	6		Buffer fullness 0x7FF = vbr
-	2		nb raw frame
-	
-	28 bits
-	
-	-- total = 56 bits = 8 bytes
-	
-	16		crc
-	
-*/
-#define x_log ADM_info
+
+#define xdebug(...) {}
 /**
     \fn getAdtsAacInfo
 */
 
-bool getAdtsAacInfo(int size, uint8_t *ptr, AacAudioInfo *info,int *offset,bool createExtraData)
+bool getAdtsAacInfo(int size, uint8_t *data, AacAudioInfo &info)
 {
-    uint8_t *org=ptr;
-    uint8_t *limit=ptr+size;
-    int objectType;
-    if(size<8) return false;
-    if(ptr[0]!=0xff || (ptr[1]>>4)!=0xf)
+    if(size<2)
     {
-            x_log("Wrong adts header %02x %02x\n",ptr[0],ptr[1]);
-            return false;
+        return false;
     }
-    // [1] Mpeg2=0,Mpeg4=1
-    // [2] Layer =0
-    // [1] 1: no CRC, 0:CRC present
-    ptr++;
-    bool crc=!(ptr[0]&1);
-    if(crc)
-        x_log("CRC\n");
-    else
-        x_log("No CRC\n");
-    ptr++;
-    //----
-    // [2] Profile, objectType -1
-    // [4] Sample rate
-    // [1] 0
-    // [1] Channel mapping
-    //
-    //....
-    objectType=1+(ptr[0]>>6);
-    int samplerate=(ptr[0]>>2)&0xf;
-    int fq=aacBitrate[samplerate];
-    ADM_info("Frequency : %d\n",fq);
-    if(!fq)
+    getBits bits(size,data); // get a copy, needed to extract extra data
+   
+    int audioObjectType=bits.get(5); // warning
+    if(audioObjectType==31)
     {
-        ADM_warning("Invalid samplerate\n");
+        ADM_error("Unsupported AAC audioObject Type\n");
         return false;
     }
-    info->samplerate=fq;
-    int channelMapping=((ptr[0]&1)<<2)+(ptr[1]>>6);
-    if(channelMapping>=8)
+    int samplingFrequencyIndex=bits.get(4);
+    int extensionAudioObjectType=0;
+    int fq=0;
+    if(samplingFrequencyIndex==0xf)
     {
-        ADM_warning("Bad channel\n");
-        return false;
+            fq=(bits.get(8)<<16)+bits.get(16);
+    }else
+    {
+        fq=aacSampleRate[samplingFrequencyIndex];
     }
-    ADM_info("Channels %d\n",aacChannels[channelMapping]);
-    info->channels=aacChannels[channelMapping];
-    ptr++;
-    //-------
-    
-   
-    // [2] Channel mapping continued
-    // [1] original =0
-    // [1] home =0
-    // [1] Copyright=0
-    // [1] Copyright start=0
-    // [2] Size (including header)
-    //
-    //....
-    
-    uint32_t frameSize=(ptr[0]>>6)&1;
-    frameSize=(frameSize<<8)+ptr[1];
-    frameSize=(frameSize<<3)+(ptr[2]>>5);
-    if(frameSize!=size)
+    int channelConfiguration=bits.get(4);
+    int channels=aacChannels[channelConfiguration];
+    bool sbrPresent=false;
+    xdebug("ObjectType=%d\n",audioObjectType);    
+  
+    switch(audioObjectType)
     {
-        x_log("Frame size mismatch : computed %d, got %d\n",frameSize,size);
-        return false;
+        case 2: // GASpecificConfig
+                {
+                bool frameLength=bits.get(1);
+                bool dependsOnCoreCoder=bits.get(1);
+                if(dependsOnCoreCoder) bits.skip(14);
+                bool extensionFlag=bits.get(1);
+                if(!channelConfiguration)
+                {
+                    ADM_error("No channel configuraiton\n");
+                    return false;
+                }
+                if(extensionFlag)
+                {
+                    ADM_error("Extension flag\n");
+                    return false;
+                }
+                }
+                break;
+        default:
+                ADM_error("AudoObjecttype =%d not handled\n",audioObjectType);
+                return false;
     }
-    ptr++;
-    // [8] Size (continued)
-    //
-    //....
-    
-    ptr++;
-    // [3] Size (continued)
-    // [5] ??
-    //
-    //....
-
-    ptr++;
-    // [6] ??
-    // [2] Frame count
-    //
-    //....
-    ptr++;
-    // Data
-    int crcOffset=0;
-    if(crc) crcOffset=2;
-    *offset=7+crcOffset;
-    info->samples=1024;
-    info->size=frameSize-7-crcOffset;
-    if(true==createExtraData)
+    int consumed=bits.getConsumedBits();
+    if(size*8-consumed>=16) // extensionAudioObjectType
     {
-        info->extra[0]=(objectType<<3)+(samplerate>>1);
-        info->extra[1]=(samplerate<<7)+(channelMapping<<3);
+        int syncExtensionType=bits.get(11);
+        if(syncExtensionType==0x2b7)
+        {
+            int extensionAdioObjectType=bits.get(5);
+             if(extensionAdioObjectType==31)
+                {
+                    ADM_error("Unsupported AAC audioObject Type\n");
+                    return false;
+                }
+             if(extensionAdioObjectType==5) 
+             {
+                    sbrPresent=bits.get(1);
+             }
+            
+        }
     }
+    info.frequency=fq;
+    info.channels=channels;
+    info.sbr=sbrPresent;
+
     return true;
 }
 



From mean at mail.berlios.de  Sat May 14 21:47:09 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Sat, 14 May 2011 21:47:09 +0200
Subject: [Avidemux-svn-commit] r7202 -
	branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_audioDecoders/ADM_ad_lav
Message-ID: <20110514194709.DA63A4813F7@sheep.berlios.de>

Author: mean
Date: 2011-05-14 21:47:09 +0200 (Sat, 14 May 2011)
New Revision: 7202

Modified:
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_audioDecoders/ADM_ad_lav/ADM_ad_lav.cpp
Log:
[lavaudio] use float when possible

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_audioDecoders/ADM_ad_lav/ADM_ad_lav.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_audioDecoders/ADM_ad_lav/ADM_ad_lav.cpp	2011-05-14 19:47:08 UTC (rev 7201)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_audioDecoders/ADM_ad_lav/ADM_ad_lav.cpp	2011-05-14 19:47:09 UTC (rev 7202)
@@ -114,6 +114,7 @@
     _blockalign=_context->block_align = info->blockalign;
     _context->bit_rate = info->byterate*8;
     outputFrequency=info->frequency;
+    bool wantFloat=true;
     switch(fourcc)
     {
       case WAV_WMA:
@@ -144,12 +145,10 @@
         break;
       case WAV_AC3:
         _context->codec_id = CODEC_ID_AC3;
-        _context->sample_fmt=AV_SAMPLE_FMT_FLT;
         _blockalign = 1;
         break;
       case WAV_EAC3:
         _context->codec_id = CODEC_ID_EAC3;
-        _context->sample_fmt=AV_SAMPLE_FMT_FLT;
         _blockalign = 1;
         break;
       case WAV_AAC:
@@ -160,12 +159,21 @@
       default:
              ADM_assert(0);
     }
+    AVSampleFormat fmt=AV_SAMPLE_FMT_S16;
+    if(wantFloat)
+    {
+        fmt=AV_SAMPLE_FMT_FLT;
+    }
+    
+        _context->sample_fmt=fmt;
+        _context->request_sample_fmt=fmt;
+    
 
-
     _context->extradata=(uint8_t *)d;
     _context->extradata_size=(int)l;
     printf("[ADM_AD_LAV] Using %d bytes of extra header data\n", _context->extradata_size);
     mixDump((uint8_t *)_context->extradata,_context->extradata_size);
+    printf("\n");
 
    AVCodec *codec=avcodec_find_decoder(_context->codec_id);
    if(!codec) {ADM_assert(0);}



From mean at mail.berlios.de  Sat May 14 21:47:10 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Sat, 14 May 2011 21:47:10 +0200
Subject: [Avidemux-svn-commit] r7203 -
	branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_audioDevices/PulseAudioSimple
Message-ID: <20110514194711.08C284813F7@sheep.berlios.de>

Author: mean
Date: 2011-05-14 21:47:10 +0200 (Sat, 14 May 2011)
New Revision: 7203

Modified:
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_audioDevices/PulseAudioSimple/ADM_devicePulseSimple.cpp
Log:
[pulse] be verbose about channels/fq

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_audioDevices/PulseAudioSimple/ADM_devicePulseSimple.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_audioDevices/PulseAudioSimple/ADM_devicePulseSimple.cpp	2011-05-14 19:47:09 UTC (rev 7202)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_audioDevices/PulseAudioSimple/ADM_devicePulseSimple.cpp	2011-05-14 19:47:10 UTC (rev 7203)
@@ -73,7 +73,7 @@
 */
 bool pulseSimpleAudioDevice::localInit(void) 
 {
-
+ADM_info("Pulse, initiliazing channel=%d samplerate=%d\n",(int)_channels,(int)_frequency);
 pa_simple *s;
 pa_sample_spec ss;
 int er;



From mean at mail.berlios.de  Sat May 14 21:47:12 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Sat, 14 May 2011 21:47:12 +0200
Subject: [Avidemux-svn-commit] r7204 -
	branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreVideoCodec/src
Message-ID: <20110514194712.35B9E4813F7@sheep.berlios.de>

Author: mean
Date: 2011-05-14 21:47:11 +0200 (Sat, 14 May 2011)
New Revision: 7204

Modified:
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreVideoCodec/src/ADM_rgb16.cpp
Log:
[decoder/rgb] update pts

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreVideoCodec/src/ADM_rgb16.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreVideoCodec/src/ADM_rgb16.cpp	2011-05-14 19:47:10 UTC (rev 7203)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreVideoCodec/src/ADM_rgb16.cpp	2011-05-14 19:47:11 UTC (rev 7204)
@@ -114,7 +114,7 @@
 	ref->_planeStride[0] = (_bpp / 8) * _w;
 	ref->_planeStride[1] = 0;
 	ref->_planeStride[2] = 0;
-
+    out->Pts=in->demuxerPts;
 	return 1;
 }
 //EOF



From mean at mail.berlios.de  Sat May 14 21:47:13 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Sat, 14 May 2011 21:47:13 +0200
Subject: [Avidemux-svn-commit] r7205 -
	branches/avidemux_2.6_branch_mean/avidemux/common/ADM_editor
Message-ID: <20110514194713.583C14813F7@sheep.berlios.de>

Author: mean
Date: 2011-05-14 21:47:13 +0200 (Sat, 14 May 2011)
New Revision: 7205

Modified:
   branches/avidemux_2.6_branch_mean/avidemux/common/ADM_editor/ADM_edCache.cpp
Log:
[editor] When dropping a frame because it is in the past, display timing

Modified: branches/avidemux_2.6_branch_mean/avidemux/common/ADM_editor/ADM_edCache.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux/common/ADM_editor/ADM_edCache.cpp	2011-05-14 19:47:11 UTC (rev 7204)
+++ branches/avidemux_2.6_branch_mean/avidemux/common/ADM_editor/ADM_edCache.cpp	2011-05-14 19:47:13 UTC (rev 7205)
@@ -197,7 +197,8 @@
             ADMImage *candidate=_elem[index].image;
             if(candidate->Pts<=pts)
             {
-                ADM_error("The next frame has a PTS <= the one we started from, ignoring\n");
+                ADM_error("The next frame has a PTS <= the one we started from, ignoring %"LLU" %"LLU"\n",
+                                        candidate->Pts,pts);
             }else
                 return candidate;
         }



From mean at mail.berlios.de  Sat May 14 21:47:14 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Sat, 14 May 2011 21:47:14 +0200
Subject: [Avidemux-svn-commit] r7206 -
	branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_demuxers/Pictures
Message-ID: <20110514194714.6F0244813F7@sheep.berlios.de>

Author: mean
Date: 2011-05-14 21:47:14 +0200 (Sat, 14 May 2011)
New Revision: 7206

Modified:
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_demuxers/Pictures/ADM_pics.cpp
Log:
[pic/demuxer] Factorize timing

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_demuxers/Pictures/ADM_pics.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_demuxers/Pictures/ADM_pics.cpp	2011-05-14 19:47:13 UTC (rev 7205)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_demuxers/Pictures/ADM_pics.cpp	2011-05-14 19:47:14 UTC (rev 7206)
@@ -36,6 +36,8 @@
 static uint32_t s32;
 #define MAX_ACCEPTED_OPEN_FILE 99999
 
+#define US_PER_PIC (40*1000)
+
 picHeader::picHeader(void)
 {
 	_nb_file = 0;
@@ -48,10 +50,7 @@
 
 uint64_t                   picHeader::getTime(uint32_t frameNum)
 {
-    float f=    _videostream.dwScale ;
-    f=f/ _videostream.dwRate ;
-    f*=1000000;
-
+    float f=    US_PER_PIC;
     f*=frameNum;
     return (uint64_t)f;
 
@@ -62,10 +61,7 @@
 
 uint64_t                   picHeader::getVideoDuration(void)
 {
-    float f=    _videostream.dwScale ;
-    f=f/ _videostream.dwRate ;
-    f*=1000000;
-
+    float f= US_PER_PIC;
     f*=_videostream.dwLength;
     return (uint64_t)f;
 
@@ -98,7 +94,7 @@
 	fread(img->data, _imgSize[framenum] - _offset, 1, fd);
 	img->dataLength = _imgSize[framenum] - _offset;
 
-    uint64_t timeP=40000;
+    uint64_t timeP=US_PER_PIC;
     timeP*=framenum;
     img->demuxerDts=timeP;
     img->demuxerPts=timeP;
@@ -419,7 +415,7 @@
 
     _videostream.dwScale = 1;
     _videostream.dwRate = 25;
-    _mainaviheader.dwMicroSecPerFrame = 40000;;	// 25 fps hard coded
+    _mainaviheader.dwMicroSecPerFrame = US_PER_PIC;;	// 25 fps hard coded
     _videostream.fccType = fourCC::get((uint8_t *) "vids");
 
 	if (bpp)
@@ -481,7 +477,7 @@
 }
 bool       picHeader::getPtsDts(uint32_t frame,uint64_t *pts,uint64_t *dts)
 {
- uint64_t timeP=40000;
+ uint64_t timeP=US_PER_PIC;
     timeP*=frame;
     *pts=timeP;
     *dts=timeP;



From mean at mail.berlios.de  Sat May 14 21:47:15 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Sat, 14 May 2011 21:47:15 +0200
Subject: [Avidemux-svn-commit] r7207 -
	branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreAudioParser/src
Message-ID: <20110514194715.844DF4813F7@sheep.berlios.de>

Author: mean
Date: 2011-05-14 21:47:15 +0200 (Sat, 14 May 2011)
New Revision: 7207

Modified:
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreAudioParser/src/ADM_aacinfo.cpp
Log:
[aac/info] Rename function to fit what it actually do

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreAudioParser/src/ADM_aacinfo.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreAudioParser/src/ADM_aacinfo.cpp	2011-05-14 19:47:14 UTC (rev 7206)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreAudioParser/src/ADM_aacinfo.cpp	2011-05-14 19:47:15 UTC (rev 7207)
@@ -47,10 +47,10 @@
 
 #define xdebug(...) {}
 /**
-    \fn getAdtsAacInfo
+    \fn ADM_getAacInfoFromConfig
 */
 
-bool getAdtsAacInfo(int size, uint8_t *data, AacAudioInfo &info)
+bool ADM_getAacInfoFromConfig(int size, uint8_t *data, AacAudioInfo &info)
 {
     if(size<2)
     {



From mean at mail.berlios.de  Sun May 15 07:51:14 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Sun, 15 May 2011 07:51:14 +0200
Subject: [Avidemux-svn-commit] r7208 -
	branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_audioDecoders/ADM_ad_dca
Message-ID: <20110515055114.CC2794813F3@sheep.berlios.de>

Author: mean
Date: 2011-05-15 07:51:14 +0200 (Sun, 15 May 2011)
New Revision: 7208

Modified:
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_audioDecoders/ADM_ad_dca/ADM_dca.cpp
Log:
[dca/decoder] update to new api

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_audioDecoders/ADM_ad_dca/ADM_dca.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_audioDecoders/ADM_ad_dca/ADM_dca.cpp	2011-05-14 19:47:15 UTC (rev 7207)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_audioDecoders/ADM_ad_dca/ADM_dca.cpp	2011-05-15 05:51:14 UTC (rev 7208)
@@ -97,7 +97,8 @@
 			"libDca decoder plugin for avidemux (c) Mean/Gruntster\n"); 	// Desc
 #endif
    //********************************************************
-ADM_AudiocodecDCA::ADM_AudiocodecDCA(uint32_t fourcc, WAVHeader *info, uint32_t l, uint8_t *d) :   ADM_Audiocodec(fourcc)
+ADM_AudiocodecDCA::ADM_AudiocodecDCA(uint32_t fourcc, WAVHeader *info, uint32_t l, uint8_t *d) : 
+  ADM_Audiocodec(fourcc,*info)
 {
     int flags=0;
     ADM_assert(fourcc==WAV_DTS);
@@ -116,7 +117,6 @@
         printf("Cannot init libdca\n");
         ADM_assert(0);   
     }
-	_wavHeader = info;
 }
 
 ADM_AudiocodecDCA::~ADM_AudiocodecDCA( )
@@ -143,7 +143,7 @@
     uint32_t avail;
     uint32_t length,syncoff;
     int flags = 0, samprate = 0, bitrate = 0, frame_length;
-    uint8_t chan = _wavHeader->channels;
+    uint8_t chan = wavHeader.channels;
     *nbOut=0;
 
 



From mean at mail.berlios.de  Mon May 16 07:28:59 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Mon, 16 May 2011 07:28:59 +0200
Subject: [Avidemux-svn-commit] r7209 - in branches/avidemux_2.6_branch_mean:
	avidemux_core/ADM_coreSqlLight3 avidemux_core/ADM_coreTinyPy
	avidemux_core/ADM_smjs avidemux_core/ffmpeg_package
	avidemux_plugins/ADM_audioDecoders/ADM_ad_ac3
	avidemux_plugins/ADM_audioDecoders/ADM_ad_mad
	avidemux_plugins/ADM_audioEncoders/twolame
	avidemux_plugins/ADM_muxers/muxerMp4v2
Message-ID: <20110516052859.810C2480EF5@sheep.berlios.de>

Author: mean
Date: 2011-05-16 07:28:59 +0200 (Mon, 16 May 2011)
New Revision: 7209

Added:
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreSqlLight3/admPackage.txt
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreTinyPy/admPackage.txt
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_smjs/admPackage.txt
   branches/avidemux_2.6_branch_mean/avidemux_core/ffmpeg_package/admPackage.txt
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_audioDecoders/ADM_ad_ac3/admPackage.txt
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_audioDecoders/ADM_ad_mad/admPackage.txt
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_audioEncoders/twolame/admPackage.txt
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_muxers/muxerMp4v2/admPackage.txt
Log:
[all] Add source/license file for bundled source

Added: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreSqlLight3/admPackage.txt
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreSqlLight3/admPackage.txt	                        (rev 0)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreSqlLight3/admPackage.txt	2011-05-16 05:28:59 UTC (rev 7209)
@@ -0,0 +1,2 @@
+URL: http://www.sqlite.org
+License: Public Domain

Added: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreTinyPy/admPackage.txt
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreTinyPy/admPackage.txt	                        (rev 0)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreTinyPy/admPackage.txt	2011-05-16 05:28:59 UTC (rev 7209)
@@ -0,0 +1,2 @@
+URL: http://www.tinypy.org
+License : MIT + PYTHON SOFTWARE FOUNDATION LICENSE VERSION 2 

Added: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_smjs/admPackage.txt
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_smjs/admPackage.txt	                        (rev 0)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_smjs/admPackage.txt	2011-05-16 05:28:59 UTC (rev 7209)
@@ -0,0 +1,2 @@
+URL: https://developer.mozilla.org/en/SpiderMonkey
+License: GPLv2

Added: branches/avidemux_2.6_branch_mean/avidemux_core/ffmpeg_package/admPackage.txt
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ffmpeg_package/admPackage.txt	                        (rev 0)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ffmpeg_package/admPackage.txt	2011-05-16 05:28:59 UTC (rev 7209)
@@ -0,0 +1,2 @@
+URL     : http://www.ffmpeg.org
+License : GPL >=2

Added: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_audioDecoders/ADM_ad_ac3/admPackage.txt
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_audioDecoders/ADM_ad_ac3/admPackage.txt	                        (rev 0)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_audioDecoders/ADM_ad_ac3/admPackage.txt	2011-05-16 05:28:59 UTC (rev 7209)
@@ -0,0 +1,2 @@
+URL : http://liba52.sf.net
+License: GPL

Added: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_audioDecoders/ADM_ad_mad/admPackage.txt
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_audioDecoders/ADM_ad_mad/admPackage.txt	                        (rev 0)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_audioDecoders/ADM_ad_mad/admPackage.txt	2011-05-16 05:28:59 UTC (rev 7209)
@@ -0,0 +1,2 @@
+URL: http://www.underbit.com/products/mad
+License : GPL

Added: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_audioEncoders/twolame/admPackage.txt
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_audioEncoders/twolame/admPackage.txt	                        (rev 0)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_audioEncoders/twolame/admPackage.txt	2011-05-16 05:28:59 UTC (rev 7209)
@@ -0,0 +1,2 @@
+URL    :  http://twolame.sf.net
+License:  LGPL

Added: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_muxers/muxerMp4v2/admPackage.txt
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_muxers/muxerMp4v2/admPackage.txt	                        (rev 0)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_muxers/muxerMp4v2/admPackage.txt	2011-05-16 05:28:59 UTC (rev 7209)
@@ -0,0 +1,2 @@
+URL    : http://resare.com/libmp4v2
+License: LGPL



From mean at mail.berlios.de  Mon May 16 07:29:00 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Mon, 16 May 2011 07:29:00 +0200
Subject: [Avidemux-svn-commit] r7210 - branches/avidemux_2.6_branch_mean
Message-ID: <20110516052900.8804C480EF5@sheep.berlios.de>

Author: mean
Date: 2011-05-16 07:29:00 +0200 (Mon, 16 May 2011)
New Revision: 7210

Modified:
   branches/avidemux_2.6_branch_mean/bootStrapCrossMingw_w32.sh
Log:
[win32/bootstreap] use symlink to avoid hardcoding qt release

Modified: branches/avidemux_2.6_branch_mean/bootStrapCrossMingw_w32.sh
===================================================================
--- branches/avidemux_2.6_branch_mean/bootStrapCrossMingw_w32.sh	2011-05-16 05:28:59 UTC (rev 7209)
+++ branches/avidemux_2.6_branch_mean/bootStrapCrossMingw_w32.sh	2011-05-16 05:29:00 UTC (rev 7210)
@@ -4,7 +4,7 @@
 export CROSS_PREFIX=i686-w64-mingw32
 export SDLDIR=/mingw
 export MINGW=/mingw
-export QT_HOME=/mingw/Qt/4.5.3
+export QT_HOME=/mingw/Qt/current
 # ** Put your config here **
 
 fail()



From mean at mail.berlios.de  Wed May 18 07:27:22 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Wed, 18 May 2011 07:27:22 +0200
Subject: [Avidemux-svn-commit] r7211 -
	branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_muxers/muxerffTS
Message-ID: <20110518052722.9E5294813CD@sheep.berlios.de>

Author: mean
Date: 2011-05-18 07:27:21 +0200 (Wed, 18 May 2011)
New Revision: 7211

Modified:
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_muxers/muxerffTS/muxerffTS.cpp
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_muxers/muxerffTS/muxerffTSConfig.cpp
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_muxers/muxerffTS/muxerffTSPlugin.cpp
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_muxers/muxerffTS/ts_muxer.conf
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_muxers/muxerffTS/ts_muxer.h
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_muxers/muxerffTS/ts_muxer_desc.cpp
Log:
[Ts/muxer] Add vbr mode

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_muxers/muxerffTS/muxerffTS.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_muxers/muxerffTS/muxerffTS.cpp	2011-05-16 05:29:00 UTC (rev 7210)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_muxers/muxerffTS/muxerffTS.cpp	2011-05-18 05:27:21 UTC (rev 7211)
@@ -31,8 +31,9 @@
 
 ts_muxer tsMuxerConfig=
 {
-    false,
-    10
+    false,      // non compliant stream
+    true,       // vbr
+    10          // muxRate MBits/s
 };
 
 /**
@@ -105,7 +106,10 @@
         }
         
         // /audio
-        oc->mux_rate=tsMuxerConfig.muxRateInMBits*1000000LL;
+        if(tsMuxerConfig.vbr)
+            oc->mux_rate=1;
+        else
+            oc->mux_rate=tsMuxerConfig.muxRateInMBits*1000000LL;
         audio_st->codec->bit_rate=a[0]->getInfo()->byterate*8;        
        
         oc->preload=3000; // 30 ms preloading

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_muxers/muxerffTS/muxerffTSConfig.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_muxers/muxerffTS/muxerffTSConfig.cpp	2011-05-16 05:29:00 UTC (rev 7210)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_muxers/muxerffTS/muxerffTSConfig.cpp	2011-05-18 05:27:21 UTC (rev 7211)
@@ -23,13 +23,18 @@
 bool ffTSConfigure(void)
 {
         uint32_t muxRate=(uint32_t)tsMuxerConfig.muxRateInMBits;
+        bool     vbr=tsMuxerConfig.vbr;
 
+        diaElemToggle   v(&vbr,"VBR muxing");
         diaElemUInteger mux(&muxRate,"Mux rate (MBits/s)",3,60);
 
-        diaElem *tabs[]={&mux};
-        if( diaFactoryRun(("TS Muxer"),1,tabs))
+        v.link(0,&mux);
+
+        diaElem *tabs[]={&v,&mux};
+        if( diaFactoryRun(("TS Muxer"),2,tabs))
         {            
             tsMuxerConfig.muxRateInMBits=muxRate;
+            tsMuxerConfig.vbr=vbr;
             return true;
         }
         return false;

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_muxers/muxerffTS/muxerffTSPlugin.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_muxers/muxerffTS/muxerffTSPlugin.cpp	2011-05-16 05:29:00 UTC (rev 7210)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_muxers/muxerffTS/muxerffTSPlugin.cpp	2011-05-18 05:27:21 UTC (rev 7211)
@@ -22,7 +22,7 @@
  bool ffTSConfigure(void);
 
 ADM_MUXER_BEGIN( muxerffTS,
-                    1,0,0,
+                    1,0,1,
                     "ffTS",    // Internal name
                     "ffMpeg TS muxer plugin (c) Mean 2009",
                     "Mpeg TS Muxer (ff)", // DIsplay name

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_muxers/muxerffTS/ts_muxer.conf
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_muxers/muxerffTS/ts_muxer.conf	2011-05-16 05:29:00 UTC (rev 7210)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_muxers/muxerffTS/ts_muxer.conf	2011-05-18 05:27:21 UTC (rev 7211)
@@ -1,4 +1,5 @@
 ts_muxer{
 bool:acceptNonCompliant
+bool:vbr
 uint32_t:muxRateInMBits
 }

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_muxers/muxerffTS/ts_muxer.h
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_muxers/muxerffTS/ts_muxer.h	2011-05-16 05:29:00 UTC (rev 7210)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_muxers/muxerffTS/ts_muxer.h	2011-05-18 05:27:21 UTC (rev 7211)
@@ -1,9 +1,9 @@
-// automatically generated by admSerialization.py, do not edit!
 // automatically generated by admSerialization.py do not edit
 #ifndef ADM_ts_muxer_CONF_H
 #define ADM_ts_muxer_CONF_H
 typedef struct {
 bool acceptNonCompliant;
+bool vbr;
 uint32_t muxRateInMBits;
 }ts_muxer;
 #endif

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_muxers/muxerffTS/ts_muxer_desc.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_muxers/muxerffTS/ts_muxer_desc.cpp	2011-05-16 05:29:00 UTC (rev 7210)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_muxers/muxerffTS/ts_muxer_desc.cpp	2011-05-18 05:27:21 UTC (rev 7211)
@@ -1,5 +1,7 @@
-const ADM_paramList ts_muxer_param[]={
+// automatically generated by admSerialization.py, do not edit!
+extern const ADM_paramList ts_muxer_param[]={
  {"acceptNonCompliant",offsetof(ts_muxer,acceptNonCompliant),"bool",ADM_param_bool},
+ {"vbr",offsetof(ts_muxer,vbr),"bool",ADM_param_bool},
  {"muxRateInMBits",offsetof(ts_muxer,muxRateInMBits),"uint32_t",ADM_param_uint32_t},
 {NULL,0,NULL}
 };



From mean at mail.berlios.de  Wed May 18 07:45:04 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Wed, 18 May 2011 07:45:04 +0200
Subject: [Avidemux-svn-commit] r7212 - in
	branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreVideoCodec:
	include src
Message-ID: <20110518054504.EB6714813CD@sheep.berlios.de>

Author: mean
Date: 2011-05-18 07:45:04 +0200 (Wed, 18 May 2011)
New Revision: 7212

Modified:
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreVideoCodec/include/ADM_rgb16.h
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreVideoCodec/src/ADM_rgb16.cpp
Log:
[decoder/rgb] set correct stride for rgb32 (fixes #121)

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreVideoCodec/include/ADM_rgb16.h
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreVideoCodec/include/ADM_rgb16.h	2011-05-18 05:27:21 UTC (rev 7211)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreVideoCodec/include/ADM_rgb16.h	2011-05-18 05:45:04 UTC (rev 7212)
@@ -26,6 +26,7 @@
 		ADMColorScalerSimple *converter;
 		bool          isRgb; // Else BGR
 		uint32_t      _bpp;
+        uint32_t      bytePerPixel;
 		uint8_t       *decoded;
 
 	public:

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreVideoCodec/src/ADM_rgb16.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreVideoCodec/src/ADM_rgb16.cpp	2011-05-18 05:27:21 UTC (rev 7211)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreVideoCodec/src/ADM_rgb16.cpp	2011-05-18 05:45:04 UTC (rev 7212)
@@ -18,30 +18,38 @@
 #include "ADM_default.h"
 #include "ADM_codec.h"
 #include "ADM_rgb16.h"
+/**
+    \fn ctor
+*/
 
 decoderRGB16::decoderRGB16(uint32_t w, uint32_t h,uint32_t fcc, uint32_t extraDataLen, uint8_t *extraData,uint32_t bpp)
     : decoders (  w,   h,  fcc,   extraDataLen,   extraData,  bpp)
 {
 	isRgb = true;
 	_bpp = bpp;
-
-	decoded = new uint8_t[_bpp * w * h];
+    bytePerPixel=_bpp>>3;
+	decoded = new uint8_t[2*bytePerPixel * w * h];
 }
-
+/**
+    \fn dtor
+*/
 decoderRGB16::~decoderRGB16()
 {
 	delete[] decoded;
+    decoded=NULL;
 }
-
+/**
+    \fn uncompress
+*/
 bool decoderRGB16::uncompress(ADMCompressedImage * in, ADMImage * out)
 {
 	int xx = _w * _h;
-	int lineSize = (_w * (_bpp / 8) + 3) & ~3;
+	int lineSize = (_w *bytePerPixel + 3) & ~3; // 4 bytes aligned ?
 	ADM_colorspace colorspace;
 	int i, j;
 	uint8_t *src = in->data;
 	uint8_t *dst = decoded;
-
+    int      outBytePerPixel=bytePerPixel;
 	switch (_bpp)
 	{
 		case 16:
@@ -58,11 +66,12 @@
 			break;
 		default:
 			printf("bpp %d not supported\n", _bpp);
-			return 0;
+			return false;
 	}
-
-	if (_bpp == 32)
+    // Pack...
+	if (_bpp == 32) // 32 -> 24
 	{
+        outBytePerPixel=3;
 		for(i = 0; i < _h; i++)
 		{
 			uint8_t *buf = src;
@@ -76,7 +85,6 @@
 				ptr += 3;
 				buf += 4;
 			}
-
 			src += lineSize;
 			dst += _w * 3;
 		}
@@ -95,9 +103,9 @@
 			// strip extra junk from scanlines (due to 4 byte alignment)
 			for(i = 0; i < _h; i++)
 			{
-				memcpy(dst, src, _w * (_bpp / 8));
+				memcpy(dst, src, _w * bytePerPixel);
 				src += lineSize;
-				dst += _w * (_bpp / 8);
+				dst += _w * bytePerPixel;
 			}
 		}
 	}
@@ -111,10 +119,10 @@
 	ref->_planes[1] = NULL;
 	ref->_planes[2] = NULL;
 
-	ref->_planeStride[0] = (_bpp / 8) * _w;
+	ref->_planeStride[0] = outBytePerPixel * _w;
 	ref->_planeStride[1] = 0;
 	ref->_planeStride[2] = 0;
     out->Pts=in->demuxerPts;
-	return 1;
+	return true;
 }
 //EOF



From mean at mail.berlios.de  Wed May 18 07:45:05 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Wed, 18 May 2011 07:45:05 +0200
Subject: [Avidemux-svn-commit] r7213 -
	branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreVideoCodec/src
Message-ID: <20110518054505.ED0BD4813CD@sheep.berlios.de>

Author: mean
Date: 2011-05-18 07:45:05 +0200 (Wed, 18 May 2011)
New Revision: 7213

Modified:
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreVideoCodec/src/ADM_codecSearch.cpp
Log:
[misc] Display color depth when using rgb decoder

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreVideoCodec/src/ADM_codecSearch.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreVideoCodec/src/ADM_codecSearch.cpp	2011-05-18 05:45:04 UTC (rev 7212)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreVideoCodec/src/ADM_codecSearch.cpp	2011-05-18 05:45:05 UTC (rev 7213)
@@ -118,7 +118,7 @@
  if ((fcc == 0) || fourCC::check (fcc, (uint8_t *) "DIB "))
     {
       // RGB 16 Codecs
-      printf ("\n using DIB codec\n");
+      printf ("\n using DIB codec (%d bpp)\n",(int)bpp);
       return (decoders *) (new decoderRGB16 (w,h,fcc,extraLen,extraData,bpp));  //0
 
     }



From mean at mail.berlios.de  Thu May 19 07:49:41 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Thu, 19 May 2011 07:49:41 +0200
Subject: [Avidemux-svn-commit] r7214 -
	branches/avidemux_2.6_branch_mean/avidemux/common/ADM_editor
Message-ID: <20110519054941.4C9F448133A@sheep.berlios.de>

Author: mean
Date: 2011-05-19 07:49:40 +0200 (Thu, 19 May 2011)
New Revision: 7214

Modified:
   branches/avidemux_2.6_branch_mean/avidemux/common/ADM_editor/ADM_edPySave.cpp
Log:
[py] Save addSegment in multiple printf to avoid issues

Modified: branches/avidemux_2.6_branch_mean/avidemux/common/ADM_editor/ADM_edPySave.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux/common/ADM_editor/ADM_edPySave.cpp	2011-05-18 05:45:05 UTC (rev 7213)
+++ branches/avidemux_2.6_branch_mean/avidemux/common/ADM_editor/ADM_edPySave.cpp	2011-05-19 05:49:40 UTC (rev 7214)
@@ -120,7 +120,9 @@
     for (uint32_t i = 0; i < _segments.getNbSegments(); i++)
     {
         _SEGMENT *seg=_segments.getSegment(i);
-        qfprintf (fd, "adm.addSegment(%"LU",%"LLU",%"LLU")\n",seg->_reference,seg->_refStartTimeUs,seg->_durationUs);
+        qfprintf (fd, "adm.addSegment(%"LU",",seg->_reference);
+        qfprintf (fd, "%"LLU",",seg->_refStartTimeUs);
+        qfprintf (fd, "%"LLU")\n",seg->_durationUs);
     }
 
 // Markers



From mean at mail.berlios.de  Fri May 20 19:21:56 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Fri, 20 May 2011 19:21:56 +0200
Subject: [Avidemux-svn-commit] r7215 -
	branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreImage/include
Message-ID: <20110520172157.4E6C44813E2@sheep.berlios.de>

Author: mean
Date: 2011-05-20 19:21:56 +0200 (Fri, 20 May 2011)
New Revision: 7215

Modified:
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreImage/include/ADM_image.h
Log:
[image] remove clang warning

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreImage/include/ADM_image.h
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreImage/include/ADM_image.h	2011-05-19 05:49:40 UTC (rev 7214)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreImage/include/ADM_image.h	2011-05-20 17:21:56 UTC (rev 7215)
@@ -86,13 +86,13 @@
         int             GetHeight(ADM_PLANE plane) {if(plane==PLANAR_Y) return _height; return _height/2;}
         bool            GetPitches(uint32_t *pitches) {pitches[0]=GetPitch(PLANAR_Y);
                                                        pitches[1]=GetPitch(PLANAR_U);
-                                                       pitches[2]=GetPitch(PLANAR_V);}
+                                                       pitches[2]=GetPitch(PLANAR_V);return true;}
         bool            GetWritePlanes(uint8_t **planes) {planes[0]=GetWritePtr(PLANAR_Y);
                                                         planes[1]=GetWritePtr(PLANAR_U);
-                                                        planes[2]=GetWritePtr(PLANAR_V);}
+                                                        planes[2]=GetWritePtr(PLANAR_V);return true;}
         bool            GetReadPlanes(uint8_t **planes) {planes[0]=GetReadPtr(PLANAR_Y);
                                                          planes[1]=GetReadPtr(PLANAR_U);
-                                                         planes[2]=GetReadPtr(PLANAR_V);}
+                                                         planes[2]=GetReadPtr(PLANAR_V);return true;}
 
 virtual                 ~ADMImage();        
         



From mean at mail.berlios.de  Fri May 20 19:21:57 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Fri, 20 May 2011 19:21:57 +0200
Subject: [Avidemux-svn-commit] r7216 -
	branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreVideoFilter/include
Message-ID: <20110520172158.03C9A4813E2@sheep.berlios.de>

Author: mean
Date: 2011-05-20 19:21:57 +0200 (Fri, 20 May 2011)
New Revision: 7216

Modified:
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreVideoFilter/include/DIA_flyDialog.h
Log:
[image] remove clang warning

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreVideoFilter/include/DIA_flyDialog.h
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreVideoFilter/include/DIA_flyDialog.h	2011-05-20 17:21:56 UTC (rev 7215)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreVideoFilter/include/DIA_flyDialog.h	2011-05-20 17:21:57 UTC (rev 7216)
@@ -145,8 +145,8 @@
   
   
   /* Filter dependant : you have to implement them*/
-  virtual uint8_t    processYuv(ADMImage* in, ADMImage *out) {ADM_assert(0);}
-  virtual uint8_t    processRgb(uint8_t *in, uint8_t *out) {ADM_assert(0);}
+  virtual uint8_t    processYuv(ADMImage* in, ADMImage *out) {ADM_assert(0);return 1;}
+  virtual uint8_t    processRgb(uint8_t *in, uint8_t *out) {ADM_assert(0);return 1;}
   virtual uint8_t    download(void)=0;
   virtual uint8_t    upload(void)=0;
   virtual bool       setCurrentPts(uint64_t pts)=0;



From mean at mail.berlios.de  Fri May 20 19:21:59 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Fri, 20 May 2011 19:21:59 +0200
Subject: [Avidemux-svn-commit] r7217 -
	branches/avidemux_2.6_branch_mean/avidemux/common/ADM_render
Message-ID: <20110520172159.235B94813E2@sheep.berlios.de>

Author: mean
Date: 2011-05-20 19:21:58 +0200 (Fri, 20 May 2011)
New Revision: 7217

Modified:
   branches/avidemux_2.6_branch_mean/avidemux/common/ADM_render/GUI_qtGlRender.cpp
Log:
[clang] fix return, caused a warning

Modified: branches/avidemux_2.6_branch_mean/avidemux/common/ADM_render/GUI_qtGlRender.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux/common/ADM_render/GUI_qtGlRender.cpp	2011-05-20 17:21:57 UTC (rev 7216)
+++ branches/avidemux_2.6_branch_mean/avidemux/common/ADM_render/GUI_qtGlRender.cpp	2011-05-20 17:21:58 UTC (rev 7217)
@@ -264,6 +264,7 @@
 	if (glWidget)
 		delete glWidget;
     glWidget=NULL;
+    return true;
 }
 /**
     \fn init



From mean at mail.berlios.de  Fri May 20 19:22:00 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Fri, 20 May 2011 19:22:00 +0200
Subject: [Avidemux-svn-commit] r7218 -
	branches/avidemux_2.6_branch_mean/avidemux/common/ADM_videoCodec/src
Message-ID: <20110520172200.5380C4813E2@sheep.berlios.de>

Author: mean
Date: 2011-05-20 19:22:00 +0200 (Fri, 20 May 2011)
New Revision: 7218

Modified:
   branches/avidemux_2.6_branch_mean/avidemux/common/ADM_videoCodec/src/ADM_dynVideoDecoder.cpp
Log:
[videoDecoder] When searching for a video decoder, return NULL rather than false if not found (clang)

Modified: branches/avidemux_2.6_branch_mean/avidemux/common/ADM_videoCodec/src/ADM_dynVideoDecoder.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux/common/ADM_videoCodec/src/ADM_dynVideoDecoder.cpp	2011-05-20 17:21:58 UTC (rev 7217)
+++ branches/avidemux_2.6_branch_mean/avidemux/common/ADM_videoCodec/src/ADM_dynVideoDecoder.cpp	2011-05-20 17:22:00 UTC (rev 7218)
@@ -187,6 +187,6 @@
             }
      }
      ADM_info("No decoder found in plugin\n");
-     return false;
+     return NULL;
 }
 //EOF



From mean at mail.berlios.de  Fri May 20 19:22:01 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Fri, 20 May 2011 19:22:01 +0200
Subject: [Avidemux-svn-commit] r7219 -
	branches/avidemux_2.6_branch_mean/avidemux/common
Message-ID: <20110520172201.85DDE4813E2@sheep.berlios.de>

Author: mean
Date: 2011-05-20 19:22:01 +0200 (Fri, 20 May 2011)
New Revision: 7219

Modified:
   branches/avidemux_2.6_branch_mean/avidemux/common/gui_navigate.cpp
Log:
[clang] silence warning

Modified: branches/avidemux_2.6_branch_mean/avidemux/common/gui_navigate.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux/common/gui_navigate.cpp	2011-05-20 17:22:00 UTC (rev 7218)
+++ branches/avidemux_2.6_branch_mean/avidemux/common/gui_navigate.cpp	2011-05-20 17:22:01 UTC (rev 7219)
@@ -358,7 +358,7 @@
     if (jog)
 	return;
     jog++;
-    while (r = A_jogRead())
+    while ((r = A_jogRead()))
       {
 	  a = abs(r);
 	  printf("%d \n", r);



From mean at mail.berlios.de  Fri May 20 19:22:02 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Fri, 20 May 2011 19:22:02 +0200
Subject: [Avidemux-svn-commit] r7220 -
	branches/avidemux_2.6_branch_mean/avidemux/qt4/ADM_userInterfaces/ADM_gui
Message-ID: <20110520172202.B2A764813E2@sheep.berlios.de>

Author: mean
Date: 2011-05-20 19:22:02 +0200 (Fri, 20 May 2011)
New Revision: 7220

Modified:
   branches/avidemux_2.6_branch_mean/avidemux/qt4/ADM_userInterfaces/ADM_gui/file_qt4.cpp
Log:
[clang] silence warning

Modified: branches/avidemux_2.6_branch_mean/avidemux/qt4/ADM_userInterfaces/ADM_gui/file_qt4.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux/qt4/ADM_userInterfaces/ADM_gui/file_qt4.cpp	2011-05-20 17:22:01 UTC (rev 7219)
+++ branches/avidemux_2.6_branch_mean/avidemux/qt4/ADM_userInterfaces/ADM_gui/file_qt4.cpp	2011-05-20 17:22:02 UTC (rev 7220)
@@ -47,7 +47,7 @@
 			ADM_PathStripName(str);
 
 			/* LASTDIR may have gone; then do nothing and use current dir instead (implied) */
-			if (dir = opendir(str))
+			if ((dir = opendir(str)))
 				closedir(dir);
 			else 
 			{



From mean at mail.berlios.de  Fri May 20 19:22:03 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Fri, 20 May 2011 19:22:03 +0200
Subject: [Avidemux-svn-commit] r7221 -
	branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreVideoCodec/src
Message-ID: <20110520172203.D81824813E2@sheep.berlios.de>

Author: mean
Date: 2011-05-20 19:22:03 +0200 (Fri, 20 May 2011)
New Revision: 7221

Modified:
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreVideoCodec/src/ADM_ffmp43.cpp
Log:
[ffmp43] remove clang warning

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreVideoCodec/src/ADM_ffmp43.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreVideoCodec/src/ADM_ffmp43.cpp	2011-05-20 17:22:02 UTC (rev 7220)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreVideoCodec/src/ADM_ffmp43.cpp	2011-05-20 17:22:03 UTC (rev 7221)
@@ -573,6 +573,7 @@
     return extractH264FrameType_startCode(nalSize, in->data,in->dataLength,&(out->flags));
   }
 #endif
+  return true;
 }
 //*********************
 decoderFFhuff::decoderFFhuff (uint32_t w, uint32_t h,uint32_t fcc, uint32_t extraDataLen, uint8_t *extraData,uint32_t bpp):



From mean at mail.berlios.de  Fri May 20 19:22:04 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Fri, 20 May 2011 19:22:04 +0200
Subject: [Avidemux-svn-commit] r7222 -
	branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src
Message-ID: <20110520172205.0B0984813E2@sheep.berlios.de>

Author: mean
Date: 2011-05-20 19:22:04 +0200 (Fri, 20 May 2011)
New Revision: 7222

Modified:
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/avidemutils.cpp
Log:
[remove clang warning]

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/avidemutils.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/avidemutils.cpp	2011-05-20 17:22:03 UTC (rev 7221)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/avidemutils.cpp	2011-05-20 17:22:04 UTC (rev 7222)
@@ -439,6 +439,7 @@
 			return 18;
 			break;
 	}
+    return 0;
 }
 uint8_t mk_hex(uint8_t a, uint8_t b)
 {



From mean at mail.berlios.de  Fri May 20 19:22:06 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Fri, 20 May 2011 19:22:06 +0200
Subject: [Avidemux-svn-commit] r7223 -
	branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src
Message-ID: <20110520172206.498D34813E2@sheep.berlios.de>

Author: mean
Date: 2011-05-20 19:22:05 +0200 (Fri, 20 May 2011)
New Revision: 7223

Modified:
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/ADM_threadQueue.cpp
Log:
[threadQueue] remove clang warning

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/ADM_threadQueue.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/ADM_threadQueue.cpp	2011-05-20 17:22:04 UTC (rev 7222)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/ADM_threadQueue.cpp	2011-05-20 17:22:05 UTC (rev 7223)
@@ -20,6 +20,7 @@
 {
     ADM_threadQueue *a=(ADM_threadQueue *)x;
     a->run();
+    return NULL;
 }
 
 /**



From mean at mail.berlios.de  Fri May 20 19:22:07 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Fri, 20 May 2011 19:22:07 +0200
Subject: [Avidemux-svn-commit] r7224 -
	branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreImage/src
Message-ID: <20110520172207.5EBBA4813E2@sheep.berlios.de>

Author: mean
Date: 2011-05-20 19:22:07 +0200 (Fri, 20 May 2011)
New Revision: 7224

Modified:
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreImage/src/ADM_colorspace.cpp
Log:
[colorspace] remove clang warning

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreImage/src/ADM_colorspace.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreImage/src/ADM_colorspace.cpp	2011-05-20 17:22:05 UTC (rev 7223)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreImage/src/ADM_colorspace.cpp	2011-05-20 17:22:07 UTC (rev 7224)
@@ -289,6 +289,7 @@
                       dstWidth,dstHeight,
                       lavTo,
                       flags, NULL, NULL,NULL);
+    return true;
 }
 //------------------------------
 bool            ADMColorScalerSimple::changeWidthHeight(uint32_t newWidth, uint32_t newHeight)



From mean at mail.berlios.de  Fri May 20 19:22:08 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Fri, 20 May 2011 19:22:08 +0200
Subject: [Avidemux-svn-commit] r7225 -
	branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreDemuxerMpeg/src
Message-ID: <20110520172208.7E5034813E2@sheep.berlios.de>

Author: mean
Date: 2011-05-20 19:22:08 +0200 (Fri, 20 May 2011)
New Revision: 7225

Modified:
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreDemuxerMpeg/src/dmxPSPacket.cpp
Log:
[dmxPsPacket] remove clang warning

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreDemuxerMpeg/src/dmxPSPacket.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreDemuxerMpeg/src/dmxPSPacket.cpp	2011-05-20 17:22:07 UTC (rev 7224)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreDemuxerMpeg/src/dmxPSPacket.cpp	2011-05-20 17:22:08 UTC (rev 7225)
@@ -95,6 +95,7 @@
         printf("[psPacket] Cannot seek to %"LLX"\n", pos);
         return false;
     }
+    return true;
 }
 
 /**
@@ -112,7 +113,7 @@
         {
                 uint64_t pos;
                 _file->getpos(&pos);
-                printf("[DmxPS] cannot sync  at "LLU"/"LLU"\n",pos,_size);
+                printf("[DmxPS] cannot sync  at %"LLU"/%"LLU"\n",pos,_size);
                 return false;
         }
 // Position of this packet just before startcode
@@ -759,6 +760,7 @@
         packetStats *p=stats+i;
         p->startDts=ADM_NO_PTS;
     }
+    return true;
 }
 /**
     \fn findStartCode



From mean at mail.berlios.de  Fri May 20 19:22:09 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Fri, 20 May 2011 19:22:09 +0200
Subject: [Avidemux-svn-commit] r7226 -
	branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreDemuxerMpeg/src
Message-ID: <20110520172209.90E5B4813E2@sheep.berlios.de>

Author: mean
Date: 2011-05-20 19:22:09 +0200 (Fri, 20 May 2011)
New Revision: 7226

Modified:
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreDemuxerMpeg/src/ADM_indexFile.cpp
Log:
[indexFile] remove clang warning

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreDemuxerMpeg/src/ADM_indexFile.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreDemuxerMpeg/src/ADM_indexFile.cpp	2011-05-20 17:22:08 UTC (rev 7225)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreDemuxerMpeg/src/ADM_indexFile.cpp	2011-05-20 17:22:09 UTC (rev 7226)
@@ -136,7 +136,7 @@
         file=NULL;
     }
     purgeTokens();
-
+    return true;
 }
 
 /**



From mean at mail.berlios.de  Fri May 20 19:22:10 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Fri, 20 May 2011 19:22:10 +0200
Subject: [Avidemux-svn-commit] r7227 -
	branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreAudio/src
Message-ID: <20110520172210.BC7594813E2@sheep.berlios.de>

Author: mean
Date: 2011-05-20 19:22:10 +0200 (Fri, 20 May 2011)
New Revision: 7227

Modified:
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreAudio/src/ADM_audioStreamMP3.cpp
Log:
[audioStreamMp3] remove clang warning

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreAudio/src/ADM_audioStreamMP3.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreAudio/src/ADM_audioStreamMP3.cpp	2011-05-20 17:22:09 UTC (rev 7226)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreAudio/src/ADM_audioStreamMP3.cpp	2011-05-20 17:22:10 UTC (rev 7227)
@@ -96,6 +96,7 @@
             return true;
         }
     }
+    return false;
 }
 /**
         \fn getPacket



From mean at mail.berlios.de  Fri May 20 19:22:11 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Fri, 20 May 2011 19:22:11 +0200
Subject: [Avidemux-svn-commit] r7228 -
	branches/avidemux_2.6_branch_mean/avidemux_core/ADM_core/src
Message-ID: <20110520172211.D5F254813E2@sheep.berlios.de>

Author: mean
Date: 2011-05-20 19:22:11 +0200 (Fri, 20 May 2011)
New Revision: 7228

Modified:
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_core/src/ADM_misc.cpp
Log:
[ADM_misc] remove clang warning

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_core/src/ADM_misc.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_core/src/ADM_misc.cpp	2011-05-20 17:22:10 UTC (rev 7227)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_core/src/ADM_misc.cpp	2011-05-20 17:22:11 UTC (rev 7228)
@@ -228,7 +228,7 @@
 uint32_t ms=(uint32_t)(ams/1000);
     uint32_t hh,mm,ss,mms;
     if(ams==ADM_NO_PTS)
-        sprintf(buffer," xx:xx:xx,xxx ",hh,mm,ss,mms);
+        sprintf(buffer," xx:xx:xx,xxx ");
     else    
     {
         ms2time(ms,&hh,&mm,&ss,&mms);



From mean at mail.berlios.de  Fri May 20 19:22:12 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Fri, 20 May 2011 19:22:12 +0200
Subject: [Avidemux-svn-commit] r7229 -
	branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreDemuxer/src
Message-ID: <20110520172212.ECEC44813E2@sheep.berlios.de>

Author: mean
Date: 2011-05-20 19:22:12 +0200 (Fri, 20 May 2011)
New Revision: 7229

Modified:
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreDemuxer/src/ADM_demuxer.cpp
Log:
[demuxer] remove clang warning

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreDemuxer/src/ADM_demuxer.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreDemuxer/src/ADM_demuxer.cpp	2011-05-20 17:22:11 UTC (rev 7228)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreDemuxer/src/ADM_demuxer.cpp	2011-05-20 17:22:12 UTC (rev 7229)
@@ -123,5 +123,6 @@
     f/=_videostream.dwRate;
     f*=count;
     pts=getTime(frame)+count*(uint32_t)f;
+    return pts;
 }
 //



From mean at mail.berlios.de  Fri May 20 19:22:14 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Fri, 20 May 2011 19:22:14 +0200
Subject: [Avidemux-svn-commit] r7230 -
	branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreAudioParser/src
Message-ID: <20110520172214.2B6724813E2@sheep.berlios.de>

Author: mean
Date: 2011-05-20 19:22:13 +0200 (Fri, 20 May 2011)
New Revision: 7230

Modified:
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreAudioParser/src/ADM_aacLatm.cpp
Log:
[aacLatm] remove clang warning

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreAudioParser/src/ADM_aacLatm.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreAudioParser/src/ADM_aacLatm.cpp	2011-05-20 17:22:12 UTC (rev 7229)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreAudioParser/src/ADM_aacLatm.cpp	2011-05-20 17:22:13 UTC (rev 7230)
@@ -198,8 +198,9 @@
     }else
     {
         ADM_error("cannot handle allStreamSameTimeFraming==0\n");
-        return 0;
+        
     }
+    return 0;
 }
 /**
     \fn readPayload



From mean at mail.berlios.de  Fri May 20 19:22:15 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Fri, 20 May 2011 19:22:15 +0200
Subject: [Avidemux-svn-commit] r7231 -
	branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreAudio/include
Message-ID: <20110520172215.498DA4813E2@sheep.berlios.de>

Author: mean
Date: 2011-05-20 19:22:15 +0200 (Fri, 20 May 2011)
New Revision: 7231

Modified:
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreAudio/include/ADM_audioStreamBuffered.h
Log:
[audioStreamBuffered] remove clang warning

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreAudio/include/ADM_audioStreamBuffered.h
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreAudio/include/ADM_audioStreamBuffered.h	2011-05-20 17:22:13 UTC (rev 7230)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreAudio/include/ADM_audioStreamBuffered.h	2011-05-20 17:22:15 UTC (rev 7231)
@@ -45,7 +45,7 @@
 virtual                bool      goToTime(uint64_t nbUs);
                        bool      needBytes(uint32_t nbBytes);
                        bool      skipBytes(uint32_t nbBytes);
-                       bool      empty(void) {limit=start=0;}
+                       bool      empty(void) {limit=start=0;return true;}
 };
 #endif
 // EOF



From mean at mail.berlios.de  Fri May 20 19:22:16 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Fri, 20 May 2011 19:22:16 +0200
Subject: [Avidemux-svn-commit] r7232 -
	branches/avidemux_2.6_branch_mean/avidemux_core/ADM_core/src
Message-ID: <20110520172216.634554813E2@sheep.berlios.de>

Author: mean
Date: 2011-05-20 19:22:16 +0200 (Fri, 20 May 2011)
New Revision: 7232

Modified:
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_core/src/TLK_clock.cpp
Log:
[tlk_clock] remove clang warning

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_core/src/TLK_clock.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_core/src/TLK_clock.cpp	2011-05-20 17:22:15 UTC (rev 7231)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_core/src/TLK_clock.cpp	2011-05-20 17:22:16 UTC (rev 7232)
@@ -101,4 +101,5 @@
 uint8_t Clock::reset(void)
 {
 	_startTime=getAbsTime();
+    return true;
 }



From mean at mail.berlios.de  Fri May 20 19:22:17 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Fri, 20 May 2011 19:22:17 +0200
Subject: [Avidemux-svn-commit] r7233 -
	branches/avidemux_2.6_branch_mean/avidemux_core/ADM_core/src
Message-ID: <20110520172217.7D35C4813E2@sheep.berlios.de>

Author: mean
Date: 2011-05-20 19:22:17 +0200 (Fri, 20 May 2011)
New Revision: 7233

Modified:
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_core/src/ADM_fileio.cpp
Log:
[fileio] remove clang warning

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_core/src/ADM_fileio.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_core/src/ADM_fileio.cpp	2011-05-20 17:22:16 UTC (rev 7232)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_core/src/ADM_fileio.cpp	2011-05-20 17:22:17 UTC (rev 7233)
@@ -441,7 +441,7 @@
 
 	if (!ADM_mkdir(ADM_basedir))
 	{
-		printf("Oops: cannot create the .avidemux directory", NULL);
+		printf("Oops: cannot create the .avidemux directory");
 		return NULL;
 	}
 
@@ -531,7 +531,7 @@
 	if (!dir)
 		return 0;
 
-	while (direntry = readdir(dir))
+	while ((direntry = readdir(dir)))
 	{
 #ifdef __WIN32
 		int dirLength = wideCharStringToUtf8(direntry->d_name, -1, NULL);



From mean at mail.berlios.de  Fri May 20 19:22:18 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Fri, 20 May 2011 19:22:18 +0200
Subject: [Avidemux-svn-commit] r7234 -
	branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreImage/src
Message-ID: <20110520172218.9E4794813E2@sheep.berlios.de>

Author: mean
Date: 2011-05-20 19:22:18 +0200 (Fri, 20 May 2011)
New Revision: 7234

Modified:
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreImage/src/ADM_print.cpp
Log:
[ADM_print] remove clang warning

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreImage/src/ADM_print.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreImage/src/ADM_print.cpp	2011-05-20 17:22:17 UTC (rev 7233)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreImage/src/ADM_print.cpp	2011-05-20 17:22:18 UTC (rev 7234)
@@ -103,6 +103,7 @@
 					if(*s==0x0d || *s==0x0a) continue;
 					drawDigitSmall(this, x + xx, y, *s - ' ');
 				}	
-	}
+	}
+    return true;
 }
 



From mean at mail.berlios.de  Fri May 20 19:22:19 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Fri, 20 May 2011 19:22:19 +0200
Subject: [Avidemux-svn-commit] r7235 -
	branches/avidemux_2.6_branch_mean/avidemux_core/ADM_core/src
Message-ID: <20110520172219.C0C2E4813E2@sheep.berlios.de>

Author: mean
Date: 2011-05-20 19:22:19 +0200 (Fri, 20 May 2011)
New Revision: 7235

Modified:
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_core/src/ADM_memcpy.cpp
Log:
[memcpy] remove clang warning

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_core/src/ADM_memcpy.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_core/src/ADM_memcpy.cpp	2011-05-20 17:22:18 UTC (rev 7234)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_core/src/ADM_memcpy.cpp	2011-05-20 17:22:19 UTC (rev 7235)
@@ -436,7 +436,7 @@
 	stop=rdtsc();
 	ADM_dealloc(src);
 	ADM_dealloc(dst);
-	printf("Method :%s \tTime:%lu\n",name,(unsigned long int)name,stop-start);
+	printf("Method :%s \tTime:%lu\n",name,(unsigned long int)stop-start);
 	return 1;
 
 }



From mean at mail.berlios.de  Fri May 20 19:22:22 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Fri, 20 May 2011 19:22:22 +0200
Subject: [Avidemux-svn-commit] r7237 - in
	branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreTinyPy/src:
	. patches_tinypytree
Message-ID: <20110520172222.D79804813E2@sheep.berlios.de>

Author: mean
Date: 2011-05-20 19:22:22 +0200 (Fri, 20 May 2011)
New Revision: 7237

Added:
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreTinyPy/src/patches_tinypytree/use_longlong_when_compiling_numbers.diff
Modified:
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreTinyPy/src/tinypy.cpp
Log:
[tinypy] use long long when converting string to tp_number

Added: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreTinyPy/src/patches_tinypytree/use_longlong_when_compiling_numbers.diff
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreTinyPy/src/patches_tinypytree/use_longlong_when_compiling_numbers.diff	                        (rev 0)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreTinyPy/src/patches_tinypytree/use_longlong_when_compiling_numbers.diff	2011-05-20 17:22:22 UTC (rev 7237)
@@ -0,0 +1,13 @@
+diff --git a/tinypy/builtins.c b/tinypy/builtins.c
+index 1919bd8..0511ffb 100644
+--- a/tinypy/builtins.c
++++ b/tinypy/builtins.c
+@@ -128,7 +128,7 @@ tp_obj tp_float(TP) {
+         char s[32]; memset(s,0,v.string.len+1);
+         memcpy(s,v.string.val,v.string.len);
+         if (strchr(s,'.')) { return tp_number(atof(s)); }
+-        return(tp_number(strtol(s,0,ord)));
++        return(tp_number(strtoll(s,0,ord))); /* MEANX */
+     }
+     tp_raise(tp_None,tp_string("(tp_float) TypeError: ?"));
+ }

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreTinyPy/src/tinypy.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreTinyPy/src/tinypy.cpp	2011-05-20 17:22:20 UTC (rev 7236)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreTinyPy/src/tinypy.cpp	2011-05-20 17:22:22 UTC (rev 7237)
@@ -1424,7 +1424,7 @@
         char s[32]; memset(s,0,v.string.len+1);
         memcpy(s,v.string.val,v.string.len);
         if (strchr(s,'.')) { return tp_number(atof(s)); }
-        return(tp_number(strtol(s,0,ord)));
+        return(tp_number(strtoll(s,0,ord))); /* MEANX */
     }
     tp_raise(tp_None,tp_string("(tp_float) TypeError: ?"));
 }



From mean at mail.berlios.de  Fri May 20 19:22:24 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Fri, 20 May 2011 19:22:24 +0200
Subject: [Avidemux-svn-commit] r7238 - in branches/avidemux_2.6_branch_mean:
	avidemux/common/ADM_script2/py cmake
Message-ID: <20110520172224.70DDA4813E2@sheep.berlios.de>

Author: mean
Date: 2011-05-20 19:22:24 +0200 (Fri, 20 May 2011)
New Revision: 7238

Modified:
   branches/avidemux_2.6_branch_mean/avidemux/common/ADM_script2/py/GUI_gen.cpp
   branches/avidemux_2.6_branch_mean/avidemux/common/ADM_script2/py/editor_gen.cpp
   branches/avidemux_2.6_branch_mean/avidemux/common/ADM_script2/py/pyDFMenu_gen.cpp
   branches/avidemux_2.6_branch_mean/avidemux/common/ADM_script2/py/pyDialogFactory_gen.cpp
   branches/avidemux_2.6_branch_mean/cmake/admPyClass.pl
   branches/avidemux_2.6_branch_mean/cmake/admPyFunc.pl
Log:
[tinypy] Make the perl script that binds avidemux to tinypy returns tp_None when the function is void

Modified: branches/avidemux_2.6_branch_mean/avidemux/common/ADM_script2/py/GUI_gen.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux/common/ADM_script2/py/GUI_gen.cpp	2011-05-20 17:22:22 UTC (rev 7237)
+++ branches/avidemux_2.6_branch_mean/avidemux/common/ADM_script2/py/GUI_gen.cpp	2011-05-20 17:22:24 UTC (rev 7238)
@@ -22,7 +22,7 @@
   const char *p0= pm.asString();
   const char *p1= pm.asString();
   scriptDisplayError(p0,p1); 
-
+ return tp_None;
 }
 // dirSelect -> str scriptDirSelect (str ) 
 static tp_obj zzpy_dirSelect(TP)
@@ -47,7 +47,7 @@
   const char *p0= pm.asString();
   const char *p1= pm.asString();
   scriptDisplayInfo(p0,p1); 
-
+ return tp_None;
 }
 // fileReadSelect -> str scriptFileSelRead (str ) 
 static tp_obj zzpy_fileReadSelect(TP)

Modified: branches/avidemux_2.6_branch_mean/avidemux/common/ADM_script2/py/editor_gen.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux/common/ADM_script2/py/editor_gen.cpp	2011-05-20 17:22:22 UTC (rev 7237)
+++ branches/avidemux_2.6_branch_mean/avidemux/common/ADM_script2/py/editor_gen.cpp	2011-05-20 17:22:24 UTC (rev 7238)
@@ -46,7 +46,7 @@
   void *me=(void *)pm.asThis(&self,ADM_PYID_EDITOR);
   int p0= pm.asInt();
   scriptDumpSegment(p0); 
-
+ return tp_None;
 }
 // dumpRefVideo -> int jsDumpRefVideos (void ) 
 static tp_obj zzpy_dumpRefVideo(TP)

Modified: branches/avidemux_2.6_branch_mean/avidemux/common/ADM_script2/py/pyDFMenu_gen.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux/common/ADM_script2/py/pyDFMenu_gen.cpp	2011-05-20 17:22:22 UTC (rev 7237)
+++ branches/avidemux_2.6_branch_mean/avidemux/common/ADM_script2/py/pyDFMenu_gen.cpp	2011-05-20 17:22:24 UTC (rev 7238)
@@ -7,7 +7,7 @@
   ADM_scriptDFMenuHelper *me=(ADM_scriptDFMenuHelper *)pm.asThis(&self,ADM_PYID_DF_INTEGER);
   const char *p0= pm.asString();
   me->addItem(p0); 
-
+ return tp_None;
 }
 tp_obj zzpy__pyDFMenu_get(tp_vm *vm)
 {

Modified: branches/avidemux_2.6_branch_mean/avidemux/common/ADM_script2/py/pyDialogFactory_gen.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux/common/ADM_script2/py/pyDialogFactory_gen.cpp	2011-05-20 17:22:22 UTC (rev 7237)
+++ branches/avidemux_2.6_branch_mean/avidemux/common/ADM_script2/py/pyDialogFactory_gen.cpp	2011-05-20 17:22:24 UTC (rev 7238)
@@ -16,7 +16,7 @@
   ADM_scriptDialogFactoryHelper *me=(ADM_scriptDialogFactoryHelper *)pm.asThis(&self,ADM_PYID_DIALOGF);
   ADM_scriptDFBaseHelper *p0= ( ADM_scriptDFBaseHelper *)pm.asObjectPointer();
   me->addControl(p0); 
-
+ return tp_None;
 }
 tp_obj zzpy__pyDialogFactory_get(tp_vm *vm)
 {

Modified: branches/avidemux_2.6_branch_mean/cmake/admPyClass.pl
===================================================================
--- branches/avidemux_2.6_branch_mean/cmake/admPyClass.pl	2011-05-20 17:22:22 UTC (rev 7237)
+++ branches/avidemux_2.6_branch_mean/cmake/admPyClass.pl	2011-05-20 17:22:24 UTC (rev 7238)
@@ -197,7 +197,7 @@
         }
         if($retType=~m/void/)
         {
-                return "";
+                return " return tp_None;";
         }
          if($retType=~m/str/)
         {

Modified: branches/avidemux_2.6_branch_mean/cmake/admPyFunc.pl
===================================================================
--- branches/avidemux_2.6_branch_mean/cmake/admPyFunc.pl	2011-05-20 17:22:22 UTC (rev 7237)
+++ branches/avidemux_2.6_branch_mean/cmake/admPyFunc.pl	2011-05-20 17:22:24 UTC (rev 7238)
@@ -21,7 +21,7 @@
         }
         if($retType=~m/void/)
         {
-                return "";
+                return "return tp_None;";
         }
         return "???? $retType";
 }



From mean at mail.berlios.de  Wed May 25 20:23:34 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Wed, 25 May 2011 20:23:34 +0200
Subject: [Avidemux-svn-commit] r7239 -
	branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreMuxer/src
Message-ID: <20110525182334.AE1114812F4@sheep.berlios.de>

Author: mean
Date: 2011-05-25 20:23:32 +0200 (Wed, 25 May 2011)
New Revision: 7239

Modified:
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreMuxer/src/ADM_coreMuxerFfmpeg.cpp
Log:
[core/ffmuxer] Fix clang compatibility

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreMuxer/src/ADM_coreMuxerFfmpeg.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreMuxer/src/ADM_coreMuxerFfmpeg.cpp	2011-05-20 17:22:24 UTC (rev 7238)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreMuxer/src/ADM_coreMuxerFfmpeg.cpp	2011-05-25 18:23:32 UTC (rev 7239)
@@ -388,7 +388,7 @@
 
     initUI("Saving");
     encoding->setContainer(getContainerName());
-    MuxAudioPacket audioPackets[nbAStreams];
+    MuxAudioPacket *audioPackets=new MuxAudioPacket[nbAStreams];
     ADMBitstream out(bufSize);
     out.data=buffer;
 
@@ -514,6 +514,8 @@
         result=false;
     }
     ADM_info("[FF] Wrote %d frames, nb audio streams %d\n",written,nbAStreams);
+    delete [] audioPackets;
+    audioPackets=NULL;
     return result;
 }
 // EOF



From mean at mail.berlios.de  Wed May 25 20:23:36 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Wed, 25 May 2011 20:23:36 +0200
Subject: [Avidemux-svn-commit] r7240 - in branches/avidemux_2.6_branch_mean:
	avidemux/common/ADM_script2/py cmake
Message-ID: <20110525182337.80D874812F4@sheep.berlios.de>

Author: mean
Date: 2011-05-25 20:23:35 +0200 (Wed, 25 May 2011)
New Revision: 7240

Modified:
   branches/avidemux_2.6_branch_mean/avidemux/common/ADM_script2/py/GUI_gen.cpp
   branches/avidemux_2.6_branch_mean/avidemux/common/ADM_script2/py/adm_gen.cpp
   branches/avidemux_2.6_branch_mean/avidemux/common/ADM_script2/py/editor_gen.cpp
   branches/avidemux_2.6_branch_mean/avidemux/common/ADM_script2/py/pyDFInteger_gen.cpp
   branches/avidemux_2.6_branch_mean/avidemux/common/ADM_script2/py/pyDFMenu_gen.cpp
   branches/avidemux_2.6_branch_mean/avidemux/common/ADM_script2/py/pyDFToggle_gen.cpp
   branches/avidemux_2.6_branch_mean/avidemux/common/ADM_script2/py/pyDialogFactory_gen.cpp
   branches/avidemux_2.6_branch_mean/cmake/admPyClass.pl
Log:
[py binding] Make the help command returns tp_None instead of void

Modified: branches/avidemux_2.6_branch_mean/avidemux/common/ADM_script2/py/GUI_gen.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux/common/ADM_script2/py/GUI_gen.cpp	2011-05-25 18:23:32 UTC (rev 7239)
+++ branches/avidemux_2.6_branch_mean/avidemux/common/ADM_script2/py/GUI_gen.cpp	2011-05-25 18:23:35 UTC (rev 7240)
@@ -121,6 +121,7 @@
 	jsLog("dirSelect(str)\n");
 	jsLog("displayInfo(str,str)\n");
 	jsLog("fileReadSelect(str)\n");
+return tp_None;
 };
 tp_obj initClasspyGui(tp_vm *vm)
 {

Modified: branches/avidemux_2.6_branch_mean/avidemux/common/ADM_script2/py/adm_gen.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux/common/ADM_script2/py/adm_gen.cpp	2011-05-25 18:23:32 UTC (rev 7239)
+++ branches/avidemux_2.6_branch_mean/avidemux/common/ADM_script2/py/adm_gen.cpp	2011-05-25 18:23:35 UTC (rev 7240)
@@ -502,6 +502,7 @@
 	jsLog("audioReset(void)\n");
 	jsLog("getVideoCodec(void)\n");
 	jsLog("getPARHeight(void)\n");
+return tp_None;
 };
 tp_obj initClasspyAdm(tp_vm *vm)
 {

Modified: branches/avidemux_2.6_branch_mean/avidemux/common/ADM_script2/py/editor_gen.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux/common/ADM_script2/py/editor_gen.cpp	2011-05-25 18:23:32 UTC (rev 7239)
+++ branches/avidemux_2.6_branch_mean/avidemux/common/ADM_script2/py/editor_gen.cpp	2011-05-25 18:23:35 UTC (rev 7240)
@@ -163,6 +163,7 @@
 	jsLog("nbSegments(void)\n");
 	jsLog("dumpAllSegments(void)\n");
 	jsLog("getPts(int )\n");
+return tp_None;
 };
 tp_obj initClasspyEditor(tp_vm *vm)
 {

Modified: branches/avidemux_2.6_branch_mean/avidemux/common/ADM_script2/py/pyDFInteger_gen.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux/common/ADM_script2/py/pyDFInteger_gen.cpp	2011-05-25 18:23:32 UTC (rev 7239)
+++ branches/avidemux_2.6_branch_mean/avidemux/common/ADM_script2/py/pyDFInteger_gen.cpp	2011-05-25 18:23:35 UTC (rev 7240)
@@ -50,6 +50,7 @@
 }
 static tp_obj zzpy__pyDFInteger_help(TP)
  {
+return tp_None;
 };
 tp_obj initClasspyDFInteger(tp_vm *vm)
 {

Modified: branches/avidemux_2.6_branch_mean/avidemux/common/ADM_script2/py/pyDFMenu_gen.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux/common/ADM_script2/py/pyDFMenu_gen.cpp	2011-05-25 18:23:32 UTC (rev 7239)
+++ branches/avidemux_2.6_branch_mean/avidemux/common/ADM_script2/py/pyDFMenu_gen.cpp	2011-05-25 18:23:35 UTC (rev 7240)
@@ -63,6 +63,7 @@
 static tp_obj zzpy__pyDFMenu_help(TP)
  {
 	jsLog("addItem(str)\n");
+return tp_None;
 };
 tp_obj initClasspyDFMenu(tp_vm *vm)
 {

Modified: branches/avidemux_2.6_branch_mean/avidemux/common/ADM_script2/py/pyDFToggle_gen.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux/common/ADM_script2/py/pyDFToggle_gen.cpp	2011-05-25 18:23:32 UTC (rev 7239)
+++ branches/avidemux_2.6_branch_mean/avidemux/common/ADM_script2/py/pyDFToggle_gen.cpp	2011-05-25 18:23:35 UTC (rev 7240)
@@ -48,6 +48,7 @@
 }
 static tp_obj zzpy__pyDFToggle_help(TP)
  {
+return tp_None;
 };
 tp_obj initClasspyDFToggle(tp_vm *vm)
 {

Modified: branches/avidemux_2.6_branch_mean/avidemux/common/ADM_script2/py/pyDialogFactory_gen.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux/common/ADM_script2/py/pyDialogFactory_gen.cpp	2011-05-25 18:23:32 UTC (rev 7239)
+++ branches/avidemux_2.6_branch_mean/avidemux/common/ADM_script2/py/pyDialogFactory_gen.cpp	2011-05-25 18:23:35 UTC (rev 7240)
@@ -65,6 +65,7 @@
  {
 	jsLog("show(void)\n");
 	jsLog("addControl(ptr at ADM_scriptDFBaseHelper)\n");
+return tp_None;
 };
 tp_obj initClasspyDialogFactory(tp_vm *vm)
 {

Modified: branches/avidemux_2.6_branch_mean/cmake/admPyClass.pl
===================================================================
--- branches/avidemux_2.6_branch_mean/cmake/admPyClass.pl	2011-05-25 18:23:32 UTC (rev 7239)
+++ branches/avidemux_2.6_branch_mean/cmake/admPyClass.pl	2011-05-25 18:23:35 UTC (rev 7240)
@@ -528,6 +528,7 @@
                         my @params=@{$funcParams{$f}};
                         print OUTPUT "\tjsLog(\"$f(".join(",", at params) .")\\n\");\n";
                 }
+                print OUTPUT "return tp_None;\n";
                 print OUTPUT "};\n";
 #
 #  Create the init function that will register our class



From mean at mail.berlios.de  Wed May 25 20:23:38 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Wed, 25 May 2011 20:23:38 +0200
Subject: [Avidemux-svn-commit] r7241 -
	branches/avidemux_2.6_branch_mean/avidemux/common/ADM_muxerGate/src
Message-ID: <20110525182340.24EA94812F4@sheep.berlios.de>

Author: mean
Date: 2011-05-25 20:23:38 +0200 (Wed, 25 May 2011)
New Revision: 7241

Modified:
   branches/avidemux_2.6_branch_mean/avidemux/common/ADM_muxerGate/src/ADM_videoCopyFromAnnexB.cpp
Log:
[annexb] Correct computation of NAL size, remove filler

Modified: branches/avidemux_2.6_branch_mean/avidemux/common/ADM_muxerGate/src/ADM_videoCopyFromAnnexB.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux/common/ADM_muxerGate/src/ADM_videoCopyFromAnnexB.cpp	2011-05-25 18:23:35 UTC (rev 7240)
+++ branches/avidemux_2.6_branch_mean/avidemux/common/ADM_muxerGate/src/ADM_videoCopyFromAnnexB.cpp	2011-05-25 18:23:38 UTC (rev 7241)
@@ -98,6 +98,7 @@
     {
         myBitstream->len=img.dataLength;
         NALU_descriptor desc[MAX_NALU_PER_CHUNK];
+        //mixDump(img.data,img.dataLength);
         int nbNalu=ADM_splitNalu(myBitstream->data,myBitstream->data+myBitstream->len,
                                 MAX_NALU_PER_CHUNK,desc);
         // search sps
@@ -114,6 +115,18 @@
         if(-1==indexPps)
         {
             ADM_error("Cannot find SPS");
+        }else
+        {
+            int count=desc[indexPps].size;
+            uint8_t *ptr=desc[indexPps].start+count-1;
+            while(count > 4)
+            {
+                if(*ptr) break;
+                ptr--;
+                count--;
+            }
+            ADM_info("PPS removed zero filler %d -> %d\n",(int)desc[indexPps].size,(int)count);
+            desc[indexPps].size=count;
         }
        
         if(indexSps!=-1 && indexPps!=-1)
@@ -123,7 +136,7 @@
             
             ADM_info("Copy from annexB: Found sps=%d, pps=%d.\n",(int)spsLen,(int)ppsLen);
             // Build extraData
-            myExtraLen=5+1+2+spsLen+1+2+ppsLen;
+            myExtraLen=5+1+2+1+spsLen+1+2+1+ppsLen;
             myExtra=new uint8_t[myExtraLen];
             uint8_t *ptr=myExtra;
             uint8_t *sps=desc[indexSps].start;



From mean at mail.berlios.de  Thu May 26 21:59:49 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Thu, 26 May 2011 21:59:49 +0200
Subject: [Avidemux-svn-commit] r7242 -
	branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreAudioParser/src
Message-ID: <20110526195950.0EED6481357@sheep.berlios.de>

Author: mean
Date: 2011-05-26 21:59:49 +0200 (Thu, 26 May 2011)
New Revision: 7242

Modified:
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreAudioParser/src/ADM_mp3info.cpp
Log:
[audioParser/mpeg] Correctly set sample per packet for mpeg level 2

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreAudioParser/src/ADM_mp3info.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreAudioParser/src/ADM_mp3info.cpp	2011-05-25 18:23:38 UTC (rev 7241)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreAudioParser/src/ADM_mp3info.cpp	2011-05-26 19:59:49 UTC (rev 7242)
@@ -136,6 +136,7 @@
 					return 0;
 				}
 /*	*/
+#if 0
 			// Sample in the packet
 			if(mpegInfo->level==1)
 			{
@@ -154,7 +155,20 @@
 				*offset=start-1;
 
 			}
-
+#else
+            switch(mpegInfo->layer)
+            {
+                case 1: mpegInfo->samples=384;break;
+                case 2: mpegInfo->samples=1152;break;
+                default:
+                case 3: if(mpegInfo->level==1) 
+                                mpegInfo->samples=1152;
+                        else
+                                mpegInfo->samples=576;
+                        break;                    
+            }
+            *offset=start-1;
+#endif
 			// Packet size
 			//L1:FrameLengthInBytes = (12 * BitRate / SampleRate + Padding) * 4
 



From mean at mail.berlios.de  Fri May 27 08:12:45 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Fri, 27 May 2011 08:12:45 +0200
Subject: [Avidemux-svn-commit] r7243 -
	branches/avidemux_2.5_branch_gruntster/avidemux/ADM_audio
Message-ID: <20110527061245.7235F481125@sheep.berlios.de>

Author: mean
Date: 2011-05-27 08:12:44 +0200 (Fri, 27 May 2011)
New Revision: 7243

Modified:
   branches/avidemux_2.5_branch_gruntster/avidemux/ADM_audio/ADM_mp3info.cpp
Log:
[mpegaudio layer2] merge fix from 2.6

Modified: branches/avidemux_2.5_branch_gruntster/avidemux/ADM_audio/ADM_mp3info.cpp
===================================================================
--- branches/avidemux_2.5_branch_gruntster/avidemux/ADM_audio/ADM_mp3info.cpp	2011-05-26 19:59:49 UTC (rev 7242)
+++ branches/avidemux_2.5_branch_gruntster/avidemux/ADM_audio/ADM_mp3info.cpp	2011-05-27 06:12:44 UTC (rev 7243)
@@ -140,6 +140,7 @@
 					return 0;
 				}
 /*	*/
+#if 0
 			// Sample in the packet
 			if(mpegInfo->level==1)
 			{
@@ -158,7 +159,20 @@
 				*offset=start-1;
 			
 			}
-			
+#endif		
+        switch(mpegInfo->layer)
+            {
+                case 1: mpegInfo->samples=384;break;
+                case 2: mpegInfo->samples=1152;break;
+                default:
+                case 3: if(mpegInfo->level==1) 
+                                mpegInfo->samples=1152;
+                        else
+                                mpegInfo->samples=576;
+                        break;                    
+            }
+            *offset=start-1;
+	
 			// Packet size
 			//L1:FrameLengthInBytes = (12 * BitRate / SampleRate + Padding) * 4
 		



From mean at mail.berlios.de  Fri May 27 08:12:46 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Fri, 27 May 2011 08:12:46 +0200
Subject: [Avidemux-svn-commit] r7244 -
	branches/avidemux_2.5_branch_gruntster/avidemux/ADM_codecs
Message-ID: <20110527061246.68D77481125@sheep.berlios.de>

Author: mean
Date: 2011-05-27 08:12:46 +0200 (Fri, 27 May 2011)
New Revision: 7244

Modified:
   branches/avidemux_2.5_branch_gruntster/avidemux/ADM_codecs/ADM_ffmp43.cpp
Log:
[videoCodec] Update multithreading handling with newer lavcodec, backport from 2.6

Modified: branches/avidemux_2.5_branch_gruntster/avidemux/ADM_codecs/ADM_ffmp43.cpp
===================================================================
--- branches/avidemux_2.5_branch_gruntster/avidemux/ADM_codecs/ADM_ffmp43.cpp	2011-05-27 06:12:44 UTC (rev 7243)
+++ branches/avidemux_2.5_branch_gruntster/avidemux/ADM_codecs/ADM_ffmp43.cpp	2011-05-27 06:12:46 UTC (rev 7244)
@@ -121,11 +121,8 @@
   if (threads)
   {
       printf ("[lavc] Enabling MT decoder with %u threads\n", threads);
-
-      if (avcodec_thread_init (_context, threads) == -1)
-	      printf ("[lavc] Failed!!\n");
-	  else
-          _usingMT = 1;
+      _context->thread_count=threads;
+      _usingMT = 1;
   }
 }
 uint8_t decoderFF::getPARWidth (void)
@@ -225,7 +222,6 @@
   if (_usingMT)
     {
       printf ("[lavc] Killing decoding threads\n");
-      avcodec_thread_free (_context);
       _usingMT = 0;
     }
 



From mean at mail.berlios.de  Mon May 30 09:42:42 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Mon, 30 May 2011 09:42:42 +0200
Subject: [Avidemux-svn-commit] r7245 - in branches/avidemux_2.6_branch_mean:
	avidemux_core/ADM_coreDemuxerMpeg/src
	avidemux_core/ADM_coreUtils/src avidemux_plugins/ADM_demuxers/MpegTS
Message-ID: <20110530074242.E59D748134C@sheep.berlios.de>

Author: mean
Date: 2011-05-30 09:42:42 +0200 (Mon, 30 May 2011)
New Revision: 7245

Modified:
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreDemuxerMpeg/src/dmx_io.cpp
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/avidemutils.cpp
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_demuxers/MpegTS/ADM_tsIndexH264.cpp
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_demuxers/MpegTS/ADM_tsIndexMpeg2.cpp
Log:
[indexer (ts)] Check and ask for sequential file (i.e. foo00.ts foo01.ts)

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreDemuxerMpeg/src/dmx_io.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreDemuxerMpeg/src/dmx_io.cpp	2011-05-27 06:12:46 UTC (rev 7244)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreDemuxerMpeg/src/dmx_io.cpp	2011-05-30 07:42:42 UTC (rev 7245)
@@ -17,13 +17,18 @@
  *   (at your option) any later version.                                   *
  *                                                                         *
  ***************************************************************************/
+#include "ADM_cpp.h"
 #include <math.h>
 
 #include "ADM_default.h"
 #include "dmx_io.h"
+#if 0
+    #define aprintf(...) {}
+#else
+    #define aprintf printf
+#endif
+extern bool ADM_splitSequencedFile(const char *filename, char **left, char **right,uint32_t *nbDigit,uint32_t *base);
 
-#define aprintf(...) {}
-
 fileParser::fileParser( void )
 {
                 _off=0;
@@ -58,43 +63,34 @@
 */
 uint8_t fileParser::open( const char *filename,FP_TYPE *multi )
 {
-        const char *dot = NULL;                   // pointer to the last dot in filename
-        uint8_t decimals = 0;               // number of decimals
-        char *left = NULL, *number = NULL, *right = NULL; // parts of filename (after splitting)
 
-        char *followup = new char[ strlen(filename) + 1 ]; // possible follow-up filename
-        uint8_t first_followup = 1;         // indicates first follow-up
-        uint8_t last_followup = 0;          // indicates last follow-up (by number: 99)
-        uint8_t count = 0;                  // number of follow-ups
+        uint32_t decimals = 0;               // number of decimals
+        char *left = NULL, *right = NULL; // parts of filename (after splitting)
 
-
-        int i = 0;                          // index (general use)
-
-
-        // find the last dot
-        dot = strrchr( filename, '.' );
-
-        // count the decimals before the dot
-        decimals = 1;
-        while( (dot != NULL) && ((dot - decimals) != filename) &&
-               (dot[0 - decimals] >= '0') && (dot[0 - decimals] <= '9') )
-                { decimals++; }
-        decimals--;
-
-        // Nuv files can have 20 decimals
-        // Keep it down to 10000
-        if(decimals>4) decimals=4;
-        if(*multi==FP_DONT_APPEND)
+        uint8_t count = 0;                  // number of follow-ups
+        uint32_t base=0;
+        bool splitFile=false;
+//        int i = 0;      
+        // index (general use)
+        if(*multi!=FP_DONT_APPEND)
         {
-                if(decimals) printf("There was several files, but dont append was forced\n");
-                decimals=0;
+            aprintf("Checking if there are several files...\n");
+            splitFile=ADM_splitSequencedFile(filename, &left, &right,&decimals,&base);
+            if(splitFile)
+            {   
+                aprintf("left:<%s>, right=<%s>,base=%"LU",digit=%"LU"\n",left,right,base,decimals);
+            }else       
+            {
+                aprintf("No.\n");
+            }
         }
-        // no number sequence
-        if( decimals == 0 )
+        // ____________________
+        // Single loading
+        // ____________________
+        if( false ==splitFile )
         {
                 fdIo newFd;
                 aprintf( "\nSimple loading: \n" );
-                delete [] followup;
                 _curFd = 0;
                 FILE *f=NULL;
                 // open file
@@ -108,106 +104,86 @@
                  newFd.fileSizeCumul=0;
                 _size=newFd.fileSize;
                 listOfFd.push_back(newFd);
-                aprintf( " file: %s, size: %"LLU"\n", filename, _sizeFd[0] );
+                aprintf( " file: %s, size: %"LLU"\n", filename, newFd.fileSize );
                 aprintf( " found 1 files \n" );
                 aprintf( "Done \n" );
                 return 1;
         }
-
-        // possible number sequence
-        else
+        // ____________________
+        // Multi loading
+        // ____________________
+        uint32_t tabSize;
+        std::string leftPart(left);
+        std::string rightPart(right);
+        delete [] left;
+        delete [] right;
+        left=NULL;
+        right=NULL;
+    
+        aprintf( "\nAuto adding: \n" );
+        uint32_t current=base;
+        _curFd = 0;
+        uint64_t total=0;
+        
+        // build match string
+        char match[16];
+        match[0]='%';
+        match[1]='0';
+        sprintf(match+2,"%d",decimals); // snprintf instead ...
+        strcat(match,"d");
+        match[15]=0;
+        aprintf("Using %s as match string\n",match);
+        char number[16];
+        while(1)
         {
-                // split the filename in <left>, <number> and <right>
-                // -----
+                sprintf(number,match,current);
+                std::string middle(number);
+                std::string outName=leftPart+middle+rightPart;
+                aprintf("Checking %s\n",outName.c_str());
 
-                // <left> part
-                left = new char[(dot - filename - decimals) + 1];
-                strncpy( left, filename, (dot - filename - decimals) );
-                left[(dot - filename - decimals)] = '\0';
-
-                // <number> part
-                number = new char[decimals + 1];
-                strncpy( number, (dot - decimals), decimals );
-                number[decimals] = '\0';
-
-                // <right> part
-                right = new char[ strlen(dot)+1 ];
-                strcpy( right, dot );
-
-                // add the file, and all existing follow-ups
-                // -----
-                uint32_t tabSize;
-
-            
-                aprintf( "\nAuto adding: \n" );
-                _curFd = 0;
-                uint64_t total=0;
-                while( last_followup == 0 )
+                // open file
+                FILE *f= ADM_fopen(outName.c_str(), "rb");
+                if(!f)
                 {
-                        strcpy( followup, left );
-                        strcat( followup, number );
-                        strcat( followup, right );
+                        // we need at least one file!
+                        if( !count  )
+                          { return 0; }
+                        else
+                          { 
+                                printf( " file: %s not found. \n", outName.c_str() ); 
+                                break; 
+                          }
+                }
 
-                        // open file
-                        FILE *f= ADM_fopen(followup, "rb");
-                        if(!f)
-                        {
-                                // we need at least one file!
-                                if( first_followup == 1 )
-                                  { return 0; }
-                                else
-                                  { printf( " file: %s not found. \n", followup ); break; }
-                        }
+                // calculate file-size
+                fdIo myFd;
+                myFd.file=f;
+                myFd.fileSize=ADM_fileSize(outName.c_str());
+                myFd.fileSizeCumul = total;
+                total+=  myFd.fileSize;
 
-                        // calculate file-size
-                        fdIo myFd;
-                        myFd.file=f;
-                        fseeko(f, 0, SEEK_END );
-                        myFd.fileSize = ftello(f );
-                        myFd.fileSizeCumul = total;
-                        fseeko( f, 0, SEEK_SET );
-                        total+=  myFd.fileSize;
+                aprintf( " file %d: %s, size: %"LLU"\n", (count + 1), outName.c_str(),
+                                            myFd.fileSize );
 
-                        aprintf( " file %d: %s, size: %"LLU"\n", (count + 1), followup,
-                                                    myFd.fileSize );
+                listOfFd.push_back(myFd);
+                count++;
+                current++;
+        } 
 
-                        // increase number
-                        number[decimals - 1] = number[decimals - 1] + 1;
-                        for( i = decimals - 1; i >= 0; i-- )
-                        {
-                                if( number[i] > '9' )
-                                {
-                                        if( i == 0 )
-                                          { last_followup = 1; break; }
-                                        number[i] = '0';
-                                        number[i - 1] = number[i - 1] + 1;
-                                }
-                        }
+      
+        _size=total;
+        // clean up
+        if(*multi==FP_PROBE)
+        {
+                if(count>1)
+                        *multi=FP_APPEND;       //
+                else
+                        *multi=FP_DONT_APPEND;
+        }
 
-                        first_followup = 0;
-                        listOfFd.push_back(myFd);
-                        count++;
-                } // while( last_followup == 0 )
-
-              
-                _size=total;
-                // clean up
-                delete [] followup;
-                delete [] left;
-                delete [] number;
-                delete [] right;
-                if(*multi==FP_PROBE)
-                {
-                        if(count>1)
-                                *multi=FP_APPEND;       //
-                        else
-                                *multi=FP_DONT_APPEND;
-                }
-
-                aprintf( " found %d files \n", count );
-                aprintf( "Done \n" );
-        } // if( decimals == 0 )
-                return 1;
+        aprintf( " found %d files \n", count );
+        aprintf( "Done \n" );
+        return 1;
 } // fileParser::open()
 
 

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/avidemutils.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/avidemutils.cpp	2011-05-27 06:12:46 UTC (rev 7244)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/avidemutils.cpp	2011-05-30 07:42:42 UTC (rev 7245)
@@ -14,7 +14,7 @@
  *   (at your option) any later version.                                   *
  *                                                                         *
  ***************************************************************************/
-
+#include "ADM_cpp.h"
 #include "ADM_default.h"
 #include <math.h>
 
@@ -463,6 +463,85 @@
 
 	return (a1 << 4) + b1;
 }
+/**
+    \fn ADM_splitSequencedFile
+    \brief split file foobar001.foo into foobar, 001 and 3
+*/
+bool ADM_splitSequencedFile(const char *filename, char **left, char **right,uint32_t *nbDigit,uint32_t *base)
+{
+        const char *dot = strrchr( filename, '.' );
+        *left=NULL;
+        *right=NULL;
 
+        // count the decimals before the dot
+        int decimals = 1;
+        while( (dot != NULL) && ((dot - decimals) != filename) &&
+               (dot[0 - decimals] >= '0') && (dot[0 - decimals] <= '9') )
+                { decimals++; }
+        decimals--;
 
+        // Nuv files can have 20 decimals
+        // Keep it down to 10000
+        if(decimals>4) decimals=4;
+        // split the filename in <left>, <number> and <right>
+        // -----
+        if(!decimals) return false;
+        // <left> part
+        
+        *left = new char[(dot - filename - decimals) + 1];
+        char *aleft=*left;
+        strncpy( aleft, filename, (dot - filename - decimals) );
+        aleft[(dot - filename - decimals)] = '\0';
+
+        // <number> part
+        char number[decimals + 1];
+        strncpy( number, (dot - decimals), decimals );
+        number[decimals] = '\0';
+        *base=atoi(number);
+        *nbDigit=decimals;
+
+        // <right> part
+        *right = new char[ strlen(dot)+1 ];
+        strcpy( *right, dot );
+        return true;
+}
+/**
+    \fn ADM_probeSequencedFile
+*/
+bool ADM_probeSequencedFile(const char *fileName)
+{
+    char *left=NULL;
+    char *right=NULL;
+    uint32_t nbDigit,base;
+     if(false==ADM_splitSequencedFile(fileName, &left, &right,&nbDigit,&base))
+            return false;
+
+    // check if at least one sequence exists...
+    std::string aLeft(left);
+    std::string aRight(right);
+    delete [] left;
+    delete [] right;
+
+    char match[16];
+    match[0]='%';
+    match[1]='0';
+    sprintf(match+2,"%d",nbDigit); // snprintf instead ...
+    strcat(match,"d");
+    match[15]=0;
+
+    
+    char names[16];
+    sprintf(names,match,base+1);
+    std::string middle(names);
+    std::string target=aLeft+middle+aRight;
+    bool r=false;
+    FILE *f=ADM_fopen(target.c_str(),"rb");
+    if(f)
+    {
+        fclose(f);
+        r=true;
+    }
+
+    return r;
+}
 //EOF

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_demuxers/MpegTS/ADM_tsIndexH264.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_demuxers/MpegTS/ADM_tsIndexH264.cpp	2011-05-27 06:12:46 UTC (rev 7244)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_demuxers/MpegTS/ADM_tsIndexH264.cpp	2011-05-30 07:42:42 UTC (rev 7245)
@@ -12,8 +12,12 @@
  *                                                                         *
  ***************************************************************************/
 #include "ADM_tsIndex.h"
+#include "DIA_coreToolkit.h"
+bool ADM_probeSequencedFile(const char *fileName);
 
+#include "ADM_tsIndex.h"
 
+
 /**
         \fn decodeSEI
         \brief decode SEI to get short ref I
@@ -101,8 +105,8 @@
 dmxPacketInfo tmpInfo;
 TS_PESpacket SEI_nal(0);
 bool result=false;
+bool bAppend=false;
 
-
     beginConsuming=0;
     listOfUnits.clear();
 
@@ -127,10 +131,18 @@
         return false;
     }
 
-    writeSystem(file,false);
+    
     pkt=new tsPacketLinearTracker(videoTrac->trackPid, audioTracks);
 
-    FP_TYPE append=FP_APPEND;
+    FP_TYPE append=FP_DONT_APPEND;
+    if(true==ADM_probeSequencedFile(file))
+    {
+        if(true==GUI_Question("There are several files with sequential file names. Should they be all loaded ?"))
+                bAppend=true;
+    }
+    if(bAppend==true)
+        append=FP_APPEND;
+    writeSystem(file,bAppend);
     pkt->open(file,append);
     data.pkt=pkt;
     fullSize=pkt->getSize();

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_demuxers/MpegTS/ADM_tsIndexMpeg2.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_demuxers/MpegTS/ADM_tsIndexMpeg2.cpp	2011-05-27 06:12:46 UTC (rev 7244)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_demuxers/MpegTS/ADM_tsIndexMpeg2.cpp	2011-05-30 07:42:42 UTC (rev 7245)
@@ -12,7 +12,8 @@
  *                                                                         *
  ***************************************************************************/
 #include "ADM_tsIndex.h"
-
+#include "DIA_coreToolkit.h"
+bool ADM_probeSequencedFile(const char *fileName);
 static const uint32_t FPS[16]={
                 0,                      // 0
                 23976,          // 1 (23.976 fps) - FILM
@@ -49,6 +50,8 @@
 indexerData  data;    
 dmxPacketInfo tmpInfo;
 
+bool bAppend=false;
+
     listOfUnits.clear();
 
     if(!videoTrac) return false;
@@ -70,10 +73,17 @@
         printf("[PsIndex] Cannot create %s\n",indexName.c_str());
         return false;
     }
-    writeSystem(file,false);
+    
     pkt=new tsPacketLinearTracker(videoTrac->trackPid, audioTracks);
-
-    FP_TYPE append=FP_APPEND;
+    FP_TYPE append=FP_DONT_APPEND;
+    if(true==ADM_probeSequencedFile(file))
+    {
+        if(true==GUI_Question("There are several files with sequential file names. Should they be all loaded ?"))
+               bAppend=true;
+    }
+    if(true==bAppend)
+        append=FP_APPEND;
+    writeSystem(file,bAppend);
     pkt->open(file,append);
     data.pkt=pkt;
     fullSize=pkt->getSize();



From mean at mail.berlios.de  Mon May 30 09:42:43 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Mon, 30 May 2011 09:42:43 +0200
Subject: [Avidemux-svn-commit] r7246 -
	branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_demuxers/MpegPS
Message-ID: <20110530074244.08EDD48134C@sheep.berlios.de>

Author: mean
Date: 2011-05-30 09:42:43 +0200 (Mon, 30 May 2011)
New Revision: 7246

Modified:
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_demuxers/MpegPS/ADM_psIndex.cpp
Log:
[indexer(ps)] Add append flag when indexing

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_demuxers/MpegPS/ADM_psIndex.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_demuxers/MpegPS/ADM_psIndex.cpp	2011-05-30 07:42:42 UTC (rev 7245)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_demuxers/MpegPS/ADM_psIndex.cpp	2011-05-30 07:42:43 UTC (rev 7246)
@@ -28,6 +28,8 @@
 #include "DIA_working.h"
 #include "ADM_indexFile.h"
 #include "ADM_vidMisc.h"
+#include "DIA_coreToolkit.h"
+bool ADM_probeSequencedFile(const char *fileName);
 
 static const char Type[5]={'X','I','P','B','P'};  // Frame type
 static const char Structure[4]={'X','T','B','F'}; // X Top Bottom Frame
@@ -187,19 +189,30 @@
 PSVideo video;
 indexerData  data;    
 dmxPacketInfo info;
+bool bAppend=false;
     
     memset(&video,0,sizeof(video));
     memset(&data,0,sizeof(data));
     data.picStructure=pictureFrame;
     char *indexName=(char *)alloca(strlen(file)+5);
     sprintf(indexName,"%s.idx2",file);
+
+    FP_TYPE append=FP_DONT_APPEND;
+    if(true==ADM_probeSequencedFile(file))
+    {
+        if(true==GUI_Question("There are several files with sequential file names. Should they be all loaded ?"))
+               bAppend=true;
+    }
+    if(true==bAppend)
+        append=FP_APPEND;
+
     index=qfopen(indexName,"wt");
     if(!index)
     {
         printf("[PsIndex] Cannot create %s\n",indexName);
         return false;
     }
-    writeSystem(file,true);
+    writeSystem(file,bAppend);
     pkt=new psPacketLinearTracker(0xE0);
 
     audioTracks=psProbeAudio(file);
@@ -218,7 +231,6 @@
 
     }
 
-    FP_TYPE append=FP_APPEND;
     pkt->open(file,append);
     data.pkt=pkt;
     fullSize=pkt->getSize();



From mean at mail.berlios.de  Mon May 30 11:51:54 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Mon, 30 May 2011 11:51:54 +0200
Subject: [Avidemux-svn-commit] r7247 -
	branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreDemuxerMpeg/src
Message-ID: <20110530095155.39710480C3B@sheep.berlios.de>

Author: mean
Date: 2011-05-30 11:51:54 +0200 (Mon, 30 May 2011)
New Revision: 7247

Modified:
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreDemuxerMpeg/src/CMakeLists.txt
Log:
[mpeg demuxer (core)] add deps to coreutils (win32)

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreDemuxerMpeg/src/CMakeLists.txt
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreDemuxerMpeg/src/CMakeLists.txt	2011-05-30 07:42:43 UTC (rev 7246)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreDemuxerMpeg/src/CMakeLists.txt	2011-05-30 09:51:54 UTC (rev 7247)
@@ -11,6 +11,6 @@
 )	
 #*************************************************
 ADM_ADD_SHARED_LIBRARY(ADM_coreDemuxerMpeg6 ${ADMcoreDemuxerMpeg_SRCS})
-TARGET_LINK_LIBRARIES(ADM_coreDemuxerMpeg6 ADM_core6)
+TARGET_LINK_LIBRARIES(ADM_coreDemuxerMpeg6 ADM_core6 ADM_coreUtils6)
 INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/../include)
 ADM_INSTALL_LIB(ADM_coreDemuxerMpeg6)



