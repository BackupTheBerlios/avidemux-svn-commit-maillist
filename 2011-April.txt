From mean at mail.berlios.de  Sat Apr  2 21:30:01 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Sat,  2 Apr 2011 21:30:01 +0200
Subject: [Avidemux-svn-commit] r7097 - in branches/avidemux_2.6_branch_mean:
	avidemux/common/ADM_editor
	avidemux_plugins/ADM_videoEncoder/x264 cmake
Message-ID: <20110402193001.AB0B6480BED@sheep.berlios.de>

Author: mean
Date: 2011-04-02 21:30:01 +0200 (Sat, 02 Apr 2011)
New Revision: 7097

Modified:
   branches/avidemux_2.6_branch_mean/avidemux/common/ADM_editor/ADM_edPySave.cpp
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/x264_encoder_desc.cpp
   branches/avidemux_2.6_branch_mean/cmake/admSerialization.py
Log:
[core/x264] Fix py loading when line > 1024 chars, use full name for structure in conf couple/serialization

Modified: branches/avidemux_2.6_branch_mean/avidemux/common/ADM_editor/ADM_edPySave.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux/common/ADM_editor/ADM_edPySave.cpp	2011-03-29 11:59:11 UTC (rev 7096)
+++ branches/avidemux_2.6_branch_mean/avidemux/common/ADM_editor/ADM_edPySave.cpp	2011-04-02 19:30:01 UTC (rev 7097)
@@ -44,13 +44,20 @@
 static void dumpConf(FILE *fd,CONFcouple *c)
 {
  if(!c) return;
-        
+    int count=0;    
     uint32_t n=c->getSize();
     for(int j=0;j<n;j++)
     {
         char *name,*value;
         c->getInternalName(j,&name,&value);
         qfprintf(fd,",\"%s=%s\"",name,value);
+        // tinyPy does not like line > 1024 chars
+        if(count>=20)
+        {
+            qfprintf(fd,"\\\n");
+            count=0;
+        }
+        count++;
     }
     delete c;
     c=NULL;

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/x264_encoder_desc.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/x264_encoder_desc.cpp	2011-03-29 11:59:11 UTC (rev 7096)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/x264_encoder_desc.cpp	2011-04-02 19:30:01 UTC (rev 7097)
@@ -1,9 +1,9 @@
 const ADM_paramList x264_encoder_param[]={
- {"params",offsetof(x264_encoder,general.params),"COMPRES_PARAMS",ADM_param_video_encode},
- {"threads",offsetof(x264_encoder,general.threads),"uint32_t",ADM_param_uint32_t},
+ {"general.params",offsetof(x264_encoder,general.params),"COMPRES_PARAMS",ADM_param_video_encode},
+ {"general.threads",offsetof(x264_encoder,general.threads),"uint32_t",ADM_param_uint32_t},
  {"level",offsetof(x264_encoder,level),"uint32_t",ADM_param_uint32_t},
- {"sar_height",offsetof(x264_encoder,vui.sar_height),"uint32_t",ADM_param_uint32_t},
- {"sar_width",offsetof(x264_encoder,vui.sar_width),"uint32_t",ADM_param_uint32_t},
+ {"vui.sar_height",offsetof(x264_encoder,vui.sar_height),"uint32_t",ADM_param_uint32_t},
+ {"vui.sar_width",offsetof(x264_encoder,vui.sar_width),"uint32_t",ADM_param_uint32_t},
  {"MaxRefFrames",offsetof(x264_encoder,MaxRefFrames),"uint32_t",ADM_param_uint32_t},
  {"MinIdr",offsetof(x264_encoder,MinIdr),"uint32_t",ADM_param_uint32_t},
  {"MaxIdr",offsetof(x264_encoder,MaxIdr),"uint32_t",ADM_param_uint32_t},
@@ -16,39 +16,39 @@
  {"i_deblocking_filter_beta",offsetof(x264_encoder,i_deblocking_filter_beta),"int32_t",ADM_param_int32_t},
  {"cabac",offsetof(x264_encoder,cabac),"bool",ADM_param_bool},
  {"interlaced",offsetof(x264_encoder,interlaced),"bool",ADM_param_bool},
- {"b_8x8",offsetof(x264_encoder,analyze.b_8x8),"bool",ADM_param_bool},
- {"b_i4x4",offsetof(x264_encoder,analyze.b_i4x4),"bool",ADM_param_bool},
- {"b_i8x8",offsetof(x264_encoder,analyze.b_i8x8),"bool",ADM_param_bool},
- {"b_p8x8",offsetof(x264_encoder,analyze.b_p8x8),"bool",ADM_param_bool},
- {"b_p16x16",offsetof(x264_encoder,analyze.b_p16x16),"bool",ADM_param_bool},
- {"b_b16x16",offsetof(x264_encoder,analyze.b_b16x16),"bool",ADM_param_bool},
- {"weighted_pred",offsetof(x264_encoder,analyze.weighted_pred),"uint32_t",ADM_param_uint32_t},
- {"weighted_bipred",offsetof(x264_encoder,analyze.weighted_bipred),"bool",ADM_param_bool},
- {"direct_mv_pred",offsetof(x264_encoder,analyze.direct_mv_pred),"uint32_t",ADM_param_uint32_t},
- {"chroma_offset",offsetof(x264_encoder,analyze.chroma_offset),"uint32_t",ADM_param_uint32_t},
- {"me_method",offsetof(x264_encoder,analyze.me_method),"uint32_t",ADM_param_uint32_t},
- {"subpel_refine",offsetof(x264_encoder,analyze.subpel_refine),"uint32_t",ADM_param_uint32_t},
- {"chroma_me",offsetof(x264_encoder,analyze.chroma_me),"bool",ADM_param_bool},
- {"mixed_references",offsetof(x264_encoder,analyze.mixed_references),"bool",ADM_param_bool},
- {"trellis",offsetof(x264_encoder,analyze.trellis),"uint32_t",ADM_param_uint32_t},
- {"fast_pskip",offsetof(x264_encoder,analyze.fast_pskip),"bool",ADM_param_bool},
- {"dct_decimate",offsetof(x264_encoder,analyze.dct_decimate),"bool",ADM_param_bool},
- {"noise_reduction",offsetof(x264_encoder,analyze.noise_reduction),"uint32_t",ADM_param_uint32_t},
- {"psy",offsetof(x264_encoder,analyze.psy),"bool",ADM_param_bool},
- {"rc_method",offsetof(x264_encoder,ratecontrol.rc_method),"uint32_t",ADM_param_uint32_t},
- {"qp_constant",offsetof(x264_encoder,ratecontrol.qp_constant),"uint32_t",ADM_param_uint32_t},
- {"qp_min",offsetof(x264_encoder,ratecontrol.qp_min),"uint32_t",ADM_param_uint32_t},
- {"qp_max",offsetof(x264_encoder,ratecontrol.qp_max),"uint32_t",ADM_param_uint32_t},
- {"qp_step",offsetof(x264_encoder,ratecontrol.qp_step),"uint32_t",ADM_param_uint32_t},
- {"bitrate",offsetof(x264_encoder,ratecontrol.bitrate),"uint32_t",ADM_param_uint32_t},
- {"vbv_max_bitrate",offsetof(x264_encoder,ratecontrol.vbv_max_bitrate),"uint32_t",ADM_param_uint32_t},
- {"vbv_buffer_size",offsetof(x264_encoder,ratecontrol.vbv_buffer_size),"uint32_t",ADM_param_uint32_t},
- {"vbv_buffer_init",offsetof(x264_encoder,ratecontrol.vbv_buffer_init),"uint32_t",ADM_param_uint32_t},
- {"ip_factor",offsetof(x264_encoder,ratecontrol.ip_factor),"float",ADM_param_float},
- {"pb_factor",offsetof(x264_encoder,ratecontrol.pb_factor),"float",ADM_param_float},
- {"aq_mode",offsetof(x264_encoder,ratecontrol.aq_mode),"uint32_t",ADM_param_uint32_t},
- {"aq_strength",offsetof(x264_encoder,ratecontrol.aq_strength),"float",ADM_param_float},
- {"mb_tree",offsetof(x264_encoder,ratecontrol.mb_tree),"bool",ADM_param_bool},
- {"lookahead",offsetof(x264_encoder,ratecontrol.lookahead),"uint32_t",ADM_param_uint32_t},
+ {"analyze.b_8x8",offsetof(x264_encoder,analyze.b_8x8),"bool",ADM_param_bool},
+ {"analyze.b_i4x4",offsetof(x264_encoder,analyze.b_i4x4),"bool",ADM_param_bool},
+ {"analyze.b_i8x8",offsetof(x264_encoder,analyze.b_i8x8),"bool",ADM_param_bool},
+ {"analyze.b_p8x8",offsetof(x264_encoder,analyze.b_p8x8),"bool",ADM_param_bool},
+ {"analyze.b_p16x16",offsetof(x264_encoder,analyze.b_p16x16),"bool",ADM_param_bool},
+ {"analyze.b_b16x16",offsetof(x264_encoder,analyze.b_b16x16),"bool",ADM_param_bool},
+ {"analyze.weighted_pred",offsetof(x264_encoder,analyze.weighted_pred),"uint32_t",ADM_param_uint32_t},
+ {"analyze.weighted_bipred",offsetof(x264_encoder,analyze.weighted_bipred),"bool",ADM_param_bool},
+ {"analyze.direct_mv_pred",offsetof(x264_encoder,analyze.direct_mv_pred),"uint32_t",ADM_param_uint32_t},
+ {"analyze.chroma_offset",offsetof(x264_encoder,analyze.chroma_offset),"uint32_t",ADM_param_uint32_t},
+ {"analyze.me_method",offsetof(x264_encoder,analyze.me_method),"uint32_t",ADM_param_uint32_t},
+ {"analyze.subpel_refine",offsetof(x264_encoder,analyze.subpel_refine),"uint32_t",ADM_param_uint32_t},
+ {"analyze.chroma_me",offsetof(x264_encoder,analyze.chroma_me),"bool",ADM_param_bool},
+ {"analyze.mixed_references",offsetof(x264_encoder,analyze.mixed_references),"bool",ADM_param_bool},
+ {"analyze.trellis",offsetof(x264_encoder,analyze.trellis),"uint32_t",ADM_param_uint32_t},
+ {"analyze.fast_pskip",offsetof(x264_encoder,analyze.fast_pskip),"bool",ADM_param_bool},
+ {"analyze.dct_decimate",offsetof(x264_encoder,analyze.dct_decimate),"bool",ADM_param_bool},
+ {"analyze.noise_reduction",offsetof(x264_encoder,analyze.noise_reduction),"uint32_t",ADM_param_uint32_t},
+ {"analyze.psy",offsetof(x264_encoder,analyze.psy),"bool",ADM_param_bool},
+ {"ratecontrol.rc_method",offsetof(x264_encoder,ratecontrol.rc_method),"uint32_t",ADM_param_uint32_t},
+ {"ratecontrol.qp_constant",offsetof(x264_encoder,ratecontrol.qp_constant),"uint32_t",ADM_param_uint32_t},
+ {"ratecontrol.qp_min",offsetof(x264_encoder,ratecontrol.qp_min),"uint32_t",ADM_param_uint32_t},
+ {"ratecontrol.qp_max",offsetof(x264_encoder,ratecontrol.qp_max),"uint32_t",ADM_param_uint32_t},
+ {"ratecontrol.qp_step",offsetof(x264_encoder,ratecontrol.qp_step),"uint32_t",ADM_param_uint32_t},
+ {"ratecontrol.bitrate",offsetof(x264_encoder,ratecontrol.bitrate),"uint32_t",ADM_param_uint32_t},
+ {"ratecontrol.vbv_max_bitrate",offsetof(x264_encoder,ratecontrol.vbv_max_bitrate),"uint32_t",ADM_param_uint32_t},
+ {"ratecontrol.vbv_buffer_size",offsetof(x264_encoder,ratecontrol.vbv_buffer_size),"uint32_t",ADM_param_uint32_t},
+ {"ratecontrol.vbv_buffer_init",offsetof(x264_encoder,ratecontrol.vbv_buffer_init),"uint32_t",ADM_param_uint32_t},
+ {"ratecontrol.ip_factor",offsetof(x264_encoder,ratecontrol.ip_factor),"float",ADM_param_float},
+ {"ratecontrol.pb_factor",offsetof(x264_encoder,ratecontrol.pb_factor),"float",ADM_param_float},
+ {"ratecontrol.aq_mode",offsetof(x264_encoder,ratecontrol.aq_mode),"uint32_t",ADM_param_uint32_t},
+ {"ratecontrol.aq_strength",offsetof(x264_encoder,ratecontrol.aq_strength),"float",ADM_param_float},
+ {"ratecontrol.mb_tree",offsetof(x264_encoder,ratecontrol.mb_tree),"bool",ADM_param_bool},
+ {"ratecontrol.lookahead",offsetof(x264_encoder,ratecontrol.lookahead),"uint32_t",ADM_param_uint32_t},
 {NULL,0,NULL}
 };

Modified: branches/avidemux_2.6_branch_mean/cmake/admSerialization.py
===================================================================
--- branches/avidemux_2.6_branch_mean/cmake/admSerialization.py	2011-03-29 11:59:11 UTC (rev 7096)
+++ branches/avidemux_2.6_branch_mean/cmake/admSerialization.py	2011-04-02 19:30:01 UTC (rev 7097)
@@ -59,7 +59,8 @@
         fullName=varName
     else:
         fullName=fullPath+"."+varName
-    outputDesc(" {\""+str(varName)+"\",offsetof("+str(structName)+","+str(fullName)+"),\""+str(ctype)+"\","+str(atype)+"},")
+    #outputDesc(" {\""+str(varName)+"\",offsetof("+str(structName)+","+str(fullName)+"),\""+str(ctype)+"\","+str(atype)+"},")
+    outputDesc(" {\""+str(fullName)+"\",offsetof("+str(structName)+","+str(fullName)+"),\""+str(ctype)+"\","+str(atype)+"},")
 ###################################################################################################################################
 def writeDescHead():
     outputHeader("// automatically generated by admSerialization.py, do not edit!")



From mean at mail.berlios.de  Sat Apr  2 21:30:10 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Sat,  2 Apr 2011 21:30:10 +0200
Subject: [Avidemux-svn-commit] r7099 -
	branches/avidemux_2.6_branch_mean/avidemux_core
Message-ID: <20110402193010.19238480BED@sheep.berlios.de>

Author: mean
Date: 2011-04-02 21:30:09 +0200 (Sat, 02 Apr 2011)
New Revision: 7099

Modified:
   branches/avidemux_2.6_branch_mean/avidemux_core/CMakeLists.txt
Log:
[libjson] add to corelibs

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/CMakeLists.txt
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/CMakeLists.txt	2011-04-02 19:30:07 UTC (rev 7098)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/CMakeLists.txt	2011-04-02 19:30:09 UTC (rev 7099)
@@ -72,6 +72,7 @@
 ADD_SUBDIRECTORY(ADM_coreSqlLight3)
 ADD_SUBDIRECTORY(ADM_coreJobs)
 ADD_SUBDIRECTORY(ADM_coreSocket)
+ADD_SUBDIRECTORY(ADM_coreJson)
 
 if (NOT USE_SYSTEM_SPIDERMONKEY)
 	ADD_SUBDIRECTORY(ADM_smjs)



From mean at mail.berlios.de  Sat Apr  2 21:30:11 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Sat,  2 Apr 2011 21:30:11 +0200
Subject: [Avidemux-svn-commit] r7100 -
	branches/avidemux_2.6_branch_mean/avidemux
Message-ID: <20110402193011.21825480BED@sheep.berlios.de>

Author: mean
Date: 2011-04-02 21:30:10 +0200 (Sat, 02 Apr 2011)
New Revision: 7100

Modified:
   branches/avidemux_2.6_branch_mean/avidemux/commonCmakeApplication.cmake
Log:
[avidemux] Links to json

Modified: branches/avidemux_2.6_branch_mean/avidemux/commonCmakeApplication.cmake
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux/commonCmakeApplication.cmake	2011-04-02 19:30:09 UTC (rev 7099)
+++ branches/avidemux_2.6_branch_mean/avidemux/commonCmakeApplication.cmake	2011-04-02 19:30:10 UTC (rev 7100)
@@ -84,6 +84,7 @@
 ADM_coreVideoFilter6
 ADM_coreImageLoader6
 ADM_coreTinyPy6
+ADM_coreJSON6
 )
 
 if (USE_SYSTEM_SPIDERMONKEY)



From mean at mail.berlios.de  Sat Apr  2 21:30:12 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Sat,  2 Apr 2011 21:30:12 +0200
Subject: [Avidemux-svn-commit] r7101 -
	branches/avidemux_2.6_branch_mean/cmake
Message-ID: <20110402193012.225D1480BED@sheep.berlios.de>

Author: mean
Date: 2011-04-02 21:30:11 +0200 (Sat, 02 Apr 2011)
New Revision: 7101

Modified:
   branches/avidemux_2.6_branch_mean/cmake/admSerialization.py
Log:
[build] admSerialization.py now also build json load/save functions

Modified: branches/avidemux_2.6_branch_mean/cmake/admSerialization.py
===================================================================
--- branches/avidemux_2.6_branch_mean/cmake/admSerialization.py	2011-04-02 19:30:10 UTC (rev 7100)
+++ branches/avidemux_2.6_branch_mean/cmake/admSerialization.py	2011-04-02 19:30:11 UTC (rev 7101)
@@ -12,21 +12,30 @@
 structName=r'foostruct'
 allCTypes=dict()
 allATypes=dict()
+allJTypes=dict()
+
 allCTypes["uint32_t"]="uint32_t"
 allCTypes["int32_t"]="int32_t"
 allCTypes["bool"]="bool"
 allCTypes["string"]="char *"
-allCTypes["bool"]="bool"
 allCTypes["float"]="float"
 allCTypes["video_encode"]="COMPRES_PARAMS"
 allCTypes["lavcodec_context"]="FFcodecContext"
 
+allJTypes["uint32_t"]="json.addUint32("
+allJTypes["int32_t"]="json.addInt32("
+allJTypes["bool"]="json.addBool("
+allJTypes["string"]="json.addString("
+allJTypes["float"]="json.addFloat("
+allJTypes["video_encode"]="json.addCompressParam("
+allJTypes["lavcodec_context"]="json.lavcodec("
+
+
 allATypes["uint32_t"]="ADM_param_uint32_t"
 allATypes["int32_t"]="ADM_param_int32_t"
 allATypes["float"]="ADM_param_float"
 allATypes["bool"]="ADM_param_bool"
 allATypes["string"]="ADM_param_string"
-allATypes["float"]="ADM_param_float"
 allATypes["video_encode"]="ADM_param_video_encode"
 allATypes["lavcodec_context"]="ADM_param_lavcodec_context"
 
@@ -43,6 +52,10 @@
 def outputDesc(st):
     descFile.write(str(st)+"\n")
     pass
+def outputJson(st):
+    jsonFile.write(str(st)+"\n")
+    #print(st)
+    pass
 
 #
 def processLine(varType,varName):
@@ -52,8 +65,12 @@
     if(not varType in allATypes):
         print("Unknown var "+str(varType))
         exit(1)
+    if(not varType in allJTypes):
+        print("json:Unknown var "+str(varType))
+        exit(1)
     ctype=allCTypes[varType].strip()
     atype=allATypes[varType].strip()
+    jtype=allJTypes[varType].strip()
     outputHeader( str(ctype)+" "+str(varName)+";")
     if(len(fullPath)==0):
         fullName=varName
@@ -61,16 +78,46 @@
         fullName=fullPath+"."+varName
     #outputDesc(" {\""+str(varName)+"\",offsetof("+str(structName)+","+str(fullName)+"),\""+str(ctype)+"\","+str(atype)+"},")
     outputDesc(" {\""+str(fullName)+"\",offsetof("+str(structName)+","+str(fullName)+"),\""+str(ctype)+"\","+str(atype)+"},")
+    # json part...
+    outputJson(jtype+"\""+str(varName)+"\",key->"+str(fullName)+");")
 ###################################################################################################################################
 def writeDescHead():
-    outputHeader("// automatically generated by admSerialization.py, do not edit!")
+    outputDesc("// automatically generated by admSerialization.py, do not edit!")
+    #outputDesc("#include \"ADM_default.h\"")
+    #outputDesc("#include \"ADM_paramList.h\"")
+    #outputDesc("#include \""+str(headerFileName)+"\"")
     outputDesc("const ADM_paramList "+str(structName)+"_param[]={")
 
 def writeDescFooter():
     outputDesc("{NULL,0,NULL}")
     outputDesc("};")
 
+def writeJsonHead():
+    outputJson("// automatically generated by admSerialization.py, do not edit!")
+    outputJson("#include \"ADM_default.h\"")
+    outputJson("#include \"ADM_paramList.h\"")
+    #outputJson("#include \"ADM_coreVideoEncoder.h\"")
+    #outputJson("#include \"ADM_encoderConf.h\"")
+    outputJson("#include \"ADM_coreJson/include/ADM_coreJson.h\"")
+    outputJson("#include \""+str(headerFileName)+"\"")
+    outputJson("extern const ADM_paramList "+str(structName)+"_param[];")
+    outputJson("bool  "+str(structName)+"_jserialize(const char *file, const "+str(structName)+" *key){")
+    outputJson("admJson json;")
 
+def writeJsonFooter():
+    outputJson("return json.dumpToFile(file);")
+    outputJson("};")
+    outputJson("bool  "+str(structName)+"_jdeserialize(const char *file, ADM_paramList *tmpl,"+str(structName)+" *key){")
+    outputJson("admJson json;")
+    outputJson("CONFcouple *c=json.readFromFile(file);")
+    outputJson("if(!c) {ADM_error(\"Cannot read json file\");return false;}")
+    outputJson("bool r= ADM_paramLoadPartial(c,tmpl,key);")
+    outputJson("delete c;")
+    outputJson("return r;")
+    outputJson("};")
+
+
+
 def writeHeaderHead():
     outputHeader( "// automatically generated by admSerialization.py do not edit")
     outputHeader(  "#ifndef ADM_"+str(structName)+"_CONF_H")
@@ -100,6 +147,9 @@
 descFileName=re.sub(r'.conf',r'_desc.cpp',inputFile)
 descFile=open(descFileName,'w')
 #
+jsonFileName=re.sub(r'.conf',r'_json.cpp',inputFile)
+jsonFile=open(jsonFileName,'w')
+#
 f=open(inputFile,'r')
 while(1):
     line=f.readline()
@@ -114,15 +164,18 @@
             print("Our structure is :"+str(structName))
             writeDescHead()
             writeHeaderHead()
+            writeJsonHead()
             gotName=True
         else:  # else we have structure inside structure
             #outputHeader("struct "+structs+" {")
             outputHeader("struct  {")
             nested.append(structs)
             fullPath=".".join(nested)
+            outputJson("json.addNode(\""+str(structs)+"\");")
     elif(line.find(r'}')!=-1):
         if(len(nested)!=0):
             last=nested.pop()
+            outputJson("json.endNode();")
             outputHeader("}"+str(last)+";")
             #outputHeader("};")
         fullPath=".".join(nested)
@@ -145,6 +198,8 @@
 f.close()
 writeDescFooter()
 writeHeadFooter()
+writeJsonFooter()
 headerFile.close()
 descFile.close()
+jsonFile.close()
 print "All done"



From mean at mail.berlios.de  Sat Apr  2 21:30:13 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Sat,  2 Apr 2011 21:30:13 +0200
Subject: [Avidemux-svn-commit] r7102 - in
	branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264:
	. qt4
Message-ID: <20110402193013.72467480BED@sheep.berlios.de>

Author: mean
Date: 2011-04-02 21:30:13 +0200 (Sat, 02 Apr 2011)
New Revision: 7102

Added:
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/x264_encoder_json.cpp
Modified:
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/ADM_x264.cpp
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/CMakeLists.txt
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/qt4/Q_x264.cpp
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/x264_encoder.h
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/x264_encoder_desc.cpp
Log:
[x264] Add json support

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/ADM_x264.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/ADM_x264.cpp	2011-04-02 19:30:11 UTC (rev 7101)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/ADM_x264.cpp	2011-04-02 19:30:13 UTC (rev 7102)
@@ -31,6 +31,8 @@
 
 #define MMSET(x) memset(&(x),0,sizeof(x))
 
+bool  x264_encoder_jserialize(const char *file, const x264_encoder *key);
+
 x264_encoder x264Settings=
 {
    { // General
@@ -336,7 +338,9 @@
 extern bool x264_ui(x264_encoder *settings);
 bool         x264Configure(void)
 {
-    return x264_ui(&x264Settings);
+bool r;
+    r=x264_ui(&x264Settings);
+    return r;
 }
 // EOF
 

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/CMakeLists.txt
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/CMakeLists.txt	2011-04-02 19:30:11 UTC (rev 7101)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/CMakeLists.txt	2011-04-02 19:30:13 UTC (rev 7102)
@@ -5,6 +5,7 @@
         ADM_x264.cpp
         ADM_x264Plugin.cpp
         ADM_x264Setup.cpp
+        x264_encoder_json.cpp
 )
 include(admCheckX264)
 checkX264()
@@ -19,7 +20,7 @@
     SET(ADM_ve_x264_QT4_Headers qt4/Q_x264.h)
     SET(ADM_ve_x264_QT4_UI      qt4/x264ConfigDialog)
     ADD_VIDEO_ENCODER_QT4(ADM_ve_x264_qt4   ${ADM_ve_x264_QT4_SRCS} ${ADM_ve_x264_QT4_Headers} ${ADM_ve_x264_QT4_UI} ${x264_SRCS})
-    TARGET_LINK_LIBRARIES(ADM_ve_x264_qt4 x264 )
+    TARGET_LINK_LIBRARIES(ADM_ve_x264_qt4 x264 ADM_coreJSON6)
     INIT_VIDEO_ENCODER(ADM_ve_x264_qt4)
     INSTALL_VIDEO_ENCODER(ADM_ve_x264_qt4)
   endif(DO_QT4)

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/qt4/Q_x264.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/qt4/Q_x264.cpp	2011-04-02 19:30:11 UTC (rev 7101)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/qt4/Q_x264.cpp	2011-04-02 19:30:13 UTC (rev 7102)
@@ -14,6 +14,7 @@
 #include "Q_x264.h"
 
 static x264_encoder myCopy; // ugly...
+extern bool  x264_encoder_jserialize(const char *file, const x264_encoder *key);
 
 /**
     \fn x264_ui

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/x264_encoder.h
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/x264_encoder.h	2011-04-02 19:30:11 UTC (rev 7101)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/x264_encoder.h	2011-04-02 19:30:13 UTC (rev 7102)
@@ -1,4 +1,3 @@
-// automatically generated by admSerialization.py, do not edit!
 // automatically generated by admSerialization.py do not edit
 #ifndef ADM_x264_encoder_CONF_H
 #define ADM_x264_encoder_CONF_H

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/x264_encoder_desc.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/x264_encoder_desc.cpp	2011-04-02 19:30:11 UTC (rev 7101)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/x264_encoder_desc.cpp	2011-04-02 19:30:13 UTC (rev 7102)
@@ -1,3 +1,4 @@
+// automatically generated by admSerialization.py, do not edit!
 const ADM_paramList x264_encoder_param[]={
  {"general.params",offsetof(x264_encoder,general.params),"COMPRES_PARAMS",ADM_param_video_encode},
  {"general.threads",offsetof(x264_encoder,general.threads),"uint32_t",ADM_param_uint32_t},

Added: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/x264_encoder_json.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/x264_encoder_json.cpp	                        (rev 0)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/x264_encoder_json.cpp	2011-04-02 19:30:13 UTC (rev 7102)
@@ -0,0 +1,77 @@
+// automatically generated by admSerialization.py, do not edit!
+#include "ADM_default.h"
+#include "ADM_paramList.h"
+#include "ADM_coreJson/include/ADM_coreJson.h"
+#include "x264_encoder.h"
+extern const ADM_paramList x264_encoder_param[];
+bool  x264_encoder_jserialize(const char *file, const x264_encoder *key){
+admJson json;
+json.addNode("general");
+json.addCompressParam("params",key->general.params);
+json.addUint32("threads",key->general.threads);
+json.endNode();
+json.addUint32("level",key->level);
+json.addNode("vui");
+json.addUint32("sar_height",key->vui.sar_height);
+json.addUint32("sar_width",key->vui.sar_width);
+json.endNode();
+json.addUint32("MaxRefFrames",key->MaxRefFrames);
+json.addUint32("MinIdr",key->MinIdr);
+json.addUint32("MaxIdr",key->MaxIdr);
+json.addUint32("MaxBFrame",key->MaxBFrame);
+json.addUint32("i_bframe_adaptative",key->i_bframe_adaptative);
+json.addUint32("i_bframe_bias",key->i_bframe_bias);
+json.addUint32("i_bframe_pyramid",key->i_bframe_pyramid);
+json.addBool("b_deblocking_filter",key->b_deblocking_filter);
+json.addInt32("i_deblocking_filter_alphac0",key->i_deblocking_filter_alphac0);
+json.addInt32("i_deblocking_filter_beta",key->i_deblocking_filter_beta);
+json.addBool("cabac",key->cabac);
+json.addBool("interlaced",key->interlaced);
+json.addNode("analyze");
+json.addBool("b_8x8",key->analyze.b_8x8);
+json.addBool("b_i4x4",key->analyze.b_i4x4);
+json.addBool("b_i8x8",key->analyze.b_i8x8);
+json.addBool("b_p8x8",key->analyze.b_p8x8);
+json.addBool("b_p16x16",key->analyze.b_p16x16);
+json.addBool("b_b16x16",key->analyze.b_b16x16);
+json.addUint32("weighted_pred",key->analyze.weighted_pred);
+json.addBool("weighted_bipred",key->analyze.weighted_bipred);
+json.addUint32("direct_mv_pred",key->analyze.direct_mv_pred);
+json.addUint32("chroma_offset",key->analyze.chroma_offset);
+json.addUint32("me_method",key->analyze.me_method);
+json.addUint32("subpel_refine",key->analyze.subpel_refine);
+json.addBool("chroma_me",key->analyze.chroma_me);
+json.addBool("mixed_references",key->analyze.mixed_references);
+json.addUint32("trellis",key->analyze.trellis);
+json.addBool("fast_pskip",key->analyze.fast_pskip);
+json.addBool("dct_decimate",key->analyze.dct_decimate);
+json.addUint32("noise_reduction",key->analyze.noise_reduction);
+json.addBool("psy",key->analyze.psy);
+json.endNode();
+json.addNode("ratecontrol");
+json.addUint32("rc_method",key->ratecontrol.rc_method);
+json.addUint32("qp_constant",key->ratecontrol.qp_constant);
+json.addUint32("qp_min",key->ratecontrol.qp_min);
+json.addUint32("qp_max",key->ratecontrol.qp_max);
+json.addUint32("qp_step",key->ratecontrol.qp_step);
+json.addUint32("bitrate",key->ratecontrol.bitrate);
+json.addUint32("vbv_max_bitrate",key->ratecontrol.vbv_max_bitrate);
+json.addUint32("vbv_buffer_size",key->ratecontrol.vbv_buffer_size);
+json.addUint32("vbv_buffer_init",key->ratecontrol.vbv_buffer_init);
+json.addFloat("ip_factor",key->ratecontrol.ip_factor);
+json.addFloat("pb_factor",key->ratecontrol.pb_factor);
+json.addUint32("aq_mode",key->ratecontrol.aq_mode);
+json.addFloat("aq_strength",key->ratecontrol.aq_strength);
+json.addBool("mb_tree",key->ratecontrol.mb_tree);
+json.addUint32("lookahead",key->ratecontrol.lookahead);
+json.endNode();
+return json.dumpToFile(file);
+};
+bool  x264_encoder_jdeserialize(const char *file, ADM_paramList *tmpl,x264_encoder *key){
+admJson json;
+CONFcouple *c=json.readFromFile(file);
+if(!c) {ADM_error("Cannot read json file");return false;}
+bool r= ADM_paramLoadPartial(c,tmpl,key);
+delete c;
+return r;
+};



From mean at mail.berlios.de  Sun Apr  3 09:24:55 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Sun,  3 Apr 2011 09:24:55 +0200
Subject: [Avidemux-svn-commit] r7103 - in
	branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreJson:
	include src
Message-ID: <20110403072455.D6531480C79@sheep.berlios.de>

Author: mean
Date: 2011-04-03 09:24:55 +0200 (Sun, 03 Apr 2011)
New Revision: 7103

Modified:
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreJson/include/ADM_coreJson.h
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreJson/src/ADM_json.cpp
Log:
[corejson] Split read and write

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreJson/include/ADM_coreJson.h
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreJson/include/ADM_coreJson.h	2011-04-02 19:30:13 UTC (rev 7102)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreJson/include/ADM_coreJson.h	2011-04-03 07:24:55 UTC (rev 7103)
@@ -24,17 +24,11 @@
 class admJson
 {
 protected:
-        typedef struct  
-            {
-                string key;
-                string value;
-            }keyVal;
-         vector <keyVal> readItems;
-
+       
          vector <void *>cookies;
          vector <string >nested;
          void *cookie;
-        bool scan(void *node,string name);
+        
 public:
             admJson();
             ~admJson();
@@ -52,9 +46,28 @@
 
         bool dumpToFile(const char *file);
 
-        CONFcouple *readFromFile(const char *fileName);
       
+      
 };
+/**
+    \class admJsonToCouple
+    \brief create conf couple from a json file
+*/
+class admJsonToCouple
+{
+protected:
+        typedef struct  
+            {
+                string key;
+                string value;
+            }keyVal;
+         vector <keyVal> readItems;
+         bool scan(void *node,string name);
 
+public:
+        admJsonToCouple() {}
+        ~admJsonToCouple() {}
+        CONFcouple *readFromFile(const char *fileName);
 
+};
 #endif

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreJson/src/ADM_json.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreJson/src/ADM_json.cpp	2011-04-02 19:30:13 UTC (rev 7102)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreJson/src/ADM_json.cpp	2011-04-03 07:24:55 UTC (rev 7103)
@@ -11,9 +11,14 @@
  *   (at your option) any later version.                                   *
  *                                                                         *
  ***************************************************************************/
+#include "ADM_cpp.h"
 #include "ADM_default.h"
+
 #include "ADM_coreJson.h"
+extern "C"
+{
 #include "libjson.h"
+}
 #define COOKIE ((JSONNODE *)cookie)
 /**
 
@@ -125,10 +130,11 @@
     fclose(f);
     return true;
 }
+//****************************************************************
 /**
 
 */
-bool admJson::scan( void *xnode,string name)
+bool admJsonToCouple::scan( void *xnode,string name)
 {
     JSONNODE *node=(JSONNODE *)xnode;
    if (!node){
@@ -174,7 +180,7 @@
     \brief construct a list of key/value from a json file
 */
 
-CONFcouple *admJson::readFromFile(const char *file)
+CONFcouple *admJsonToCouple::readFromFile(const char *file)
 {
         FILE *f=fopen(file,"rt");
         if(!f)



From mean at mail.berlios.de  Sun Apr  3 09:24:56 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Sun,  3 Apr 2011 09:24:56 +0200
Subject: [Avidemux-svn-commit] r7104 -
	branches/avidemux_2.6_branch_mean/cmake
Message-ID: <20110403072456.B1FB0480C79@sheep.berlios.de>

Author: mean
Date: 2011-04-03 09:24:56 +0200 (Sun, 03 Apr 2011)
New Revision: 7104

Modified:
   branches/avidemux_2.6_branch_mean/cmake/admSerialization.py
Log:
[build/admSerialization] Tweak decleration of template structure to avoid mangling issues

Modified: branches/avidemux_2.6_branch_mean/cmake/admSerialization.py
===================================================================
--- branches/avidemux_2.6_branch_mean/cmake/admSerialization.py	2011-04-03 07:24:55 UTC (rev 7103)
+++ branches/avidemux_2.6_branch_mean/cmake/admSerialization.py	2011-04-03 07:24:56 UTC (rev 7104)
@@ -86,7 +86,7 @@
     #outputDesc("#include \"ADM_default.h\"")
     #outputDesc("#include \"ADM_paramList.h\"")
     #outputDesc("#include \""+str(headerFileName)+"\"")
-    outputDesc("const ADM_paramList "+str(structName)+"_param[]={")
+    outputDesc("extern const ADM_paramList "+str(structName)+"_param[]={")
 
 def writeDescFooter():
     outputDesc("{NULL,0,NULL}")
@@ -100,15 +100,15 @@
     #outputJson("#include \"ADM_encoderConf.h\"")
     outputJson("#include \"ADM_coreJson/include/ADM_coreJson.h\"")
     outputJson("#include \""+str(headerFileName)+"\"")
-    outputJson("extern const ADM_paramList "+str(structName)+"_param[];")
+    #outputJson("extern const ADM_paramList "+str(structName)+"_param[];")
     outputJson("bool  "+str(structName)+"_jserialize(const char *file, const "+str(structName)+" *key){")
     outputJson("admJson json;")
 
 def writeJsonFooter():
     outputJson("return json.dumpToFile(file);")
     outputJson("};")
-    outputJson("bool  "+str(structName)+"_jdeserialize(const char *file, ADM_paramList *tmpl,"+str(structName)+" *key){")
-    outputJson("admJson json;")
+    outputJson("bool  "+str(structName)+"_jdeserialize(const char *file, const ADM_paramList *tmpl,"+str(structName)+" *key){")
+    outputJson("admJsonToCouple json;")
     outputJson("CONFcouple *c=json.readFromFile(file);")
     outputJson("if(!c) {ADM_error(\"Cannot read json file\");return false;}")
     outputJson("bool r= ADM_paramLoadPartial(c,tmpl,key);")



From mean at mail.berlios.de  Sun Apr  3 09:24:57 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Sun,  3 Apr 2011 09:24:57 +0200
Subject: [Avidemux-svn-commit] r7105 - in
	branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264:
	. qt4
Message-ID: <20110403072457.D8E90480C79@sheep.berlios.de>

Author: mean
Date: 2011-04-03 09:24:57 +0200 (Sun, 03 Apr 2011)
New Revision: 7105

Modified:
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/ADM_x264Plugin.cpp
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/qt4/Q_x264.cpp
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/qt4/Q_x264.h
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/x264_encoder_desc.cpp
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/x264_encoder_json.cpp
Log:
[x264/qt4] Update to begin hooking presets

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/ADM_x264Plugin.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/ADM_x264Plugin.cpp	2011-04-03 07:24:56 UTC (rev 7104)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/ADM_x264Plugin.cpp	2011-04-03 07:24:57 UTC (rev 7105)
@@ -18,7 +18,10 @@
 #include "ADM_default.h"
 #include "ADM_x264.h"
 #include "ADM_coreVideoEncoderInternal.h"
+extern "C"
+{
 #include "x264_encoder_desc.cpp"
+}
 extern bool         x264Configure(void);
 extern x264_encoder x264Settings;
 ADM_DECLARE_VIDEO_ENCODER_PREAMBLE(x264Encoder);

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/qt4/Q_x264.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/qt4/Q_x264.cpp	2011-04-03 07:24:56 UTC (rev 7104)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/qt4/Q_x264.cpp	2011-04-03 07:24:57 UTC (rev 7105)
@@ -12,10 +12,16 @@
 #include "ADM_encoderConf.h"
 #include "../x264_encoder.h"
 #include "Q_x264.h"
+#include "ADM_paramList.h"
+#include "DIA_coreToolkit.h"
 
 static x264_encoder myCopy; // ugly...
 extern bool  x264_encoder_jserialize(const char *file, const x264_encoder *key);
-
+extern bool  x264_encoder_jdeserialize(const char *file, const ADM_paramList *tmpl,x264_encoder *key);
+extern "C" 
+{
+extern const ADM_paramList x264_encoder_param[];
+}
 /**
     \fn x264_ui
     \brief hook to enter UI specific dialog
@@ -52,6 +58,11 @@
         lastVideoSize = ENCODING(finalsize);
 
         ui.tabWidget->setCurrentIndex(0);
+        connect(ui.deleteButton, SIGNAL(pressed()), this, SLOT(deleteButton_pressed()));
+        connect(ui.saveAsButton, SIGNAL(pressed()), this, SLOT(saveAsButton_pressed()));
+        connect(ui.configurationComboBox, SIGNAL(currentIndexChanged(int)), this, SLOT(configurationComboBox_currentIndexChanged(int)));
+
+
         upload();
 
         
@@ -289,4 +300,103 @@
 }
 #endif
 
+/**
 
+*/
+
+void x264Dialog::configurationComboBox_currentIndexChanged(int index)
+{
+#if 0
+	bool origDisableGenericSlots = disableGenericSlots;
+
+	disableGenericSlots = true;
+
+	if (index == 0)		// default
+	{
+		ui.deleteButton->setEnabled(false);
+
+		x264Options defaultOptions;
+		vidEncOptions *defaultEncodeOptions = defaultOptions.getEncodeOptions();
+
+		loadSettings(defaultEncodeOptions, &defaultOptions);
+
+		delete defaultEncodeOptions;
+	}
+	else if (index == 1)	// custom
+		ui.deleteButton->setEnabled(false);
+	else
+	{
+		PluginConfigType configType = (PluginConfigType)ui.configurationComboBox->itemData(index).toInt();
+
+		ui.deleteButton->setEnabled(configType == PLUGIN_CONFIG_USER);
+
+		x264Options options;
+		vidEncOptions *encodeOptions;
+
+		options.setPresetConfiguration(ui.configurationComboBox->itemText(index).toUtf8().constData(), configType);
+
+		if (options.loadPresetConfiguration())
+		{
+			encodeOptions = options.getEncodeOptions();
+
+			loadSettings(encodeOptions, &options);
+
+			delete encodeOptions;
+		}
+		else
+			ui.configurationComboBox->setCurrentIndex(0);
+	}
+
+	disableGenericSlots = origDisableGenericSlots;
+#else
+    GUI_Error_HIG("No","This function is not implemented");
+#endif
+
+}
+/**
+
+*/
+
+void x264Dialog::saveAsButton_pressed(void)
+{
+    const char *out="/tmp/foo.x264";
+    download();
+    if(false==x264_encoder_jserialize(out,&myCopy))
+    {
+        GUI_Error_HIG("Error","Cannot save preset");
+        ADM_error("Cannot write to %s\n",out);
+    }
+}
+/**
+
+*/
+void x264Dialog::deleteButton_pressed(void)
+{
+#if 0
+	x264Options options;
+	char *configDir = options.getUserConfigDirectory();
+	QString configFileName = QFileInfo(QString(configDir), ui.configurationComboBox->currentText() + ".xml").filePath();
+	QFile configFile(configFileName);
+
+	delete [] configDir;
+
+	if (GUI_Question(tr("Are you sure you wish to delete the selected configuration?").toUtf8().constData()) && configFile.exists())
+	{
+		disableGenericSlots = true;
+		configFile.remove();
+		ui.configurationComboBox->removeItem(ui.configurationComboBox->currentIndex());
+		disableGenericSlots = false;
+		ui.configurationComboBox->setCurrentIndex(0);	// default
+	}
+#else
+    const char *out="/tmp/foo.x264";
+     if(false==x264_encoder_jdeserialize(out,x264_encoder_param,&myCopy))
+    {
+        GUI_Error_HIG("Error","Cannot load preset");
+        ADM_error("Cannot read from %s\n",out);
+    }else       
+        upload();
+#endif
+}
+
+

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/qt4/Q_x264.h
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/qt4/Q_x264.h	2011-04-03 07:24:56 UTC (rev 7104)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/qt4/Q_x264.h	2011-04-03 07:24:57 UTC (rev 7105)
@@ -34,6 +34,12 @@
         void quantiserSlider_valueChanged(int value);
         void quantiserSpinBox_valueChanged(int value);
         void targetRateControlSpinBox_valueChanged(int value);
+	
+        void configurationComboBox_currentIndexChanged(int index);
+        void saveAsButton_pressed(void);
+        void deleteButton_pressed(void);
+
+
 #if 0
         void maxCrfSlider_valueChanged(int value);
         void maxCrfSpinBox_valueChanged(int value);

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/x264_encoder_desc.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/x264_encoder_desc.cpp	2011-04-03 07:24:56 UTC (rev 7104)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/x264_encoder_desc.cpp	2011-04-03 07:24:57 UTC (rev 7105)
@@ -1,5 +1,5 @@
 // automatically generated by admSerialization.py, do not edit!
-const ADM_paramList x264_encoder_param[]={
+extern const ADM_paramList x264_encoder_param[]={
  {"general.params",offsetof(x264_encoder,general.params),"COMPRES_PARAMS",ADM_param_video_encode},
  {"general.threads",offsetof(x264_encoder,general.threads),"uint32_t",ADM_param_uint32_t},
  {"level",offsetof(x264_encoder,level),"uint32_t",ADM_param_uint32_t},

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/x264_encoder_json.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/x264_encoder_json.cpp	2011-04-03 07:24:56 UTC (rev 7104)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/x264_encoder_json.cpp	2011-04-03 07:24:57 UTC (rev 7105)
@@ -3,7 +3,6 @@
 #include "ADM_paramList.h"
 #include "ADM_coreJson/include/ADM_coreJson.h"
 #include "x264_encoder.h"
-extern const ADM_paramList x264_encoder_param[];
 bool  x264_encoder_jserialize(const char *file, const x264_encoder *key){
 admJson json;
 json.addNode("general");
@@ -67,8 +66,8 @@
 json.endNode();
 return json.dumpToFile(file);
 };
-bool  x264_encoder_jdeserialize(const char *file, ADM_paramList *tmpl,x264_encoder *key){
-admJson json;
+bool  x264_encoder_jdeserialize(const char *file, const ADM_paramList *tmpl,x264_encoder *key){
+admJsonToCouple json;
 CONFcouple *c=json.readFromFile(file);
 if(!c) {ADM_error("Cannot read json file");return false;}
 bool r= ADM_paramLoadPartial(c,tmpl,key);



From mean at mail.berlios.de  Sun Apr  3 09:24:59 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Sun,  3 Apr 2011 09:24:59 +0200
Subject: [Avidemux-svn-commit] r7106 -
	branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264
Message-ID: <20110403072459.14B2C480C79@sheep.berlios.de>

Author: mean
Date: 2011-04-03 09:24:58 +0200 (Sun, 03 Apr 2011)
New Revision: 7106

Modified:
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/CMakeLists.txt
Log:
[x264/qt4] Fix win32 link (?)

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/CMakeLists.txt
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/CMakeLists.txt	2011-04-03 07:24:57 UTC (rev 7105)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/CMakeLists.txt	2011-04-03 07:24:58 UTC (rev 7106)
@@ -20,7 +20,7 @@
     SET(ADM_ve_x264_QT4_Headers qt4/Q_x264.h)
     SET(ADM_ve_x264_QT4_UI      qt4/x264ConfigDialog)
     ADD_VIDEO_ENCODER_QT4(ADM_ve_x264_qt4   ${ADM_ve_x264_QT4_SRCS} ${ADM_ve_x264_QT4_Headers} ${ADM_ve_x264_QT4_UI} ${x264_SRCS})
-    TARGET_LINK_LIBRARIES(ADM_ve_x264_qt4 x264 ADM_coreJSON6)
+    TARGET_LINK_LIBRARIES(ADM_ve_x264_qt4 x264 ADM_coreJSON6 ADM_coreUtils6)
     INIT_VIDEO_ENCODER(ADM_ve_x264_qt4)
     INSTALL_VIDEO_ENCODER(ADM_ve_x264_qt4)
   endif(DO_QT4)



From mean at mail.berlios.de  Sun Apr  3 09:59:28 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Sun,  3 Apr 2011 09:59:28 +0200
Subject: [Avidemux-svn-commit] r7107 - in branches/avidemux_2.6_branch_mean:
	avidemux_core/ADM_coreJson/src
	avidemux_plugins/ADM_videoEncoder/x264
Message-ID: <20110403075928.97078480C79@sheep.berlios.de>

Author: mean
Date: 2011-04-03 09:59:28 +0200 (Sun, 03 Apr 2011)
New Revision: 7107

Modified:
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreJson/src/CMakeLists.txt
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/CMakeLists.txt
Log:
[x264/qt4] win32 link fix, try2

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreJson/src/CMakeLists.txt
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreJson/src/CMakeLists.txt	2011-04-03 07:24:58 UTC (rev 7106)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreJson/src/CMakeLists.txt	2011-04-03 07:59:28 UTC (rev 7107)
@@ -4,6 +4,6 @@
 )
 include_directories(../include Source)
 ADM_ADD_SHARED_LIBRARY(ADM_coreJSON6 ${ADM_coreJSON_SRCS})
-TARGET_LINK_LIBRARIES(ADM_coreJSON6 ADM_json ADM_core6)
+TARGET_LINK_LIBRARIES(ADM_coreJSON6 ADM_json ADM_core6 ADM_coreUtils6)
 
 ADM_INSTALL_LIB(ADM_coreJSON6)

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/CMakeLists.txt
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/CMakeLists.txt	2011-04-03 07:24:58 UTC (rev 7106)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/CMakeLists.txt	2011-04-03 07:59:28 UTC (rev 7107)
@@ -20,7 +20,7 @@
     SET(ADM_ve_x264_QT4_Headers qt4/Q_x264.h)
     SET(ADM_ve_x264_QT4_UI      qt4/x264ConfigDialog)
     ADD_VIDEO_ENCODER_QT4(ADM_ve_x264_qt4   ${ADM_ve_x264_QT4_SRCS} ${ADM_ve_x264_QT4_Headers} ${ADM_ve_x264_QT4_UI} ${x264_SRCS})
-    TARGET_LINK_LIBRARIES(ADM_ve_x264_qt4 x264 ADM_coreJSON6 ADM_coreUtils6)
+    TARGET_LINK_LIBRARIES(ADM_ve_x264_qt4 x264 ADM_coreJSON6 )
     INIT_VIDEO_ENCODER(ADM_ve_x264_qt4)
     INSTALL_VIDEO_ENCODER(ADM_ve_x264_qt4)
   endif(DO_QT4)



From mean at mail.berlios.de  Tue Apr  5 07:49:42 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Tue,  5 Apr 2011 07:49:42 +0200
Subject: [Avidemux-svn-commit] r7108 - in
	branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreVideoEncoder:
	include src
Message-ID: <20110405054942.65DE2480CFD@sheep.berlios.de>

Author: mean
Date: 2011-04-05 07:49:41 +0200 (Tue, 05 Apr 2011)
New Revision: 7108

Modified:
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreVideoEncoder/include/ADM_coreVideoEncoder.h
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreVideoEncoder/src/ADM_coreVideoEncoder.cpp
Log:
[plugin] Add support for per plugin default settings/custom settings (incomplete)

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreVideoEncoder/include/ADM_coreVideoEncoder.h
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreVideoEncoder/include/ADM_coreVideoEncoder.h	2011-04-03 07:59:28 UTC (rev 7107)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreVideoEncoder/include/ADM_coreVideoEncoder.h	2011-04-05 05:49:41 UTC (rev 7108)
@@ -22,6 +22,7 @@
 #include "ADM_bitstream.h"
 #include "ADM_frameType.h"
 #include <vector>
+#include <string>
 using std::vector;
 #include "stddef.h"
 /**
@@ -73,5 +74,8 @@
                uint64_t    lastDts; //
 };
 bool usSecondsToFrac(uint64_t useconds, int *n,int *d);
+bool ADM_pluginGetPath(const std::string pluginName,int pluginVersion,std::string &rootPath);
+bool ADM_pluginInstallSystem(const std::string pluginName,int pluginVersion);
+bool ADM_listFile(const std::string path,const std::string extension,vector <std::string > & list);
 #endif
 

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreVideoEncoder/src/ADM_coreVideoEncoder.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreVideoEncoder/src/ADM_coreVideoEncoder.cpp	2011-04-03 07:59:28 UTC (rev 7107)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreVideoEncoder/src/ADM_coreVideoEncoder.cpp	2011-04-05 05:49:41 UTC (rev 7108)
@@ -19,6 +19,7 @@
 #include "ADM_default.h"
 #include "ADM_coreVideoEncoder.h"
 #include "ADM_vidMisc.h"
+#include <sstream>
 extern "C" 
 {
 #include "libavcodec/avcodec.h"
@@ -129,4 +130,93 @@
     return false;
 
 }
+/**
+
+*/
+static bool ADM_pluginSystemPath(const std::string pluginName,int pluginVersion,std::string &rootPath)
+{
+    char *sy=ADM_getInstallRelativePath("ADM_plugins6","","");
+    std::string path=std::string(sy);
+    delete [] sy;
+
+    std::string slash=std::string("/");
+    std::string version;
+    std::stringstream out;
+    out << pluginVersion;
+    version=out.str();
+
+    path=path+slash+std::string("pluginSettings");
+    ADM_mkdir(path.c_str());
+    path=path+slash+std::string(pluginName);
+    ADM_mkdir(path.c_str());
+    path=path+slash+version;
+    ADM_mkdir(path.c_str());
+    rootPath=path;
+    ADM_info("System Plugin preset path : %s\n",rootPath.c_str());
+    return true;
+}
+/**
+    \fn ADM_pluginGetPath
+    \brief returns the user plugin path, containing the presets for that plugin
+*/
+bool ADM_pluginGetPath(const std::string pluginName,int pluginVersion,std::string &rootPath)
+{
+    std::string path=std::string(ADM_getBaseDir());
+    std::string slash=std::string("/");
+    std::string version;
+    std::stringstream out;
+    out << pluginVersion;
+    version=out.str();
+    path=path+slash+std::string("pluginSettings");
+    ADM_mkdir(path.c_str());
+    path=path+slash+std::string(pluginName);
+    ADM_mkdir(path.c_str());
+    path=path+slash+version;
+    ADM_mkdir(path.c_str());
+    rootPath=path;
+    ADM_info("Plugin preset path : %s\n",rootPath.c_str());
+    return true;
+}
+/**
+    \fn ADM_pluginInstallSystem
+    \brief Copy if needed the system presets to the user presets list
+*/
+bool ADM_pluginInstallSystem(const std::string pluginName,int pluginVersion)
+{
+    std::string sysPath,userPath;
+    ADM_pluginSystemPath(pluginName,pluginVersion,sysPath);
+    ADM_pluginGetPath(pluginName,pluginVersion,userPath);
+    return true;
+}
+/**
+    \fn ADM_pluginGetPath
+    \brief returns the user plugin path, containing the presets for that plugin
+*/
+bool ADM_listFile(const std::string path,const std::string extension,vector <std::string > & listOut)
+{
+#define NB 20
+    char *list[NB];
+    uint32_t nb=0;
+
+    listOut.clear();
+    if(false==buildDirectoryContent(&nb,path.c_str(),list,NB,extension.c_str()))
+    {
+        ADM_info("No preset found\n");
+        return true;
+    }
+    for(int i=0;i<nb;i++)
+    {
+        std::string s=std::string(list[i]);
+        size_t lastSlash=s.find_last_of('/');
+        s.replace(0,lastSlash+1,std::string(""));
+        size_t lastDot=s.find_last_of('.');
+        s.replace(lastDot,s.size(),std::string(""));
+        // Remove extension
+        listOut.push_back(s);
+    }
+    for(int i=0;i<nb;i++)
+        ADM_dealloc(list[i]);
+    return true;
+}
+
 // EOF



From mean at mail.berlios.de  Tue Apr  5 07:49:43 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Tue,  5 Apr 2011 07:49:43 +0200
Subject: [Avidemux-svn-commit] r7109 -
	branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/qt4
Message-ID: <20110405054943.8489E480CFD@sheep.berlios.de>

Author: mean
Date: 2011-04-05 07:49:43 +0200 (Tue, 05 Apr 2011)
New Revision: 7109

Modified:
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/qt4/Q_x264.cpp
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/qt4/Q_x264.h
Log:
[x264] Add support for system/user settings (incomplete)

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/qt4/Q_x264.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/qt4/Q_x264.cpp	2011-04-05 05:49:41 UTC (rev 7108)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/qt4/Q_x264.cpp	2011-04-05 05:49:43 UTC (rev 7109)
@@ -7,6 +7,9 @@
  ***************************************************************************/
 #include <math.h>
 #include <QtGui/QFileDialog>
+#include <QtGui/QDialog>
+#include <QtGui/QTextEdit>
+using std::vector;
 #include "ADM_default.h"
 #include "ADM_coreVideoEncoder.h"
 #include "ADM_encoderConf.h"
@@ -15,6 +18,8 @@
 #include "ADM_paramList.h"
 #include "DIA_coreToolkit.h"
 
+static int pluginVersion=1;
+
 static x264_encoder myCopy; // ugly...
 extern bool  x264_encoder_jserialize(const char *file, const x264_encoder *key);
 extern bool  x264_encoder_jdeserialize(const char *file, const ADM_paramList *tmpl,x264_encoder *key);
@@ -64,12 +69,30 @@
 
 
         upload();
-
-        
-        
+        ADM_pluginInstallSystem( std::string("x264"),pluginVersion);
+        updatePresetList();
 }
 /**
+    \fn updatePresetList
+*/
+bool x264Dialog::updatePresetList(void)
+{
+    QComboBox *combo=ui.configurationComboBox;
+    std::string rootPath;
+    vector <std::string >  list;
+    ADM_pluginGetPath("x264",pluginVersion,rootPath);
+    ADM_listFile(rootPath,".json",list);
+    int l=list.size();
+    for( int i=0;i<l;i++)
+    {
+        combo->addItem(list[i].c_str());
+    }
+    combo->addItem(QString("Custom"));
+    return true;
+}
 
+/**
+
 */
 #define MK_CHECKBOX(x,y) ui.x->setChecked(myCopy.y)
 #define MK_UINT(x,y)  ui.x->setValue(myCopy.y)
@@ -356,16 +379,56 @@
 /**
 
 */
+static char *getProfileName(void)
+{
+  QDialog dialog;
+  dialog.setWindowTitle(QString::fromUtf8("Save Profile"));
+  QDialogButtonBox *buttonBox = new QDialogButtonBox();  
+  QVBoxLayout *vboxLayout = new QVBoxLayout();
+  buttonBox->setStandardButtons(QDialogButtonBox::Ok | QDialogButtonBox::Cancel);
 
+  QObject::connect(buttonBox, SIGNAL(accepted()), &dialog, SLOT(accept()));
+  QObject::connect(buttonBox, SIGNAL(rejected()), &dialog, SLOT(reject()));
+
+  QTextEdit *text=new QTextEdit;
+  text->setAcceptRichText(false);
+  
+  text->setMinimumHeight(32);
+  text->setMaximumHeight(32);
+
+  text->setText("my profile");
+  text->selectAll();
+
+  vboxLayout->addWidget(text);
+  vboxLayout->addWidget(buttonBox);
+
+  dialog.setLayout(vboxLayout);
+
+  if(dialog.exec()!=QDialog::Accepted)
+  {
+        ADM_info("Canceled");
+        return NULL;
+  }
+  QString fileName=text->toPlainText();
+  fileName=fileName+QString(".json");
+  const char *out=fileName.toUtf8().constData();
+  return ADM_strdup(out);
+}
 void x264Dialog::saveAsButton_pressed(void)
 {
-    const char *out="/tmp/foo.x264";
-    download();
-    if(false==x264_encoder_jserialize(out,&myCopy))
-    {
+  // 1-ask name
+  char *out=getProfileName();
+  if(!out) return;
+  ADM_info("Using %s\n",out);
+  download();
+  std::string fullpath=std::string("/tmp/")+out+std::string(".json");
+  ADM_dealloc(out);
+  if(false==x264_encoder_jserialize(fullpath.c_str(),&myCopy))
+  {
         GUI_Error_HIG("Error","Cannot save preset");
         ADM_error("Cannot write to %s\n",out);
-    }
+  }
+  
 }
 /**
 

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/qt4/Q_x264.h
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/qt4/Q_x264.h	2011-04-05 05:49:41 UTC (rev 7108)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/qt4/Q_x264.h	2011-04-05 05:49:43 UTC (rev 7109)
@@ -39,7 +39,9 @@
         void saveAsButton_pressed(void);
         void deleteButton_pressed(void);
 
+        bool updatePresetList(void);
 
+
 #if 0
         void maxCrfSlider_valueChanged(int value);
         void maxCrfSpinBox_valueChanged(int value);



From mean at mail.berlios.de  Tue Apr  5 07:49:44 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Tue,  5 Apr 2011 07:49:44 +0200
Subject: [Avidemux-svn-commit] r7110 - in
	branches/avidemux_2.6_branch_mean/avidemux_core/ADM_core:
	include src
Message-ID: <20110405054944.D9195480CFD@sheep.berlios.de>

Author: mean
Date: 2011-04-05 07:49:44 +0200 (Tue, 05 Apr 2011)
New Revision: 7110

Modified:
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_core/include/ADM_files.h
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_core/src/ADM_fileio.cpp
Log:
[core/plugin] Add getUserPluginSettings / getSystemPluginSettings helper functions

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_core/include/ADM_files.h
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_core/include/ADM_files.h	2011-04-05 05:49:43 UTC (rev 7109)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_core/include/ADM_files.h	2011-04-05 05:49:44 UTC (rev 7110)
@@ -24,13 +24,16 @@
 char *ADM_getCustomDir(void);
 // Returns dir to ~/.avidemux/autoScript, no need to free it
 char *ADM_getAutoDir(void);
-
+// Returns dir to ~/.avidemux/autoScript, no need to free it
+const char *ADM_getUserPluginSettingsDir(void);
+const char *ADM_getSystemPluginSettingsDir(void);
+//
+uint8_t ADM_copyFile(const char *source, const char *target);
 #ifdef __cplusplus
 /* Returns the full path relative to install dir i.e. /usr +base1/base2, needs to be deleted [] by caller */
 char *ADM_getInstallRelativePath(const char *base1, const char *base2=NULL,const char *base3=NULL);
 /* Returns the full path relative to .avidemux dir i.e. /home/fx/... +base1/base2 needs to be deleted []*/
 char *ADM_getHomeRelativePath(const char *base1, const char *base2=NULL,const char *base3=NULL);
-char *ADM_getPluginPath(void);
 #endif
 uint8_t buildDirectoryContent(uint32_t *outnb,const char *base, char *jobName[],int maxElems,const char *ext);
 

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_core/src/ADM_fileio.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_core/src/ADM_fileio.cpp	2011-04-05 05:49:43 UTC (rev 7109)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_core/src/ADM_fileio.cpp	2011-04-05 05:49:44 UTC (rev 7110)
@@ -57,6 +57,8 @@
 static char *ADM_jobdir = NULL;
 static char *ADM_customdir = NULL;
 static char *ADM_autodir = NULL;
+static char *ADM_systemPluginSettings=NULL;
+static char *ADM_userPluginSettings=NULL;
 static int baseDirDone = 0;
 
 #undef fread
@@ -226,7 +228,26 @@
     ADM_autodir = ADM_getInstallRelativePath("lib", "ADM_plugins6", "autoScripts");
 	return ADM_autodir;
 }
+/**
+    \fn ADM_getPluginSettingsDir
+    \brief Get the folder containing the plugin settings (presets etc..)
+*/
+const char *ADM_getSystemPluginSettingsDir(void)
+{
+    if(ADM_systemPluginSettings) return ADM_systemPluginSettings;
+    ADM_systemPluginSettings=ADM_getInstallRelativePath("lib", "ADM_plugins6", "pluginSettings");
+    return ADM_systemPluginSettings;
+}
+/**
 
+*/
+const char *ADM_getUserPluginSettingsDir(void)
+{
+    if(ADM_userPluginSettings) return ADM_userPluginSettings;
+    ADM_userPluginSettings=ADM_getHomeRelativePath("pluginSettings");
+    return ADM_userPluginSettings;
+}
+
 /*
       Get the  directory where jobs are stored
 ******************************************************/
@@ -337,11 +358,6 @@
 	return ADM_getRelativePath(ADM_INSTALL_DIR, base1, base2, base3);
 #endif
 }
-
-char *ADM_getPluginPath(void)
-{
-	return ADM_getInstallRelativePath("lib", "ADM_plugins", "videoEncoder");
-}
 /*
       Get the root directory for .avidemux stuff
 ******************************************************/
@@ -714,3 +730,33 @@
 	*(full + l) = 0;
 	*root = full;
 }
+/**
+    \fn ADM_copyFile
+*/
+uint8_t ADM_copyFile(const char *source, const char *target)
+{
+    FILE *fin=fopen(source,"rb");
+    if(!fin)
+    {
+        ADM_error("Cannot open %s for reading\n",source);
+        return false;
+    }
+    FILE *fout=fopen(target,"wb");
+    if(!fout)
+    {
+        fclose(fin);
+        ADM_error("Cannot open %s for writting\n",target);
+        return false;
+    }
+    uint8_t buffer[1024];
+    while(1)
+    {
+        int r=fread(buffer,1024,1,fin);
+        fwrite(buffer,r,1,fout);
+        if(r!=1024) break;
+    }
+
+    fclose(fin);
+    fclose(fout);
+    return true;
+}
\ No newline at end of file



From mean at mail.berlios.de  Tue Apr  5 07:49:46 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Tue,  5 Apr 2011 07:49:46 +0200
Subject: [Avidemux-svn-commit] r7111 - in
	branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264:
	. qt4
Message-ID: <20110405054946.21E4E480CFD@sheep.berlios.de>

Author: mean
Date: 2011-04-05 07:49:45 +0200 (Tue, 05 Apr 2011)
New Revision: 7111

Modified:
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/CMakeLists.txt
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/qt4/Q_x264.cpp
Log:
[x264] Begin to add preset + glue to link it to core plugin settings

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/CMakeLists.txt
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/CMakeLists.txt	2011-04-05 05:49:44 UTC (rev 7110)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/CMakeLists.txt	2011-04-05 05:49:45 UTC (rev 7111)
@@ -35,3 +35,11 @@
 ELSE(X264_FOUND)
   MESSAGE(STATUS "x264 disabled.")
 ENDIF(X264_FOUND)
+
+if(DO_GTK or DO_CLI or DO_QT4)
+SET(PRESET_DIR "${AVIDEMUX_LIB_DIR}/ADM_plugins6/pluginSettings/x264/1/")
+
+FILE(GLOB json_files ${CMAKE_CURRENT_SOURCE_DIR}/preset/*.json)
+install(FILES ${json_files} DESTINATION "${PRESET_DIR}")
+endif(DO_GTK or DO_CLI or DO_QT4)
+

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/qt4/Q_x264.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/qt4/Q_x264.cpp	2011-04-05 05:49:44 UTC (rev 7110)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/qt4/Q_x264.cpp	2011-04-05 05:49:45 UTC (rev 7111)
@@ -69,8 +69,10 @@
 
 
         upload();
-        ADM_pluginInstallSystem( std::string("x264"),pluginVersion);
+        ADM_pluginInstallSystem( std::string("x264"),std::string(".json"),pluginVersion);
         updatePresetList();
+        int n=ui.configurationComboBox->count();
+        ui.configurationComboBox->setCurrentIndex(n-1);
 }
 /**
     \fn updatePresetList
@@ -83,6 +85,7 @@
     ADM_pluginGetPath("x264",pluginVersion,rootPath);
     ADM_listFile(rootPath,".json",list);
     int l=list.size();
+    combo->clear();
     for( int i=0;i<l;i++)
     {
         combo->addItem(list[i].c_str());
@@ -324,11 +327,32 @@
 #endif
 
 /**
-
+    \fn configurationComboBox_currentIndexChanged
 */
 
 void x264Dialog::configurationComboBox_currentIndexChanged(int index)
 {
+    int n=ui.configurationComboBox->currentIndex();
+    int m=ui.configurationComboBox->count();
+    if(n==m-1) // custom
+    {
+        return;
+    }
+    // get text
+    std::string rootPath;
+    ADM_pluginGetPath("x264",pluginVersion,rootPath);
+    QString text=QString("/")+ui.configurationComboBox->itemText(n);
+    text=QString(rootPath.c_str())+text+QString(".json");
+    const char *t=text.toUtf8().constData();
+    ADM_info("Loading preset %s\n",t);
+    if(false==x264_encoder_jdeserialize(t,x264_encoder_param,&myCopy))
+    {
+        GUI_Error_HIG("Error","Cannot load preset");
+        ADM_error("Cannot read from %s\n",t);
+    }else       
+    {
+        upload();
+    }
 #if 0
 	bool origDisableGenericSlots = disableGenericSlots;
 
@@ -371,10 +395,7 @@
 	}
 
 	disableGenericSlots = origDisableGenericSlots;
-#else
-    GUI_Error_HIG("No","This function is not implemented");
 #endif
-
 }
 /**
 
@@ -410,10 +431,13 @@
         return NULL;
   }
   QString fileName=text->toPlainText();
-  fileName=fileName+QString(".json");
   const char *out=fileName.toUtf8().constData();
   return ADM_strdup(out);
 }
+/**
+        \fn saveAsButton_pressed
+        \brief Save the current settings as preset
+*/
 void x264Dialog::saveAsButton_pressed(void)
 {
   // 1-ask name
@@ -421,14 +445,16 @@
   if(!out) return;
   ADM_info("Using %s\n",out);
   download();
-  std::string fullpath=std::string("/tmp/")+out+std::string(".json");
+  std::string rootPath;
+  ADM_pluginGetPath("x264",pluginVersion,rootPath);
+  std::string fullpath=rootPath+std::string("/")+out+std::string(".json");
   ADM_dealloc(out);
   if(false==x264_encoder_jserialize(fullpath.c_str(),&myCopy))
   {
         GUI_Error_HIG("Error","Cannot save preset");
         ADM_error("Cannot write to %s\n",out);
   }
-  
+  updatePresetList();
 }
 /**
 
@@ -452,6 +478,7 @@
 		ui.configurationComboBox->setCurrentIndex(0);	// default
 	}
 #else
+/*
     const char *out="/tmp/foo.x264";
      if(false==x264_encoder_jdeserialize(out,x264_encoder_param,&myCopy))
     {
@@ -459,6 +486,7 @@
         ADM_error("Cannot read from %s\n",out);
     }else       
         upload();
+*/
 #endif
 }
 



From mean at mail.berlios.de  Tue Apr  5 07:49:47 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Tue,  5 Apr 2011 07:49:47 +0200
Subject: [Avidemux-svn-commit] r7112 - in
	branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264:
	. preset
Message-ID: <20110405054947.5031B480CFD@sheep.berlios.de>

Author: mean
Date: 2011-04-05 07:49:47 +0200 (Tue, 05 Apr 2011)
New Revision: 7112

Added:
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/preset/
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/preset/PSP.json
Log:
[x264] Dummy preset

Added: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/preset/PSP.json
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/preset/PSP.json	                        (rev 0)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/preset/PSP.json	2011-04-05 05:49:47 UTC (rev 7112)
@@ -0,0 +1,60 @@
+{
+	"general" : {
+		"threads" : 99
+	},
+	"level" : 30,
+	"vui" : {
+		"sar_height" : 1,
+		"sar_width" : 1
+	},
+	"MaxRefFrames" : 2,
+	"MinIdr" : 100,
+	"MaxIdr" : 500,
+	"MaxBFrame" : 2,
+	"i_bframe_adaptative" : 0,
+	"i_bframe_bias" : 0,
+	"i_bframe_pyramid" : 0,
+	"b_deblocking_filter" : false,
+	"i_deblocking_filter_alphac0" : 0,
+	"i_deblocking_filter_beta" : 0,
+	"cabac" : true,
+	"interlaced" : false,
+	"analyze" : {
+		"b_8x8" : true,
+		"b_i4x4" : true,
+		"b_i8x8" : false,
+		"b_p8x8" : false,
+		"b_p16x16" : true,
+		"b_b16x16" : false,
+		"weighted_pred" : 0,
+		"weighted_bipred" : false,
+		"direct_mv_pred" : 0,
+		"chroma_offset" : 0,
+		"me_method" : 0,
+		"subpel_refine" : 7,
+		"chroma_me" : false,
+		"mixed_references" : false,
+		"trellis" : 1,
+		"fast_pskip" : true,
+		"dct_decimate" : false,
+		"noise_reduction" : 0,
+		"psy" : true
+	},
+	"ratecontrol" : {
+		"rc_method" : 0,
+		"qp_constant" : 0,
+		"qp_min" : 0,
+		"qp_max" : 0,
+		"qp_step" : 0,
+		"bitrate" : 0,
+		"vbv_max_bitrate" : 10000,
+		"vbv_buffer_size" : 10000,
+		"vbv_buffer_init" : 8000,
+		"ip_factor" : 0,
+		"pb_factor" : 0,
+		"aq_mode" : 0,
+		"aq_strength" : 0,
+		"mb_tree" : false,
+		"lookahead" : 0
+	}
+}



From mean at mail.berlios.de  Tue Apr  5 07:49:48 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Tue,  5 Apr 2011 07:49:48 +0200
Subject: [Avidemux-svn-commit] r7113 - in branches/avidemux_2.6_branch_mean:
	avidemux_core/ADM_coreVideoEncoder/include
	avidemux_core/ADM_coreVideoEncoder/src
	avidemux_plugins/ADM_videoEncoder/x264/qt4
Message-ID: <20110405054948.A34E8480CFD@sheep.berlios.de>

Author: mean
Date: 2011-04-05 07:49:48 +0200 (Tue, 05 Apr 2011)
New Revision: 7113

Modified:
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreVideoEncoder/include/ADM_coreVideoEncoder.h
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreVideoEncoder/src/ADM_coreVideoEncoder.cpp
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/qt4/Q_x264.cpp
Log:
[core/plugin] Add glue to handle preset at plugin level

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreVideoEncoder/include/ADM_coreVideoEncoder.h
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreVideoEncoder/include/ADM_coreVideoEncoder.h	2011-04-05 05:49:47 UTC (rev 7112)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreVideoEncoder/include/ADM_coreVideoEncoder.h	2011-04-05 05:49:48 UTC (rev 7113)
@@ -75,7 +75,7 @@
 };
 bool usSecondsToFrac(uint64_t useconds, int *n,int *d);
 bool ADM_pluginGetPath(const std::string pluginName,int pluginVersion,std::string &rootPath);
-bool ADM_pluginInstallSystem(const std::string pluginName,int pluginVersion);
+bool ADM_pluginInstallSystem(const std::string pluginName,const std::string ext,int pluginVersion);
 bool ADM_listFile(const std::string path,const std::string extension,vector <std::string > & list);
 #endif
 

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreVideoEncoder/src/ADM_coreVideoEncoder.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreVideoEncoder/src/ADM_coreVideoEncoder.cpp	2011-04-05 05:49:47 UTC (rev 7112)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreVideoEncoder/src/ADM_coreVideoEncoder.cpp	2011-04-05 05:49:48 UTC (rev 7113)
@@ -131,13 +131,12 @@
 
 }
 /**
-
+    \fn ADM_pluginSystemPath
 */
 static bool ADM_pluginSystemPath(const std::string pluginName,int pluginVersion,std::string &rootPath)
 {
-    char *sy=ADM_getInstallRelativePath("ADM_plugins6","","");
-    std::string path=std::string(sy);
-    delete [] sy;
+    
+    std::string path=std::string(ADM_getSystemPluginSettingsDir());
 
     std::string slash=std::string("/");
     std::string version;
@@ -145,7 +144,6 @@
     out << pluginVersion;
     version=out.str();
 
-    path=path+slash+std::string("pluginSettings");
     ADM_mkdir(path.c_str());
     path=path+slash+std::string(pluginName);
     ADM_mkdir(path.c_str());
@@ -161,13 +159,12 @@
 */
 bool ADM_pluginGetPath(const std::string pluginName,int pluginVersion,std::string &rootPath)
 {
-    std::string path=std::string(ADM_getBaseDir());
+    std::string path=std::string(ADM_getUserPluginSettingsDir());
     std::string slash=std::string("/");
     std::string version;
     std::stringstream out;
     out << pluginVersion;
     version=out.str();
-    path=path+slash+std::string("pluginSettings");
     ADM_mkdir(path.c_str());
     path=path+slash+std::string(pluginName);
     ADM_mkdir(path.c_str());
@@ -181,11 +178,35 @@
     \fn ADM_pluginInstallSystem
     \brief Copy if needed the system presets to the user presets list
 */
-bool ADM_pluginInstallSystem(const std::string pluginName,int pluginVersion)
+bool ADM_pluginInstallSystem(const std::string pluginName,const std::string ext,int pluginVersion)
 {
     std::string sysPath,userPath;
     ADM_pluginSystemPath(pluginName,pluginVersion,sysPath);
     ADM_pluginGetPath(pluginName,pluginVersion,userPath);
+#define NB 20
+    char *list[NB];
+    uint32_t nb=0;
+    ADM_info("Looking for file %s in folder %s\n",ext.c_str(),sysPath.c_str());
+    if(false==buildDirectoryContent(&nb,sysPath.c_str(),list,NB,ext.c_str()))
+    {
+        ADM_info("No preset found\n");
+        return true;
+    }
+    for( int i=0;i<nb;i++)
+    {
+        std::string s=std::string(list[i]);
+        size_t lastSlash=s.find_last_of('/');
+        s.replace(0,lastSlash+1,std::string("")); // filename+ext
+        std::string file=s;
+        s=userPath+std::string("/")+s; // 
+        if(!ADM_fileExist(s.c_str()))
+        {
+            ADM_info("%s exists in system folder, but not in user folder, copying..\n",file.c_str());
+            ADM_copyFile(list[i],s.c_str());
+        }
+    }
+    for(int i=0;i<nb;i++)
+        ADM_dealloc(list[i]);
     return true;
 }
 /**

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/qt4/Q_x264.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/qt4/Q_x264.cpp	2011-04-05 05:49:47 UTC (rev 7112)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/qt4/Q_x264.cpp	2011-04-05 05:49:48 UTC (rev 7113)
@@ -353,52 +353,10 @@
     {
         upload();
     }
-#if 0
-	bool origDisableGenericSlots = disableGenericSlots;
-
-	disableGenericSlots = true;
-
-	if (index == 0)		// default
-	{
-		ui.deleteButton->setEnabled(false);
-
-		x264Options defaultOptions;
-		vidEncOptions *defaultEncodeOptions = defaultOptions.getEncodeOptions();
-
-		loadSettings(defaultEncodeOptions, &defaultOptions);
-
-		delete defaultEncodeOptions;
-	}
-	else if (index == 1)	// custom
-		ui.deleteButton->setEnabled(false);
-	else
-	{
-		PluginConfigType configType = (PluginConfigType)ui.configurationComboBox->itemData(index).toInt();
-
-		ui.deleteButton->setEnabled(configType == PLUGIN_CONFIG_USER);
-
-		x264Options options;
-		vidEncOptions *encodeOptions;
-
-		options.setPresetConfiguration(ui.configurationComboBox->itemText(index).toUtf8().constData(), configType);
-
-		if (options.loadPresetConfiguration())
-		{
-			encodeOptions = options.getEncodeOptions();
-
-			loadSettings(encodeOptions, &options);
-
-			delete encodeOptions;
-		}
-		else
-			ui.configurationComboBox->setCurrentIndex(0);
-	}
-
-	disableGenericSlots = origDisableGenericSlots;
-#endif
 }
 /**
-
+    \fn getProfileName  
+    \brief Popup a dialog that asks the user the preset name
 */
 static char *getProfileName(void)
 {



From mean at mail.berlios.de  Wed Apr  6 09:14:40 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Wed,  6 Apr 2011 09:14:40 +0200
Subject: [Avidemux-svn-commit] r7114 -
	branches/avidemux_2.6_branch_mean/avidemux_core/ADM_core/src
Message-ID: <20110406071440.E7444480EAB@sheep.berlios.de>

Author: mean
Date: 2011-04-06 09:14:40 +0200 (Wed, 06 Apr 2011)
New Revision: 7114

Modified:
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_core/src/ADM_fileio.cpp
Log:
[core] Fix ADM_copyFile

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_core/src/ADM_fileio.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_core/src/ADM_fileio.cpp	2011-04-05 05:49:48 UTC (rev 7113)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_core/src/ADM_fileio.cpp	2011-04-06 07:14:40 UTC (rev 7114)
@@ -749,10 +749,10 @@
         return false;
     }
     uint8_t buffer[1024];
-    while(1)
+    while(!feof(fin))
     {
-        int r=fread(buffer,1024,1,fin);
-        fwrite(buffer,r,1,fout);
+        int r=fread(buffer,1,1024,fin);
+        fwrite(buffer,1,r,fout);
         if(r!=1024) break;
     }
 



From mean at mail.berlios.de  Wed Apr  6 09:14:41 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Wed,  6 Apr 2011 09:14:41 +0200
Subject: [Avidemux-svn-commit] r7115 -
	branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/preset
Message-ID: <20110406071442.049B7480EAB@sheep.berlios.de>

Author: mean
Date: 2011-04-06 09:14:41 +0200 (Wed, 06 Apr 2011)
New Revision: 7115

Added:
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/preset/iPhone.json
Log:
[x264/ui] Update + handle idc level

Added: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/preset/iPhone.json
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/preset/iPhone.json	                        (rev 0)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/preset/iPhone.json	2011-04-06 07:14:41 UTC (rev 7115)
@@ -0,0 +1,60 @@
+{
+	"general" : {
+		"threads" : 99
+	},
+	"level" : 31,
+	"vui" : {
+		"sar_height" : 1,
+		"sar_width" : 1
+	},
+	"MaxRefFrames" : 2,
+	"MinIdr" : 0,
+	"MaxIdr" : 250,
+	"MaxBFrame" : 2,
+	"i_bframe_adaptative" : 0,
+	"i_bframe_bias" : 0,
+	"i_bframe_pyramid" : 2,
+	"b_deblocking_filter" : false,
+	"i_deblocking_filter_alphac0" : 0,
+	"i_deblocking_filter_beta" : 0,
+	"cabac" : false,
+	"interlaced" : false,
+	"analyze" : {
+		"b_8x8" : true,
+		"b_i4x4" : true,
+		"b_i8x8" : false,
+		"b_p8x8" : false,
+		"b_p16x16" : true,
+		"b_b16x16" : true,
+		"weighted_pred" : 2,
+		"weighted_bipred" : true,
+		"direct_mv_pred" : 3,
+		"chroma_offset" : 0,
+		"me_method" : 0,
+		"subpel_refine" : 7,
+		"chroma_me" : true,
+		"mixed_references" : true,
+		"trellis" : 1,
+		"fast_pskip" : true,
+		"dct_decimate" : true,
+		"noise_reduction" : 0,
+		"psy" : true
+	},
+	"ratecontrol" : {
+		"rc_method" : 0,
+		"qp_constant" : 0,
+		"qp_min" : 0,
+		"qp_max" : 0,
+		"qp_step" : 0,
+		"bitrate" : 0,
+		"vbv_max_bitrate" : 0,
+		"vbv_buffer_size" : 0,
+		"vbv_buffer_init" : 0,
+		"ip_factor" : 0,
+		"pb_factor" : 0,
+		"aq_mode" : 0,
+		"aq_strength" : 0,
+		"mb_tree" : true,
+		"lookahead" : 40
+	}
+}
\ No newline at end of file



From mean at mail.berlios.de  Wed Apr  6 09:14:43 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Wed,  6 Apr 2011 09:14:43 +0200
Subject: [Avidemux-svn-commit] r7116 - in
	branches/avidemux_2.6_branch_mean/avidemux_core:
	ADM_coreJson/include ADM_coreJson/src ADM_coreUtils/src
Message-ID: <20110406071443.5D526480EAB@sheep.berlios.de>

Author: mean
Date: 2011-04-06 09:14:43 +0200 (Wed, 06 Apr 2011)
New Revision: 7116

Modified:
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreJson/include/ADM_coreJson.h
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreJson/src/ADM_json.cpp
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/ADM_paramList.cpp
Log:
[json] Add json-serialize for COMPRESS_PARAM, using the one from paramList

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreJson/include/ADM_coreJson.h
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreJson/include/ADM_coreJson.h	2011-04-06 07:14:41 UTC (rev 7115)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreJson/include/ADM_coreJson.h	2011-04-06 07:14:43 UTC (rev 7116)
@@ -37,7 +37,7 @@
         bool addInt32(const char *key,const int32_t value);
         bool addFloat(const char *key,const float value);
         bool addBool(const char *key,const bool value);
-        bool addCompressParam(const char *key, const COMPRES_PARAMS param);
+        bool addCompressParam(const char *key, const COMPRES_PARAMS &param);
 
         bool addNode(const char *nodeName);
         bool endNode(void);

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreJson/src/ADM_json.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreJson/src/ADM_json.cpp	2011-04-06 07:14:41 UTC (rev 7115)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreJson/src/ADM_json.cpp	2011-04-06 07:14:43 UTC (rev 7116)
@@ -106,10 +106,15 @@
     return true;
 }
 /**
-
+    \fn addCompressParam
 */
-bool admJson::addCompressParam(const char *key, const COMPRES_PARAMS param)
+extern bool ADM_compressWriteToString(COMPRES_PARAMS *params,  char **str);
+bool admJson::addCompressParam(const char *key, const COMPRES_PARAMS &param)
 {
+    char *str;
+    ADM_compressWriteToString((COMPRES_PARAMS *)&param,&str);
+    bool r=addString(key,str);
+    ADM_dealloc(str);
     return true;
 }
 /**

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/ADM_paramList.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/ADM_paramList.cpp	2011-04-06 07:14:41 UTC (rev 7115)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/ADM_paramList.cpp	2011-04-06 07:14:43 UTC (rev 7116)
@@ -167,9 +167,9 @@
 
 }
 /**
-    \fn compressWriteToString
+    \fn ADM_compressWriteToString
 */
-static bool compressWriteToString(COMPRES_PARAMS *params,  char **str)
+bool ADM_compressWriteToString(COMPRES_PARAMS *params,  char **str)
 {
     char tmp[256];
     switch(params->mode)
@@ -390,7 +390,7 @@
             case ADM_param_video_encode:
               {
                         char *lavString;
-                        if(false==compressWriteToString((COMPRES_PARAMS *)(address+params[i].offset),&lavString))
+                        if(false==ADM_compressWriteToString((COMPRES_PARAMS *)(address+params[i].offset),&lavString))
                         {
                                 ADM_error("Error writing paramvideo string");
                                 return false;



From mean at mail.berlios.de  Wed Apr  6 09:14:44 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Wed,  6 Apr 2011 09:14:44 +0200
Subject: [Avidemux-svn-commit] r7117 - in
	branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264:
	. preset qt4
Message-ID: <20110406071444.C4E1F480EAB@sheep.berlios.de>

Author: mean
Date: 2011-04-06 09:14:44 +0200 (Wed, 06 Apr 2011)
New Revision: 7117

Modified:
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/ADM_x264Setup.cpp
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/preset/PSP.json
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/qt4/Q_x264.cpp
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/qt4/x264ConfigDialog.ui
Log:
[x264/qt4] Improve level management, actually use it

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/ADM_x264Setup.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/ADM_x264Setup.cpp	2011-04-06 07:14:43 UTC (rev 7116)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/ADM_x264Setup.cpp	2011-04-06 07:14:44 UTC (rev 7117)
@@ -67,7 +67,7 @@
   param.i_height = getHeight();
   param.i_csp = X264_CSP_I420;
   param.i_log_level=X264_LOG_INFO; //DEBUG; //INFO;
- 
+  param.i_level_idc=x264Settings.level; 
     //Framerate
     int n,d;    
     uint64_t f=source->getInfo()->frameIncrement;

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/preset/PSP.json
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/preset/PSP.json	2011-04-06 07:14:43 UTC (rev 7116)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/preset/PSP.json	2011-04-06 07:14:44 UTC (rev 7117)
@@ -2,14 +2,14 @@
 	"general" : {
 		"threads" : 99
 	},
-	"level" : 30,
+	"level" : 31,
 	"vui" : {
 		"sar_height" : 1,
 		"sar_width" : 1
 	},
 	"MaxRefFrames" : 2,
-	"MinIdr" : 100,
-	"MaxIdr" : 500,
+	"MinIdr" : 0,
+	"MaxIdr" : 250,
 	"MaxBFrame" : 2,
 	"i_bframe_adaptative" : 0,
 	"i_bframe_bias" : 0,
@@ -20,23 +20,23 @@
 	"cabac" : true,
 	"interlaced" : false,
 	"analyze" : {
-		"b_8x8" : true,
+		"b_8x8" : false,
 		"b_i4x4" : true,
 		"b_i8x8" : false,
 		"b_p8x8" : false,
 		"b_p16x16" : true,
-		"b_b16x16" : false,
-		"weighted_pred" : 0,
-		"weighted_bipred" : false,
-		"direct_mv_pred" : 0,
+		"b_b16x16" : true,
+		"weighted_pred" : 2,
+		"weighted_bipred" : true,
+		"direct_mv_pred" : 3,
 		"chroma_offset" : 0,
 		"me_method" : 0,
 		"subpel_refine" : 7,
-		"chroma_me" : false,
-		"mixed_references" : false,
+		"chroma_me" : true,
+		"mixed_references" : true,
 		"trellis" : 1,
 		"fast_pskip" : true,
-		"dct_decimate" : false,
+		"dct_decimate" : true,
 		"noise_reduction" : 0,
 		"psy" : true
 	},
@@ -47,14 +47,14 @@
 		"qp_max" : 0,
 		"qp_step" : 0,
 		"bitrate" : 0,
-		"vbv_max_bitrate" : 10000,
-		"vbv_buffer_size" : 10000,
-		"vbv_buffer_init" : 8000,
+		"vbv_max_bitrate" : 0,
+		"vbv_buffer_size" : 0,
+		"vbv_buffer_init" : 0,
 		"ip_factor" : 0,
 		"pb_factor" : 0,
 		"aq_mode" : 0,
 		"aq_strength" : 0,
-		"mb_tree" : false,
-		"lookahead" : 0
+		"mb_tree" : true,
+		"lookahead" : 40
 	}
-}
+}
\ No newline at end of file

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/qt4/Q_x264.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/qt4/Q_x264.cpp	2011-04-06 07:14:43 UTC (rev 7116)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/qt4/Q_x264.cpp	2011-04-06 07:14:44 UTC (rev 7117)
@@ -27,6 +27,33 @@
 {
 extern const ADM_paramList x264_encoder_param[];
 }
+
+typedef struct
+{
+    uint32_t idcValue;
+    const char *idcString;
+}idcToken;
+
+static const idcToken listOfIdc[]={
+        {0,"Auto"},
+        {10,"1"},
+        {11,"1.1"},
+        {12,"1.2"},
+        {13,"1.3"},
+        {20,"2"},
+        {21,"2.1"},
+        {22,"2.2"},
+        {30,"3"},
+        {31,"3.1"},
+        {32,"3.2"},
+        {40,"4"},
+        {41,"4.1"},
+        {42,"4.2"},
+        {50,"5"},
+        {51,"5.1"},
+
+};
+#define NB_IDC sizeof(listOfIdc)/sizeof(idcToken)
 /**
     \fn x264_ui
     \brief hook to enter UI specific dialog
@@ -67,6 +94,14 @@
         connect(ui.saveAsButton, SIGNAL(pressed()), this, SLOT(saveAsButton_pressed()));
         connect(ui.configurationComboBox, SIGNAL(currentIndexChanged(int)), this, SLOT(configurationComboBox_currentIndexChanged(int)));
 
+        // Rebuild idc level list
+        QComboBox *idc=ui.idcLevelComboBox;
+        idc->clear();
+        for(int i=0;i<NB_IDC;i++)
+        {
+            const idcToken *t=listOfIdc+i;
+            idc->addItem(QString(t->idcString));
+        }
 
         upload();
         ADM_pluginInstallSystem( std::string("x264"),std::string(".json"),pluginVersion);
@@ -135,6 +170,18 @@
 
           MK_MENU(predictModeComboBox,analyze.direct_mv_pred);
 
+          // udate idc
+          QComboBox *idc=ui.idcLevelComboBox;
+          for(int i=0;i<NB_IDC;i++)
+          {
+                const idcToken *t=listOfIdc+i;
+                if(myCopy.level==t->idcValue)
+                {
+                        idc->setCurrentIndex(i);
+                        break;
+                }
+          }
+
         switch(ENCODING(mode))
         {
             case COMPRESS_AQ: // CRF
@@ -226,6 +273,11 @@
 
           MK_MENU(predictModeComboBox,analyze.direct_mv_pred);
 
+          QComboBox *idc=ui.idcLevelComboBox;
+          int dex=idc->currentIndex();
+          ADM_assert(dex<NB_IDC);
+          myCopy.level=listOfIdc[dex].idcValue;
+
           switch(ui.encodingModeComboBox->currentIndex())
           {
             case 0: ENCODING(mode)=COMPRESS_CBR; ENCODING(bitrate)=ui.targetRateControlSpinBox->value();break;

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/qt4/x264ConfigDialog.ui
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/qt4/x264ConfigDialog.ui	2011-04-06 07:14:43 UTC (rev 7116)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/qt4/x264ConfigDialog.ui	2011-04-06 07:14:44 UTC (rev 7117)
@@ -104,151 +104,175 @@
    <item>
     <widget class="QTabWidget" name="tabWidget">
      <property name="currentIndex">
-      <number>4</number>
+      <number>0</number>
      </property>
      <widget class="QWidget" name="tab_1">
       <attribute name="title">
        <string>General</string>
       </attribute>
-      <layout class="QVBoxLayout">
-       <property name="spacing">
-        <number>6</number>
+      <widget class="QGroupBox" name="groupBox_2">
+       <property name="geometry">
+        <rect>
+         <x>10</x>
+         <y>10</y>
+         <width>495</width>
+         <height>400</height>
+        </rect>
        </property>
-       <property name="margin">
-        <number>9</number>
+       <property name="title">
+        <string>Rate Control</string>
        </property>
-       <item>
-        <widget class="QGroupBox" name="groupBox_2">
-         <property name="title">
-          <string>Rate Control</string>
-         </property>
-         <layout class="QVBoxLayout" name="verticalLayout_5">
-          <item>
-           <layout class="QGridLayout">
-            <property name="margin">
-             <number>0</number>
+       <layout class="QGridLayout" name="gridLayout_6">
+        <item row="0" column="0">
+         <layout class="QGridLayout">
+          <property name="margin">
+           <number>0</number>
+          </property>
+          <property name="spacing">
+           <number>6</number>
+          </property>
+          <item row="1" column="0">
+           <widget class="QLabel" name="targetRateControlLabel1">
+            <property name="text">
+             <string>Target Video Size:</string>
             </property>
+           </widget>
+          </item>
+          <item row="0" column="1">
+           <layout class="QHBoxLayout">
             <property name="spacing">
              <number>6</number>
             </property>
-            <item row="1" column="0">
-             <widget class="QLabel" name="targetRateControlLabel1">
-              <property name="text">
-               <string>Target Video Size:</string>
+            <property name="margin">
+             <number>0</number>
+            </property>
+            <item>
+             <widget class="QComboBox" name="encodingModeComboBox">
+              <property name="currentIndex">
+               <number>3</number>
               </property>
-             </widget>
-            </item>
-            <item row="0" column="1">
-             <layout class="QHBoxLayout">
-              <property name="spacing">
-               <number>6</number>
-              </property>
-              <property name="margin">
-               <number>0</number>
-              </property>
               <item>
-               <widget class="QComboBox" name="encodingModeComboBox">
-                <property name="currentIndex">
-                 <number>3</number>
-                </property>
-                <item>
-                 <property name="text">
-                  <string>Constant Bitrate (Single Pass)</string>
-                 </property>
-                </item>
-                <item>
-                 <property name="text">
-                  <string>Constant Quantiser (Single Pass)</string>
-                 </property>
-                </item>
-                <item>
-                 <property name="text">
-                  <string>Constant Rate Factor (Single Pass)</string>
-                 </property>
-                </item>
-                <item>
-                 <property name="text">
-                  <string>Video Size (Two Pass)</string>
-                 </property>
-                </item>
-                <item>
-                 <property name="text">
-                  <string>Average Bitrate (Two Pass)</string>
-                 </property>
-                </item>
-               </widget>
+               <property name="text">
+                <string>Constant Bitrate (Single Pass)</string>
+               </property>
               </item>
               <item>
-               <spacer name="spacer_6">
-                <property name="orientation">
-                 <enum>Qt::Horizontal</enum>
-                </property>
-                <property name="sizeHint" stdset="0">
-                 <size>
-                  <width>0</width>
-                  <height>0</height>
-                 </size>
-                </property>
-               </spacer>
+               <property name="text">
+                <string>Constant Quantiser (Single Pass)</string>
+               </property>
               </item>
-             </layout>
+              <item>
+               <property name="text">
+                <string>Constant Rate Factor (Single Pass)</string>
+               </property>
+              </item>
+              <item>
+               <property name="text">
+                <string>Video Size (Two Pass)</string>
+               </property>
+              </item>
+              <item>
+               <property name="text">
+                <string>Average Bitrate (Two Pass)</string>
+               </property>
+              </item>
+             </widget>
             </item>
-            <item row="0" column="0">
-             <widget class="QLabel" name="label">
+            <item>
+             <spacer name="spacer_6">
+              <property name="orientation">
+               <enum>Qt::Horizontal</enum>
+              </property>
+              <property name="sizeHint" stdset="0">
+               <size>
+                <width>0</width>
+                <height>0</height>
+               </size>
+              </property>
+             </spacer>
+            </item>
+           </layout>
+          </item>
+          <item row="0" column="0">
+           <widget class="QLabel" name="label">
+            <property name="text">
+             <string>Encoding Mode:</string>
+            </property>
+           </widget>
+          </item>
+          <item row="1" column="1">
+           <layout class="QHBoxLayout">
+            <property name="spacing">
+             <number>6</number>
+            </property>
+            <property name="margin">
+             <number>0</number>
+            </property>
+            <item>
+             <widget class="QSpinBox" name="targetRateControlSpinBox">
+              <property name="prefix">
+               <string/>
+              </property>
+              <property name="maximum">
+               <number>999999999</number>
+              </property>
+              <property name="value">
+               <number>700</number>
+              </property>
+             </widget>
+            </item>
+            <item>
+             <widget class="QLabel" name="targetRateControlLabel2">
               <property name="text">
-               <string>Encoding Mode:</string>
+               <string>MB</string>
               </property>
              </widget>
             </item>
-            <item row="1" column="1">
-             <layout class="QHBoxLayout">
-              <property name="spacing">
-               <number>6</number>
+            <item>
+             <spacer name="spacer_5">
+              <property name="orientation">
+               <enum>Qt::Horizontal</enum>
               </property>
-              <property name="margin">
-               <number>0</number>
+              <property name="sizeHint" stdset="0">
+               <size>
+                <width>0</width>
+                <height>0</height>
+               </size>
               </property>
-              <item>
-               <widget class="QSpinBox" name="targetRateControlSpinBox">
-                <property name="prefix">
-                 <string/>
-                </property>
-                <property name="maximum">
-                 <number>999999999</number>
-                </property>
-                <property name="value">
-                 <number>700</number>
-                </property>
-               </widget>
-              </item>
-              <item>
-               <widget class="QLabel" name="targetRateControlLabel2">
-                <property name="text">
-                 <string>MB</string>
-                </property>
-               </widget>
-              </item>
-              <item>
-               <spacer name="spacer_5">
-                <property name="orientation">
-                 <enum>Qt::Horizontal</enum>
-                </property>
-                <property name="sizeHint" stdset="0">
-                 <size>
-                  <width>0</width>
-                  <height>0</height>
-                 </size>
-                </property>
-               </spacer>
-              </item>
-             </layout>
+             </spacer>
             </item>
            </layout>
           </item>
+         </layout>
+        </item>
+        <item row="1" column="0">
+         <spacer>
+          <property name="orientation">
+           <enum>Qt::Vertical</enum>
+          </property>
+          <property name="sizeType">
+           <enum>QSizePolicy::Fixed</enum>
+          </property>
+          <property name="sizeHint" stdset="0">
+           <size>
+            <width>20</width>
+            <height>4</height>
+           </size>
+          </property>
+         </spacer>
+        </item>
+        <item row="2" column="0">
+         <layout class="QHBoxLayout">
+          <property name="spacing">
+           <number>6</number>
+          </property>
+          <property name="margin">
+           <number>0</number>
+          </property>
           <item>
-           <spacer>
+           <spacer name="horizontalSpacer_3">
             <property name="orientation">
-             <enum>Qt::Vertical</enum>
+             <enum>Qt::Horizontal</enum>
             </property>
             <property name="sizeType">
              <enum>QSizePolicy::Fixed</enum>
@@ -256,7 +280,7 @@
             <property name="sizeHint" stdset="0">
              <size>
               <width>20</width>
-              <height>4</height>
+              <height>0</height>
              </size>
             </property>
            </spacer>
@@ -264,37 +288,21 @@
           <item>
            <layout class="QHBoxLayout">
             <property name="spacing">
-             <number>6</number>
+             <number>12</number>
             </property>
             <property name="margin">
              <number>0</number>
             </property>
             <item>
-             <spacer name="horizontalSpacer_3">
-              <property name="orientation">
-               <enum>Qt::Horizontal</enum>
-              </property>
-              <property name="sizeType">
-               <enum>QSizePolicy::Fixed</enum>
-              </property>
-              <property name="sizeHint" stdset="0">
-               <size>
-                <width>20</width>
-                <height>0</height>
-               </size>
-              </property>
-             </spacer>
-            </item>
-            <item>
-             <layout class="QHBoxLayout">
+             <layout class="QVBoxLayout">
               <property name="spacing">
-               <number>12</number>
+               <number>0</number>
               </property>
               <property name="margin">
                <number>0</number>
               </property>
               <item>
-               <layout class="QVBoxLayout">
+               <layout class="QHBoxLayout">
                 <property name="spacing">
                  <number>0</number>
                 </property>
@@ -302,172 +310,172 @@
                  <number>0</number>
                 </property>
                 <item>
-                 <layout class="QHBoxLayout">
-                  <property name="spacing">
-                   <number>0</number>
+                 <widget class="QLabel" name="quantiserLabel1">
+                  <property name="enabled">
+                   <bool>false</bool>
                   </property>
-                  <property name="margin">
-                   <number>0</number>
+                  <property name="text">
+                   <string>0 (High Quality)</string>
                   </property>
-                  <item>
-                   <widget class="QLabel" name="quantiserLabel1">
-                    <property name="enabled">
-                     <bool>false</bool>
-                    </property>
-                    <property name="text">
-                     <string>0 (High Quality)</string>
-                    </property>
-                   </widget>
-                  </item>
-                  <item>
-                   <spacer>
-                    <property name="orientation">
-                     <enum>Qt::Horizontal</enum>
-                    </property>
-                    <property name="sizeHint" stdset="0">
-                     <size>
-                      <width>40</width>
-                      <height>20</height>
-                     </size>
-                    </property>
-                   </spacer>
-                  </item>
-                  <item>
-                   <widget class="QLabel" name="quantiserLabel2">
-                    <property name="enabled">
-                     <bool>false</bool>
-                    </property>
-                    <property name="text">
-                     <string>Quantiser</string>
-                    </property>
-                   </widget>
-                  </item>
-                  <item>
-                   <spacer>
-                    <property name="orientation">
-                     <enum>Qt::Horizontal</enum>
-                    </property>
-                    <property name="sizeHint" stdset="0">
-                     <size>
-                      <width>40</width>
-                      <height>20</height>
-                     </size>
-                    </property>
-                   </spacer>
-                  </item>
-                  <item>
-                   <widget class="QLabel" name="quantiserLabel3">
-                    <property name="enabled">
-                     <bool>false</bool>
-                    </property>
-                    <property name="text">
-                     <string>51 (Low Quality)</string>
-                    </property>
-                   </widget>
-                  </item>
-                 </layout>
+                 </widget>
                 </item>
                 <item>
-                 <widget class="QSlider" name="quantiserSlider">
-                  <property name="enabled">
-                   <bool>false</bool>
+                 <spacer>
+                  <property name="orientation">
+                   <enum>Qt::Horizontal</enum>
                   </property>
-                  <property name="minimumSize">
+                  <property name="sizeHint" stdset="0">
                    <size>
-                    <width>375</width>
-                    <height>0</height>
+                    <width>40</width>
+                    <height>20</height>
                    </size>
                   </property>
-                  <property name="maximum">
-                   <number>51</number>
+                 </spacer>
+                </item>
+                <item>
+                 <widget class="QLabel" name="quantiserLabel2">
+                  <property name="enabled">
+                   <bool>false</bool>
                   </property>
-                  <property name="pageStep">
-                   <number>5</number>
+                  <property name="text">
+                   <string>Quantiser</string>
                   </property>
-                  <property name="value">
-                   <number>26</number>
-                  </property>
+                 </widget>
+                </item>
+                <item>
+                 <spacer>
                   <property name="orientation">
                    <enum>Qt::Horizontal</enum>
                   </property>
-                  <property name="tickPosition">
-                   <enum>QSlider::TicksBelow</enum>
+                  <property name="sizeHint" stdset="0">
+                   <size>
+                    <width>40</width>
+                    <height>20</height>
+                   </size>
                   </property>
+                 </spacer>
+                </item>
+                <item>
+                 <widget class="QLabel" name="quantiserLabel3">
+                  <property name="enabled">
+                   <bool>false</bool>
+                  </property>
+                  <property name="text">
+                   <string>51 (Low Quality)</string>
+                  </property>
                  </widget>
                 </item>
                </layout>
               </item>
               <item>
-               <widget class="QSpinBox" name="quantiserSpinBox">
+               <widget class="QSlider" name="quantiserSlider">
                 <property name="enabled">
                  <bool>false</bool>
                 </property>
+                <property name="minimumSize">
+                 <size>
+                  <width>375</width>
+                  <height>0</height>
+                 </size>
+                </property>
                 <property name="maximum">
                  <number>51</number>
                 </property>
+                <property name="pageStep">
+                 <number>5</number>
+                </property>
                 <property name="value">
                  <number>26</number>
                 </property>
+                <property name="orientation">
+                 <enum>Qt::Horizontal</enum>
+                </property>
+                <property name="tickPosition">
+                 <enum>QSlider::TicksBelow</enum>
+                </property>
                </widget>
               </item>
              </layout>
             </item>
             <item>
-             <spacer name="spacer_4">
-              <property name="orientation">
-               <enum>Qt::Horizontal</enum>
+             <widget class="QSpinBox" name="quantiserSpinBox">
+              <property name="enabled">
+               <bool>false</bool>
               </property>
-              <property name="sizeHint" stdset="0">
-               <size>
-                <width>0</width>
-                <height>0</height>
-               </size>
+              <property name="maximum">
+               <number>51</number>
               </property>
-             </spacer>
+              <property name="value">
+               <number>26</number>
+              </property>
+             </widget>
             </item>
            </layout>
           </item>
           <item>
-           <widget class="QCheckBox" name="maxCrfCheckBox">
-            <property name="text">
-             <string>Maximum Constant Rate Factor</string>
+           <spacer name="spacer_4">
+            <property name="orientation">
+             <enum>Qt::Horizontal</enum>
             </property>
-           </widget>
+            <property name="sizeHint" stdset="0">
+             <size>
+              <width>0</width>
+              <height>0</height>
+             </size>
+            </property>
+           </spacer>
           </item>
+         </layout>
+        </item>
+        <item row="3" column="0">
+         <widget class="QCheckBox" name="maxCrfCheckBox">
+          <property name="text">
+           <string>Maximum Constant Rate Factor</string>
+          </property>
+         </widget>
+        </item>
+        <item row="4" column="0">
+         <layout class="QHBoxLayout" name="_16">
+          <property name="spacing">
+           <number>6</number>
+          </property>
+          <property name="margin">
+           <number>0</number>
+          </property>
           <item>
-           <layout class="QHBoxLayout" name="_16">
+           <spacer name="horizontalSpacer_4">
+            <property name="orientation">
+             <enum>Qt::Horizontal</enum>
+            </property>
+            <property name="sizeType">
+             <enum>QSizePolicy::Fixed</enum>
+            </property>
+            <property name="sizeHint" stdset="0">
+             <size>
+              <width>20</width>
+              <height>0</height>
+             </size>
+            </property>
+           </spacer>
+          </item>
+          <item>
+           <layout class="QHBoxLayout" name="_17">
             <property name="spacing">
-             <number>6</number>
+             <number>12</number>
             </property>
             <property name="margin">
              <number>0</number>
             </property>
             <item>
-             <spacer name="horizontalSpacer_4">
-              <property name="orientation">
-               <enum>Qt::Horizontal</enum>
-              </property>
-              <property name="sizeType">
-               <enum>QSizePolicy::Fixed</enum>
-              </property>
-              <property name="sizeHint" stdset="0">
-               <size>
-                <width>20</width>
-                <height>0</height>
-               </size>
-              </property>
-             </spacer>
-            </item>
-            <item>
-             <layout class="QHBoxLayout" name="_17">
+             <layout class="QVBoxLayout" name="_18">
               <property name="spacing">
-               <number>12</number>
+               <number>0</number>
               </property>
               <property name="margin">
                <number>0</number>
               </property>
               <item>
-               <layout class="QVBoxLayout" name="_18">
+               <layout class="QHBoxLayout" name="_19">
                 <property name="spacing">
                  <number>0</number>
                 </property>
@@ -475,163 +483,207 @@
                  <number>0</number>
                 </property>
                 <item>
-                 <layout class="QHBoxLayout" name="_19">
-                  <property name="spacing">
-                   <number>0</number>
+                 <widget class="QLabel" name="quantiserLabel1_2">
+                  <property name="enabled">
+                   <bool>false</bool>
                   </property>
-                  <property name="margin">
-                   <number>0</number>
+                  <property name="text">
+                   <string>0 (High Quality)</string>
                   </property>
-                  <item>
-                   <widget class="QLabel" name="quantiserLabel1_2">
-                    <property name="enabled">
-                     <bool>false</bool>
-                    </property>
-                    <property name="text">
-                     <string>0 (High Quality)</string>
-                    </property>
-                   </widget>
-                  </item>
-                  <item>
-                   <spacer>
-                    <property name="orientation">
-                     <enum>Qt::Horizontal</enum>
-                    </property>
-                    <property name="sizeHint" stdset="0">
-                     <size>
-                      <width>40</width>
-                      <height>20</height>
-                     </size>
-                    </property>
-                   </spacer>
-                  </item>
-                  <item>
-                   <widget class="QLabel" name="quantiserLabel2_2">
-                    <property name="enabled">
-                     <bool>false</bool>
-                    </property>
-                    <property name="text">
-                     <string>Quantiser</string>
-                    </property>
-                   </widget>
-                  </item>
-                  <item>
-                   <spacer>
-                    <property name="orientation">
-                     <enum>Qt::Horizontal</enum>
-                    </property>
-                    <property name="sizeHint" stdset="0">
-                     <size>
-                      <width>40</width>
-                      <height>20</height>
-                     </size>
-                    </property>
-                   </spacer>
-                  </item>
-                  <item>
-                   <widget class="QLabel" name="quantiserLabel3_2">
-                    <property name="enabled">
-                     <bool>false</bool>
-                    </property>
-                    <property name="text">
-                     <string>51 (Low Quality)</string>
-                    </property>
-                   </widget>
-                  </item>
-                 </layout>
+                 </widget>
                 </item>
                 <item>
-                 <widget class="QSlider" name="maxCrfSlider">
-                  <property name="enabled">
-                   <bool>false</bool>
+                 <spacer>
+                  <property name="orientation">
+                   <enum>Qt::Horizontal</enum>
                   </property>
-                  <property name="minimumSize">
+                  <property name="sizeHint" stdset="0">
                    <size>
-                    <width>375</width>
-                    <height>0</height>
+                    <width>40</width>
+                    <height>20</height>
                    </size>
                   </property>
-                  <property name="maximum">
-                   <number>51</number>
+                 </spacer>
+                </item>
+                <item>
+                 <widget class="QLabel" name="quantiserLabel2_2">
+                  <property name="enabled">
+                   <bool>false</bool>
                   </property>
-                  <property name="pageStep">
-                   <number>5</number>
+                  <property name="text">
+                   <string>Quantiser</string>
                   </property>
-                  <property name="value">
-                   <number>26</number>
-                  </property>
+                 </widget>
+                </item>
+                <item>
+                 <spacer>
                   <property name="orientation">
                    <enum>Qt::Horizontal</enum>
                   </property>
-                  <property name="tickPosition">
-                   <enum>QSlider::TicksBelow</enum>
+                  <property name="sizeHint" stdset="0">
+                   <size>
+                    <width>40</width>
+                    <height>20</height>
+                   </size>
                   </property>
+                 </spacer>
+                </item>
+                <item>
+                 <widget class="QLabel" name="quantiserLabel3_2">
+                  <property name="enabled">
+                   <bool>false</bool>
+                  </property>
+                  <property name="text">
+                   <string>51 (Low Quality)</string>
+                  </property>
                  </widget>
                 </item>
                </layout>
               </item>
               <item>
-               <widget class="QSpinBox" name="maxCrfSpinBox">
+               <widget class="QSlider" name="maxCrfSlider">
                 <property name="enabled">
                  <bool>false</bool>
                 </property>
+                <property name="minimumSize">
+                 <size>
+                  <width>375</width>
+                  <height>0</height>
+                 </size>
+                </property>
                 <property name="maximum">
                  <number>51</number>
                 </property>
+                <property name="pageStep">
+                 <number>5</number>
+                </property>
                 <property name="value">
                  <number>26</number>
                 </property>
+                <property name="orientation">
+                 <enum>Qt::Horizontal</enum>
+                </property>
+                <property name="tickPosition">
+                 <enum>QSlider::TicksBelow</enum>
+                </property>
                </widget>
               </item>
              </layout>
             </item>
             <item>
-             <spacer name="spacer_22">
-              <property name="orientation">
-               <enum>Qt::Horizontal</enum>
+             <widget class="QSpinBox" name="maxCrfSpinBox">
+              <property name="enabled">
+               <bool>false</bool>
               </property>
-              <property name="sizeHint" stdset="0">
-               <size>
-                <width>0</width>
-                <height>0</height>
-               </size>
+              <property name="maximum">
+               <number>51</number>
               </property>
-             </spacer>
+              <property name="value">
+               <number>26</number>
+              </property>
+             </widget>
             </item>
            </layout>
           </item>
           <item>
-           <spacer name="verticalSpacer_2">
+           <spacer name="spacer_22">
             <property name="orientation">
-             <enum>Qt::Vertical</enum>
+             <enum>Qt::Horizontal</enum>
             </property>
-            <property name="sizeType">
-             <enum>QSizePolicy::Fixed</enum>
-            </property>
             <property name="sizeHint" stdset="0">
              <size>
-              <width>20</width>
-              <height>4</height>
+              <width>0</width>
+              <height>0</height>
              </size>
             </property>
            </spacer>
           </item>
+         </layout>
+        </item>
+        <item row="5" column="0">
+         <spacer name="verticalSpacer_2">
+          <property name="orientation">
+           <enum>Qt::Vertical</enum>
+          </property>
+          <property name="sizeType">
+           <enum>QSizePolicy::Fixed</enum>
+          </property>
+          <property name="sizeHint" stdset="0">
+           <size>
+            <width>20</width>
+            <height>4</height>
+           </size>
+          </property>
+         </spacer>
+        </item>
+        <item row="6" column="0">
+         <widget class="QCheckBox" name="fastFirstPassCheckBox">
+          <property name="text">
+           <string>Fast First Pass</string>
+          </property>
+         </widget>
+        </item>
+        <item row="7" column="0">
+         <widget class="QCheckBox" name="mbTreeCheckBox">
+          <property name="text">
+           <string>Macroblock-tree Rate Control</string>
+          </property>
+         </widget>
+        </item>
+        <item row="8" column="0">
+         <layout class="QHBoxLayout">
+          <property name="spacing">
+           <number>6</number>
+          </property>
+          <property name="margin">
+           <number>0</number>
+          </property>
           <item>
-           <widget class="QCheckBox" name="fastFirstPassCheckBox">
+           <widget class="QLabel" name="lblLookahead">
             <property name="text">
-             <string>Fast First Pass</string>
+             <string>Frametype Lookahead:</string>
             </property>
            </widget>
           </item>
           <item>
-           <widget class="QCheckBox" name="mbTreeCheckBox">
+           <widget class="QSpinBox" name="lookaheadSpinBox">
+            <property name="maximum">
+             <number>250</number>
+            </property>
+           </widget>
+          </item>
+          <item>
+           <widget class="QLabel" name="lblLookaheadFrames">
             <property name="text">
-             <string>Macroblock-tree Rate Control</string>
+             <string>frames</string>
             </property>
            </widget>
           </item>
           <item>
-           <layout class="QHBoxLayout">
+           <spacer name="spacer_3">
+            <property name="orientation">
+             <enum>Qt::Horizontal</enum>
+            </property>
+            <property name="sizeHint" stdset="0">
+             <size>
+              <width>0</width>
+              <height>0</height>
+             </size>
+            </property>
+           </spacer>
+          </item>
+         </layout>
+        </item>
+        <item row="9" column="0">
+         <layout class="QGridLayout" name="_20">
+          <property name="margin">
+           <number>0</number>
+          </property>
+          <property name="spacing">
+           <number>6</number>
+          </property>
+          <item row="0" column="1">
+           <layout class="QHBoxLayout" name="_21">
             <property name="spacing">
              <number>6</number>
             </property>
@@ -639,28 +691,158 @@
              <number>0</number>
             </property>
             <item>
-             <widget class="QLabel" name="lblLookahead">
-              <property name="text">
-               <string>Frametype Lookahead:</string>
+             <widget class="QComboBox" name="idcLevelComboBox">
+              <property name="currentIndex">
+               <number>0</number>
               </property>
+              <item>
+               <property name="text">
+                <string>Auto</string>
+               </property>
+              </item>
+              <item>
+               <property name="text">
+                <string>1</string>
+               </property>
+              </item>
+              <item>
+               <property name="text">
+                <string>1.1</string>
+               </property>
+              </item>
+              <item>
+               <property name="text">
+                <string>1.2</string>
+               </property>
+              </item>
+              <item>
+               <property name="text">
+                <string>1.3</string>
+               </property>
+              </item>
+              <item>
+               <property name="text">
+                <string>2</string>
+               </property>
+              </item>
+              <item>
+               <property name="text">
+                <string>2.1</string>
+               </property>
+              </item>
+              <item>
+               <property name="text">
+                <string>2.2</string>
+               </property>
+              </item>
+              <item>
+               <property name="text">
+                <string>3</string>
+               </property>
+              </item>
+              <item>
+               <property name="text">
+                <string>3.1</string>
+               </property>
+              </item>
+              <item>
+               <property name="text">
+                <string>3.2</string>
+               </property>
+              </item>
+              <item>
+               <property name="text">
+                <string>4</string>
+               </property>
+              </item>
+              <item>
+               <property name="text">
+                <string>4.1</string>
+               </property>
+              </item>
+              <item>
+               <property name="text">
+                <string>4.2</string>
+               </property>
+              </item>
+              <item>
+               <property name="text">
+                <string>5</string>
+               </property>
+              </item>
+              <item>
+               <property name="text">
+                <string>5.1</string>
+               </property>
+              </item>
              </widget>
             </item>
             <item>
-             <widget class="QSpinBox" name="lookaheadSpinBox">
-              <property name="maximum">
-               <number>250</number>
+             <spacer name="spacer_61">
+              <property name="orientation">
+               <enum>Qt::Horizontal</enum>
               </property>
-             </widget>
+              <property name="sizeHint" stdset="0">
+               <size>
+                <width>0</width>
+                <height>0</height>
+               </size>
+              </property>
+             </spacer>
             </item>
+           </layout>
+          </item>
+          <item row="1" column="0">
+           <widget class="QLabel" name="label_55">
+            <property name="text">
+             <string>Sequence Parameter Set Identifer:</string>
+            </property>
+           </widget>
+          </item>
+          <item row="1" column="1">
+           <layout class="QHBoxLayout" name="_22">
+            <property name="spacing">
+             <number>6</number>
+            </property>
+            <property name="margin">
+             <number>0</number>
+            </property>
             <item>
-             <widget class="QLabel" name="lblLookaheadFrames">
-              <property name="text">
-               <string>frames</string>
-              </property>
+             <widget class="QComboBox" name="spsiComboBox">
+              <item>
+               <property name="text">
+                <string>0</string>
+               </property>
+              </item>
+              <item>
+               <property name="text">
+                <string>1</string>
+               </property>
+              </item>
+              <item>
+               <property name="text">
+                <string>3</string>
+               </property>
+              </item>
+              <item>
+               <property name="text">
+                <string>7</string>
+               </property>
+              </item>
+              <item>
+               <property name="text">
+                <string>15</string>
+               </property>
+              </item>
+              <item>
+               <property name="text">
+                <string>31</string>
+               </property>
+              </item>
              </widget>
             </item>
             <item>
-             <spacer name="spacer_3">
+             <spacer name="spacer_63">
               <property name="orientation">
                <enum>Qt::Horizontal</enum>
               </property>
@@ -674,23 +856,30 @@
             </item>
            </layout>
           </item>
+          <item row="0" column="0">
+           <widget class="QLabel" name="label_56">
+            <property name="text">
+             <string>IDC Level:</string>
+            </property>
+           </widget>
+          </item>
          </layout>
-        </widget>
-       </item>
-       <item>
-        <spacer>
-         <property name="orientation">
-          <enum>Qt::Vertical</enum>
-         </property>
-         <property name="sizeHint" stdset="0">
-          <size>
-           <width>0</width>
-           <height>0</height>
-          </size>
-         </property>
-        </spacer>
-       </item>
-      </layout>
+        </item>
+        <item row="10" column="0">
+         <spacer>
+          <property name="orientation">
+           <enum>Qt::Vertical</enum>
+          </property>
+          <property name="sizeHint" stdset="0">
+           <size>
+            <width>0</width>
+            <height>0</height>
+           </size>
+          </property>
+         </spacer>
+        </item>
+       </layout>
+      </widget>
      </widget>
      <widget class="QWidget" name="tab_2">
       <attribute name="title">
@@ -3542,197 +3731,6 @@
            <number>9</number>
           </property>
           <item>
-           <layout class="QGridLayout">
-            <property name="margin">
-             <number>0</number>
-            </property>
-            <property name="spacing">
-             <number>6</number>
-            </property>
-            <item row="0" column="1">
-             <layout class="QHBoxLayout">
-              <property name="spacing">
-               <number>6</number>
-              </property>
-              <property name="margin">
-               <number>0</number>
-              </property>
-              <item>
-               <widget class="QComboBox" name="idcLevelComboBox">
-                <property name="currentIndex">
-                 <number>0</number>
-                </property>
-                <item>
-                 <property name="text">
-                  <string>Auto</string>
-                 </property>
-                </item>
-                <item>
-                 <property name="text">
-                  <string>1</string>
-                 </property>
-                </item>
-                <item>
-                 <property name="text">
-                  <string>1.1</string>
-                 </property>
-                </item>
-                <item>
-                 <property name="text">
-                  <string>1.2</string>
-                 </property>
-                </item>
-                <item>
-                 <property name="text">
-                  <string>1.3</string>
-                 </property>
-                </item>
-                <item>
-                 <property name="text">
-                  <string>2</string>
-                 </property>
-                </item>
-                <item>
-                 <property name="text">
-                  <string>2.1</string>
-                 </property>
-                </item>
-                <item>
-                 <property name="text">
-                  <string>2.2</string>
-                 </property>
-                </item>
-                <item>
-                 <property name="text">
-                  <string>3</string>
-                 </property>
-                </item>
-                <item>
-                 <property name="text">
-                  <string>3.1</string>
-                 </property>
-                </item>
-                <item>
-                 <property name="text">
-                  <string>3.2</string>
-                 </property>
-                </item>
-                <item>
-                 <property name="text">
-                  <string>4</string>
-                 </property>
-                </item>
-                <item>
-                 <property name="text">
-                  <string>4.1</string>
-                 </property>
-                </item>
-                <item>
-                 <property name="text">
-                  <string>4.2</string>
-                 </property>
-                </item>
-                <item>
-                 <property name="text">
-                  <string>5</string>
-                 </property>
-                </item>
-                <item>
-                 <property name="text">
-                  <string>5.1</string>
-                 </property>
-                </item>
-               </widget>
-              </item>
-              <item>
-               <spacer name="spacer_61">
-                <property name="orientation">
-                 <enum>Qt::Horizontal</enum>
-                </property>
-                <property name="sizeHint" stdset="0">
-                 <size>
-                  <width>0</width>
-                  <height>0</height>
-                 </size>
-                </property>
-               </spacer>
-              </item>
-             </layout>
-            </item>
-            <item row="1" column="0">
-             <widget class="QLabel" name="label_55">
-              <property name="text">
-               <string>Sequence Parameter Set Identifer:</string>
-              </property>
-             </widget>
-            </item>
-            <item row="0" column="0">
-             <widget class="QLabel" name="label_56">
-              <property name="text">
-               <string>IDC Level:</string>
-              </property>
-             </widget>
-            </item>
-            <item row="1" column="1">
-             <layout class="QHBoxLayout">
-              <property name="spacing">
-               <number>6</number>
-              </property>
-              <property name="margin">
-               <number>0</number>
-              </property>
-              <item>
-               <widget class="QComboBox" name="spsiComboBox">
-                <item>
-                 <property name="text">
-                  <string>0</string>
-                 </property>
-                </item>
-                <item>
-                 <property name="text">
-                  <string>1</string>
-                 </property>
-                </item>
-                <item>
-                 <property name="text">
-                  <string>3</string>
-                 </property>
-                </item>
-                <item>
-                 <property name="text">
-                  <string>7</string>
-                 </property>
-                </item>
-                <item>
-                 <property name="text">
-                  <string>15</string>
-                 </property>
-                </item>
-                <item>
-                 <property name="text">
-                  <string>31</string>
-                 </property>
-                </item>
-               </widget>
-              </item>
-              <item>
-               <spacer name="spacer_63">
-                <property name="orientation">
-                 <enum>Qt::Horizontal</enum>
-                </property>
-                <property name="sizeHint" stdset="0">
-                 <size>
-                  <width>0</width>
-                  <height>0</height>
-                 </size>
-                </property>
-               </spacer>
-              </item>
-             </layout>
-            </item>
-           </layout>
-          </item>
-          <item>
            <widget class="QCheckBox" name="accessUnitCheckBox">
             <property name="text">
              <string>Generate Access Unit Delimiters</string>
@@ -4549,8 +4547,6 @@
   <tabstop>sliceThreadingCheckBox</tabstop>
   <tabstop>threadedLookaheadCheckBox</tabstop>
   <tabstop>threadedLookaheadSpinBox</tabstop>
-  <tabstop>idcLevelComboBox</tabstop>
-  <tabstop>spsiComboBox</tabstop>
   <tabstop>accessUnitCheckBox</tabstop>
   <tabstop>sarCustomRadioButton</tabstop>
   <tabstop>sarCustomSpinBox1</tabstop>



From mean at mail.berlios.de  Wed Apr  6 09:14:45 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Wed,  6 Apr 2011 09:14:45 +0200
Subject: [Avidemux-svn-commit] r7118 -
	branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreImage/src
Message-ID: <20110406071446.07CA5480EAB@sheep.berlios.de>

Author: mean
Date: 2011-04-06 09:14:45 +0200 (Wed, 06 Apr 2011)
New Revision: 7118

Modified:
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreImage/src/ADM_colorspace.cpp
Log:
[core/color] Dont crash if ADM_COLOR_BACKWARD is set, fixes #120

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreImage/src/ADM_colorspace.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreImage/src/ADM_colorspace.cpp	2011-04-06 07:14:44 UTC (rev 7117)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreImage/src/ADM_colorspace.cpp	2011-04-06 07:14:45 UTC (rev 7118)
@@ -79,8 +79,12 @@
     \brief Convert ADM colorspace type swscale/lavcodec colorspace name
 
 */
-static PixelFormat ADMColor2LAVColor(ADM_colorspace fromColor)
+static PixelFormat ADMColor2LAVColor(ADM_colorspace fromColor_)
 {
+  ADM_colorspace fromColor=fromColor_;
+  int intColor=(int)fromColor;
+  intColor&=ADM_COLOR_MASK;
+  fromColor=(ADM_colorspace)intColor;
   switch(fromColor)
   {
     case ADM_COLOR_YUV422: return PIX_FMT_YUYV422;
@@ -280,8 +284,8 @@
 
     fromColor=from;
     toColor=to;
-    PixelFormat lavFrom=ADMColor2LAVColor(fromColor);
-    PixelFormat lavTo=ADMColor2LAVColor(toColor);
+    PixelFormat lavFrom=ADMColor2LAVColor(fromColor );
+    PixelFormat lavTo=ADMColor2LAVColor(toColor );
     
     context=(void *)sws_getContext(
                       srcWidth,srcHeight,
@@ -340,16 +344,17 @@
     dstPitch[1]=idstPitch[1];
     dstPitch[2]=idstPitch[2];
     if(false==convertPlanes(srcPitch,dstPitch,srcPlanes,dstPlanes)) return false;
+
     if(toColor==ADM_COLOR_BGR32A)
     {
              swapRGB32(dstWidth,dstHeight,to);
     }
-/*
-    if(toColor==ADM_COLOR_BGR24)
+#if 0
+    if(toColor==ADM_COLOR_BGR24 || (toColor==ADM_COLOR_RGB24 | ADM_COLOR_BACKWARD))
     {
              swapRGB24(dstWidth,dstHeight,to);
     }
-*/
+#endif
     return true;
 }
 //EOF



From mean at mail.berlios.de  Wed Apr  6 09:14:47 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Wed,  6 Apr 2011 09:14:47 +0200
Subject: [Avidemux-svn-commit] r7119 -
	branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoFilters6/verticalFlip
Message-ID: <20110406071447.2EB8C480EAB@sheep.berlios.de>

Author: mean
Date: 2011-04-06 09:14:46 +0200 (Wed, 06 Apr 2011)
New Revision: 7119

Modified:
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoFilters6/verticalFlip/verticalFlip.cpp
Log:
[videoFilter/vflip] Let the filter handle stride/pitch and not assume pitch=width

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoFilters6/verticalFlip/verticalFlip.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoFilters6/verticalFlip/verticalFlip.cpp	2011-04-06 07:14:45 UTC (rev 7118)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoFilters6/verticalFlip/verticalFlip.cpp	2011-04-06 07:14:46 UTC (rev 7119)
@@ -65,14 +65,14 @@
 		
 }
 
-static void flipMe(uint8_t *data, uint32_t w,uint32_t h)
+static void flipMe(uint8_t *data, uint32_t w,uint32_t h,uint32_t stride)
 {
     uint8_t *scratch=(uint8_t *)alloca(w);
     int count=h>>1;
     for(int i=0;i<count;i++)
     {
-        uint8_t *top=data+w*i;
-        uint8_t *bottom=data+(h-i-1)*w;
+        uint8_t *top=data+stride*i;
+        uint8_t *bottom=data+(h-i-1)*stride;
         memcpy(scratch, top,w);
         memcpy(top, bottom,w);
         memcpy(bottom,scratch,w);
@@ -93,9 +93,12 @@
     // do in place flip
     int w=info.width;
     int h=info.height;
-    flipMe(YPLANE(image),w,h);
-    flipMe(UPLANE(image),w>>1,h>>1);
-    flipMe(VPLANE(image),w>>1,h>>1);
+    int stride=image->GetPitch(PLANAR_Y);
+    flipMe(YPLANE(image),w,h,stride);
+    stride=image->GetPitch(PLANAR_U);
+    flipMe(UPLANE(image),w>>1,h>>1,stride);
+    stride=image->GetPitch(PLANAR_V);
+    flipMe(VPLANE(image),w>>1,h>>1,stride);
     return true;
 }
 /**



From mean at mail.berlios.de  Wed Apr  6 09:14:48 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Wed,  6 Apr 2011 09:14:48 +0200
Subject: [Avidemux-svn-commit] r7120 - in
	branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoFilters6:
	. horizontalFlip
Message-ID: <20110406071448.52EC8480EAB@sheep.berlios.de>

Author: mean
Date: 2011-04-06 09:14:48 +0200 (Wed, 06 Apr 2011)
New Revision: 7120

Added:
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoFilters6/horizontalFlip/
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoFilters6/horizontalFlip/CMakeLists.txt
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoFilters6/horizontalFlip/horizontalFlip.cpp
Modified:
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoFilters6/CMakeLists.txt
Log:
[videoFilter/hflip] New filter, horizontal flip

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoFilters6/CMakeLists.txt
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoFilters6/CMakeLists.txt	2011-04-06 07:14:46 UTC (rev 7119)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoFilters6/CMakeLists.txt	2011-04-06 07:14:48 UTC (rev 7120)
@@ -5,6 +5,7 @@
 ADD_SUBDIRECTORY(crop)
 ADD_SUBDIRECTORY(dummy)
 ADD_SUBDIRECTORY(fastConvolution)
+ADD_SUBDIRECTORY(horizontalFlip)
 ADD_SUBDIRECTORY(kernelDeint)
 ADD_SUBDIRECTORY(largeMedian)
 ADD_SUBDIRECTORY(lavDeint)

Added: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoFilters6/horizontalFlip/CMakeLists.txt
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoFilters6/horizontalFlip/CMakeLists.txt	                        (rev 0)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoFilters6/horizontalFlip/CMakeLists.txt	2011-04-06 07:14:48 UTC (rev 7120)
@@ -0,0 +1,9 @@
+INCLUDE(vf_plugin)
+
+
+SET(ADM_hf_hflip_SRCS horizontalFlip.cpp)
+
+ADD_VIDEO_FILTER(ADM_hf_hflip ${ADM_hf_hflip_SRCS})
+
+INIT_VIDEO_FILTER(ADM_hf_hflip)
+INSTALL_VIDEO_FILTER(ADM_hf_hflip)

Added: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoFilters6/horizontalFlip/horizontalFlip.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoFilters6/horizontalFlip/horizontalFlip.cpp	                        (rev 0)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoFilters6/horizontalFlip/horizontalFlip.cpp	2011-04-06 07:14:48 UTC (rev 7120)
@@ -0,0 +1,135 @@
+/** *************************************************************************
+                    \fn       horizontalFlipFilter.cpp  
+                    \brief    horizontal flip
+
+    copyright            : (C) 2011 by mean
+
+ ***************************************************************************/
+
+/***************************************************************************
+ *                                                                         *
+ *   This program is free software; you can redistribute it and/or modify  *
+ *   it under the terms of the GNU General Public License as published by  *
+ *   the Free Software Foundation; either version 2 of the License, or     *
+ *   (at your option) any later version.                                   *
+ *                                                                         *
+ ***************************************************************************/
+
+#include "ADM_default.h"
+#include "ADM_coreVideoFilterInternal.h"
+
+/**
+    \class horizontalFlipFilter
+*/
+class horizontalFlipFilter : public  ADM_coreVideoFilter
+{
+public:
+                    horizontalFlipFilter(ADM_coreVideoFilter *previous,CONFcouple *conf);
+                    ~horizontalFlipFilter();
+
+        virtual const char   *getConfiguration(void);                   /// Return  current configuration as a human readable string
+        virtual bool         getNextFrame(uint32_t *fn,ADMImage *image);    /// Return the next image
+	 //  virtual FilterInfo  *getInfo(void);                             /// Return picture parameters after this filter
+        virtual bool         getCoupledConf(CONFcouple **couples) ;   /// Return the current filter configuration
+        virtual bool         configure(void) {return true;}             /// Start graphical user interface
+};
+
+// Add the hook to make it valid plugin
+DECLARE_VIDEO_FILTER(   horizontalFlipFilter,   // Class
+                        1,0,0,              // Version
+                        ADM_UI_ALL,         // UI
+                        VF_TRANSFORM,            // Category
+                        "hflip",            // internal name (must be uniq!)
+                        "Horizontal Flip",            // Display name
+                        "Horizontally flip the image." // Description
+                    );
+
+// Now implements the interesting parts
+/**
+    \fn horizontalFlipFilter
+    \brief constructor
+*/
+horizontalFlipFilter::horizontalFlipFilter(  ADM_coreVideoFilter *in,CONFcouple *setup) : ADM_coreVideoFilter(in,setup)
+{
+UNUSED_ARG(setup);
+
+    // By default the info field contains the output of previous filter
+    // Tweak it here if you change fps, duration, width,...
+}
+/**
+    \fn horizontalFlipFilter
+    \brief destructor
+*/
+horizontalFlipFilter::~horizontalFlipFilter()
+{
+		
+}
+
+static void flipLine(uint8_t *line, uint32_t w)
+{
+    int count=w>>1;
+    uint8_t *h=line;
+    uint8_t *e=line+w-1;
+    while(count--)
+    {
+        uint8_t r=*e;
+        *e=*h;
+        *h=r;
+        h++;e--;
+    }
+}
+
+static void flipPlane(uint8_t *data, uint32_t w,uint32_t h,uint32_t stride)
+{
+        for( int i=0;i<h;i++)
+        {
+                flipLine(data,w);
+                data+=stride;
+        }
+}
+/**
+    \fn getFrame
+    \brief Get a processed frame
+*/
+bool horizontalFlipFilter::getNextFrame(uint32_t *fn,ADMImage *image)
+{
+    // since we do nothing, just get the output of previous filter
+    if(false==previousFilter->getNextFrame(fn,image))
+    {
+        ADM_warning("FlipFilter : Cannot get frame\n");
+        return false;
+    }
+    // do in place flip
+    int w=info.width;
+    int h=info.height;
+    for(int i=0;i<3;i++)
+    {
+        if(i==1)
+        {
+            w>>=1;
+            h>>=1;
+        }
+        flipPlane(image->GetWritePtr((ADM_PLANE)i),w,h,image->GetPitch((ADM_PLANE)i));
+    }
+    return true;
+}
+/**
+    \fn getCoupledConf
+    \brief Return our current configuration as couple name=value
+*/
+bool         horizontalFlipFilter::getCoupledConf(CONFcouple **couples)
+{
+    *couples=new CONFcouple(0); // Even if we dont have configuration we must allocate one 
+    return true;
+}
+/**
+    \fn getConfiguration
+    \brief Return current setting as a string
+*/
+const char *horizontalFlipFilter::getConfiguration(void)
+{
+    
+    return "Vertical flip.";
+}
+// Normally not needed :virtual FilterInfo  *getInfo(void)
+//EOF



From mean at mail.berlios.de  Wed Apr  6 14:23:20 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Wed,  6 Apr 2011 14:23:20 +0200
Subject: [Avidemux-svn-commit] r7121 -
	branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/qt4
Message-ID: <20110406122321.36DAD480EB0@sheep.berlios.de>

Author: mean
Date: 2011-04-06 14:23:20 +0200 (Wed, 06 Apr 2011)
New Revision: 7121

Modified:
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/qt4/Q_x264.cpp
Log:
[x264] Delete profile

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/qt4/Q_x264.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/qt4/Q_x264.cpp	2011-04-06 07:14:48 UTC (rev 7120)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/qt4/Q_x264.cpp	2011-04-06 12:23:20 UTC (rev 7121)
@@ -9,6 +9,7 @@
 #include <QtGui/QFileDialog>
 #include <QtGui/QDialog>
 #include <QtGui/QTextEdit>
+#include <QtGui/QLineEdit>
 using std::vector;
 #include "ADM_default.h"
 #include "ADM_coreVideoEncoder.h"
@@ -388,8 +389,10 @@
     int m=ui.configurationComboBox->count();
     if(n==m-1) // custom
     {
+        ui.deleteButton->setEnabled(false);
         return;
     }
+    ui.deleteButton->setEnabled(true);
     // get text
     std::string rootPath;
     ADM_pluginGetPath("x264",pluginVersion,rootPath);
@@ -421,12 +424,9 @@
   QObject::connect(buttonBox, SIGNAL(accepted()), &dialog, SLOT(accept()));
   QObject::connect(buttonBox, SIGNAL(rejected()), &dialog, SLOT(reject()));
 
-  QTextEdit *text=new QTextEdit;
-  text->setAcceptRichText(false);
+  QLineEdit *text=new QLineEdit;
+//  text->setAcceptRichText(false);
   
-  text->setMinimumHeight(32);
-  text->setMaximumHeight(32);
-
   text->setText("my profile");
   text->selectAll();
 
@@ -440,7 +440,7 @@
         ADM_info("Canceled");
         return NULL;
   }
-  QString fileName=text->toPlainText();
+  QString fileName=text->text();
   const char *out=fileName.toUtf8().constData();
   return ADM_strdup(out);
 }
@@ -470,34 +470,26 @@
 
 */
 void x264Dialog::deleteButton_pressed(void)
-{
-#if 0
-	x264Options options;
-	char *configDir = options.getUserConfigDirectory();
-	QString configFileName = QFileInfo(QString(configDir), ui.configurationComboBox->currentText() + ".xml").filePath();
-	QFile configFile(configFileName);
-
-	delete [] configDir;
-
-	if (GUI_Question(tr("Are you sure you wish to delete the selected configuration?").toUtf8().constData()) && configFile.exists())
-	{
-		disableGenericSlots = true;
-		configFile.remove();
-		ui.configurationComboBox->removeItem(ui.configurationComboBox->currentIndex());
-		disableGenericSlots = false;
-		ui.configurationComboBox->setCurrentIndex(0);	// default
-	}
-#else
-/*
-    const char *out="/tmp/foo.x264";
-     if(false==x264_encoder_jdeserialize(out,x264_encoder_param,&myCopy))
+{ 
+    int n=ui.configurationComboBox->currentIndex();
+    int m=ui.configurationComboBox->count();
+    if(n==m-1) // custom
     {
-        GUI_Error_HIG("Error","Cannot load preset");
-        ADM_error("Cannot read from %s\n",out);
-    }else       
-        upload();
-*/
-#endif
+        GUI_Error_HIG("Error","Cannot delete custom profile");
+        return;
+    }
+  QString preset=ui.configurationComboBox->itemText(n);
+  QString msg=QString("Do you really want to delete the ")+preset+
+            QString(" profile ?.\nIf it is a system profile it will be recreated next time.");
+  if(true==GUI_Confirmation_HIG("Delete preset","Delete",msg.toUtf8().constData()))
+  {
+    std::string rootPath;
+    ADM_pluginGetPath("x264",pluginVersion,rootPath);
+    QString text=QString("/")+ui.configurationComboBox->itemText(n);
+    text=QString(rootPath.c_str())+text+QString(".json");
+    unlink(text.toUtf8().constData());
+  }
+  updatePresetList();
 }
 
 



From mean at mail.berlios.de  Fri Apr  8 08:29:08 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Fri,  8 Apr 2011 08:29:08 +0200
Subject: [Avidemux-svn-commit] r7122 -
	branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src
Message-ID: <20110408062908.E84CA480ECF@sheep.berlios.de>

Author: mean
Date: 2011-04-08 08:29:08 +0200 (Fri, 08 Apr 2011)
New Revision: 7122

Modified:
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/avidemutils.cpp
Log:
[utils] Compute average bitrate from size and duration

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/avidemutils.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/avidemutils.cpp	2011-04-06 12:23:20 UTC (rev 7121)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/avidemutils.cpp	2011-04-08 06:29:08 UTC (rev 7122)
@@ -34,6 +34,7 @@
 bool     ADM_findMpegStartCode(uint8_t *start, uint8_t *end,uint8_t *outstartcode,uint32_t *offset);
 void     memcpyswap(uint8_t *dest, uint8_t *src, uint32_t size);
 uint32_t ADM_computeBitrate(uint32_t fps1000, uint32_t nbFrame, uint32_t sizeInMB);
+bool ADM_computeAverageBitrateFromDuration(uint64_t duration, uint32_t sizeInMB, uint32_t *avgInKbits);
 uint32_t ADM_UsecFromFps1000(uint32_t fps1000);
 uint32_t ADM_Fps1000FromUs(uint64_t us);
 //_________________________________________________
@@ -280,8 +281,9 @@
     *cur++=0;
     return out;
 }
-/*
-        Return average bitrate in bit/s
+/**
+    \fn ADM_computeBitrate
+    \brief         Return average bitrate in bit/s
 */
 uint32_t ADM_computeBitrate(uint32_t fps1000, uint32_t nbFrame, uint32_t sizeInMB)
 {
@@ -301,6 +303,28 @@
   vbr = (uint32_t) floor (db);
   return vbr;
 }
+/**
+    \fn ADM_computeBitrate
+    \brief         Return average bitrate in bit/s
+*/
+bool ADM_computeAverageBitrateFromDuration(uint64_t duration, uint32_t sizeInMB, uint32_t *avgInKbits)
+{
+    float f;
+    if(!duration) 
+    {
+        ADM_error("[ADM_computeBitrateFromDuration] No source duration!\n");
+        return false;
+    }
+    f=sizeInMB; 
+    f=f*1024*1024*8; // in bits
+    f*=1000*1000;
+    f/=duration;
+    *avgInKbits=(uint32_t)f;
+    return true;
+}
+/**
+        \fn ADM_UsecFromFps1000
+*/
 uint32_t ADM_UsecFromFps1000(uint32_t fps1000)
 {
 double f;



From mean at mail.berlios.de  Fri Apr  8 08:29:09 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Fri,  8 Apr 2011 08:29:09 +0200
Subject: [Avidemux-svn-commit] r7123 -
	branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreVideoEncoder/src
Message-ID: <20110408062910.0119C480ECF@sheep.berlios.de>

Author: mean
Date: 2011-04-08 08:29:09 +0200 (Fri, 08 Apr 2011)
New Revision: 7123

Modified:
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreVideoEncoder/src/ADM_coreVideoEncoderFFmpeg.cpp
Log:
[ffmpeg/encode] use utils to compute average bitrate

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreVideoEncoder/src/ADM_coreVideoEncoderFFmpeg.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreVideoEncoder/src/ADM_coreVideoEncoderFFmpeg.cpp	2011-04-08 06:29:08 UTC (rev 7122)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreVideoEncoder/src/ADM_coreVideoEncoderFFmpeg.cpp	2011-04-08 06:29:09 UTC (rev 7123)
@@ -27,7 +27,7 @@
 #endif
 
 #define LAVS(x) Settings.lavcSettings.x
-
+extern bool ADM_computeAverageBitrateFromDuration(uint64_t duration, uint32_t sizeInMB, uint32_t *avgInKbits);
 /**
     \fn ADM_coreVideoEncoderFFmpeg
     \brief Constructor
@@ -515,17 +515,14 @@
             else
             {
                 uint64_t duration=source->getInfo()->totalDuration; // in us
-                float f;
-                if(!duration) 
+                uint32_t avg;
+                if(false==ADM_computeAverageBitrateFromDuration(duration, Settings.params.finalsize,
+                                &avg))
                 {
                     printf("[ffMpeg4] No source duration!\n");
                     return false;
                 }
-                f=Settings.params.finalsize; 
-                f=f*1024*1024*8; // in bits
-                f*=1000*1000;
-                f/=duration;
-                averageBitrate=(uint32_t)f;
+                averageBitrate=(uint32_t)avg;
             }
 
         printf("[ffmpeg4] Average bitrate =%"LU" kb/s\n",averageBitrate/1000);



From mean at mail.berlios.de  Fri Apr  8 08:29:11 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Fri,  8 Apr 2011 08:29:11 +0200
Subject: [Avidemux-svn-commit] r7124 - in
	branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264:
	. qt4
Message-ID: <20110408062911.56DD8480ECF@sheep.berlios.de>

Author: mean
Date: 2011-04-08 08:29:11 +0200 (Fri, 08 Apr 2011)
New Revision: 7124

Modified:
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/ADM_x264.cpp
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/ADM_x264.h
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/ADM_x264Setup.cpp
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/qt4/Q_x264.cpp
Log:
[x264/qt4] Add 2pass size+average bitrate, mostly ok

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/ADM_x264.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/ADM_x264.cpp	2011-04-08 06:29:09 UTC (rev 7123)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/ADM_x264.cpp	2011-04-08 06:29:11 UTC (rev 7124)
@@ -45,8 +45,8 @@
         ADM_ENC_CAP_CBR+
         ADM_ENC_CAP_CQ+
         ADM_ENC_CAP_AQ+
-        0*ADM_ENC_CAP_2PASS+
-        0*ADM_ENC_CAP_2PASS_BR+
+        ADM_ENC_CAP_2PASS+
+        ADM_ENC_CAP_2PASS_BR+
         ADM_ENC_CAP_GLOBAL+
         0*ADM_ENC_CAP_SAME
     },
@@ -99,6 +99,8 @@
     seiUserDataLen=0;
     seiUserData=NULL;
     this->globalHeader=globalHeader;
+    passNumber=0;
+    logFile=NULL;
 }
 
 /**
@@ -179,8 +181,23 @@
 	  delete [] seiUserData;
 	  seiUserData=NULL;
   }
+  if(logFile)
+  {
+        ADM_dealloc(logFile);
+        logFile=NULL;
+  }
 }
+/**
+    \fn setPassAndLogFile
+*/
+bool         x264Encoder::setPassAndLogFile(int pass,const char *name)
+{
+    ADM_info("Initializing pass %d, log file =%s\n",pass,name);
+    logFile=ADM_strdup(name);
+    passNumber=pass;
+    return true;
 
+}
 /**
     \fn encode
 */
@@ -188,20 +205,24 @@
 {
     // 1 fetch a frame...
     uint32_t nb;
+
     // update
 again:    
+    bool gotFrame=true;
     if(source->getNextFrame(&nb,image)==false)
     {
         ADM_warning("[x264] Cannot get next image\n");
-        return false;
-    }
-    aprintf("x264 Incoming : %"LLU"us \n",image->Pts);
-    
-    // 2-preamble
-    if(false==preAmble(image))
+        gotFrame=false;
+        //return false;
+    }else
     {
-        ADM_warning("[x264] preAmble failed\n");
-        return false;
+        aprintf("x264 Incoming : %"LLU"us \n",image->Pts);    
+        // 2-preamble   
+        if(false==preAmble(image))
+        {
+            ADM_warning("[x264] preAmble failed\n");
+            return false;
+        }
     }
     //
       x264_nal_t        *nal;
@@ -210,11 +231,24 @@
 
       out->flags = 0;
       
-        int er=x264_encoder_encode (handle, &nal, &nbNal, &pic, &pic_out);
-        if(er<0)
+        int er;
+        if(false==gotFrame)     
         {
-          ADM_error ("[x264] Error encoding %d\n",er);
-          return false;
+            ADM_info("Flushing delayed frames\n");
+            er=x264_encoder_encode (handle, &nal, &nbNal, NULL, &pic_out);
+            if(er<=0)
+            {
+                ADM_info ("End of flush\n");
+                return false;
+            }
+        }else 
+        {
+            er=x264_encoder_encode (handle, &nal, &nbNal, &pic, &pic_out);
+            if(er<0)
+            {
+              ADM_error ("[x264] Error encoding %d\n",er);
+              return false;
+            }
         }
         if(!nbNal)
         {

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/ADM_x264.h
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/ADM_x264.h	2011-04-08 06:29:09 UTC (rev 7123)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/ADM_x264.h	2011-04-08 06:29:11 UTC (rev 7124)
@@ -46,6 +46,8 @@
                uint32_t        seiUserDataLen;
                uint8_t         *seiUserData ;
                bool            firstIdr;
+               uint32_t        passNumber;
+               char            *logFile;
 
                
 public:
@@ -58,6 +60,9 @@
 virtual        bool         getExtraData(uint32_t *l,uint8_t **d) {*l=extraDataLen;*d=extraData;return true;}
 virtual        bool         isDualPass(void) ;
 
+virtual        bool         setPassAndLogFile(int pass,const char *name);
+
+
 };
 
 #endif

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/ADM_x264Setup.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/ADM_x264Setup.cpp	2011-04-08 06:29:09 UTC (rev 7123)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/ADM_x264Setup.cpp	2011-04-08 06:29:11 UTC (rev 7124)
@@ -42,7 +42,7 @@
 #define MMSET(x) memset(&(x),0,sizeof(x))
 
 extern x264_encoder x264Settings;
-
+extern bool ADM_computeAverageBitrateFromDuration(uint64_t duration, uint32_t sizeInMB, uint32_t *avgInKbits);;
 /**
     \fn setup
 */
@@ -142,7 +142,56 @@
 
   switch(x264Settings.general.params.mode)
   {
-      
+      case COMPRESS_2PASS:
+      case COMPRESS_2PASS_BITRATE:
+                        uint32_t bitrate;
+                        if(passNumber!=1 && passNumber!=2)
+                        {
+                                ADM_error("No pass number specified! (%d)\n",(int)passNumber);
+                                return false;
+                         }
+                        ADM_info("Starting pass :%d\n",passNumber);
+                        if(x264Settings.general.params.mode==COMPRESS_2PASS)
+                        {
+                            uint64_t duration=source->getInfo()->totalDuration; // in us
+                            uint32_t avg;
+                            if(false==ADM_computeAverageBitrateFromDuration(duration, 
+                                            x264Settings.general.params.finalsize,
+                                            &avg))
+                            {
+                                ADM_error("[x264] No source duration!\n");
+                                return false;
+                            }
+                            bitrate=(uint32_t)avg;
+                        }
+                        else
+                                bitrate=x264Settings.general.params.avg_bitrate;
+                        ADM_info("Using average bitrate of %d kb/s\n",(int)bitrate);
+                        param.rc.i_rc_method = X264_RC_ABR;
+                        param.rc.i_bitrate =  bitrate;
+                        if(passNumber==1)
+                        {
+                             param.rc.b_stat_write=1;
+                             param.rc.b_stat_read=0;
+                             param.rc.psz_stat_out=logFile;
+#warning FIXME
+#if 0
+                             if(x264Settings.)
+                                   	x264_param_apply_fastfirstpass(&_param);
+#endif
+ 
+                        }else
+                        {
+                             param.rc.b_stat_write=0;
+                             param.rc.b_stat_read=1;
+                             param.rc.psz_stat_in=logFile;
+                             if(!ADM_fileExist(logFile))
+                             {
+                                   ADM_error("Logfile %s does not exist \n",logFile);
+                                   return false;
+                             }
+                        }
+                        break;
       case COMPRESS_AQ: param.rc.i_rc_method = X264_RC_CRF;
                         param.rc.f_rf_constant = x264Settings.general.params.qz;
                         break;
@@ -172,6 +221,7 @@
   param.b_vfr_input=0;
 
   dumpx264Setup(&param);
+  ADM_info("Creating x264 encoder\n");
   handle = x264_encoder_open (&param);
   if (!handle)
   {

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/qt4/Q_x264.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/qt4/Q_x264.cpp	2011-04-08 06:29:09 UTC (rev 7123)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/qt4/Q_x264.cpp	2011-04-08 06:29:11 UTC (rev 7124)
@@ -284,8 +284,8 @@
             case 0: ENCODING(mode)=COMPRESS_CBR; ENCODING(bitrate)=ui.targetRateControlSpinBox->value();break;
             case 1: ENCODING(mode)=COMPRESS_CQ;ENCODING(qz)=ui.quantiserSpinBox->value();break;
             case 2: ENCODING(mode)=COMPRESS_AQ;ENCODING(qz)=ui.quantiserSpinBox->value();break;
-            case 3: ADM_assert(0);
-            case 4: ADM_assert(0);
+            case 3: ENCODING(mode)=COMPRESS_2PASS;ENCODING(finalsize)=ui.targetRateControlSpinBox->value();;break;
+            case 4: ENCODING(mode)=COMPRESS_2PASS_BITRATE;ENCODING(avg_bitrate)=ui.targetRateControlSpinBox->value();;break;
           }
           return true;
 }



From mean at mail.berlios.de  Sat Apr  9 08:54:00 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Sat,  9 Apr 2011 08:54:00 +0200
Subject: [Avidemux-svn-commit] r7126 - in
	branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264:
	. qt4
Message-ID: <20110409065400.7C583480B78@sheep.berlios.de>

Author: mean
Date: 2011-04-09 08:53:59 +0200 (Sat, 09 Apr 2011)
New Revision: 7126

Modified:
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/ADM_x264.cpp
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/ADM_x264Setup.cpp
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/qt4/Q_x264.cpp
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/x264_encoder.conf
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/x264_encoder.h
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/x264_encoder_desc.cpp
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/x264_encoder_json.cpp
Log:
[x264] Add fast first pass binding

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/ADM_x264.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/ADM_x264.cpp	2011-04-08 14:09:29 UTC (rev 7125)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/ADM_x264.cpp	2011-04-09 06:53:59 UTC (rev 7126)
@@ -51,6 +51,7 @@
         0*ADM_ENC_CAP_SAME
     },
     99, // Threads : auto
+    true // Fast first pass
     },
     31, // Level
     {1,1}, // Sar width/height

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/ADM_x264Setup.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/ADM_x264Setup.cpp	2011-04-08 14:09:29 UTC (rev 7125)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/ADM_x264Setup.cpp	2011-04-09 06:53:59 UTC (rev 7126)
@@ -219,7 +219,23 @@
 
   // We do pseudo cfr ...
   param.b_vfr_input=0;
-
+ //
+  if(true==x264Settings.general.fast_first_pass)
+  {
+    if(passNumber==1)
+    {
+        switch(x264Settings.general.params.mode)
+        {
+            case COMPRESS_2PASS:
+            case COMPRESS_2PASS_BITRATE:
+                     ADM_info("Appling fast first pass settings\n");
+                     x264_param_apply_fastfirstpass(&param);
+                    break;
+            default:
+                    break;
+        }
+    }
+  }
   dumpx264Setup(&param);
   ADM_info("Creating x264 encoder\n");
   handle = x264_encoder_open (&param);

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/qt4/Q_x264.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/qt4/Q_x264.cpp	2011-04-08 14:09:29 UTC (rev 7125)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/qt4/Q_x264.cpp	2011-04-09 06:53:59 UTC (rev 7126)
@@ -140,7 +140,8 @@
 bool x264Dialog::upload(void)
 {
           
-          MK_CHECKBOX(fastFirstPassCheckBox,analyze.fast_pskip);
+          MK_CHECKBOX(fastFirstPassCheckBox,general.fast_first_pass);
+          MK_CHECKBOX(fastPSkipCheckBox,analyze.fast_pskip);
           MK_CHECKBOX(weightedPredictCheckBox,analyze.weighted_bipred);
           MK_CHECKBOX(dct8x8CheckBox,analyze.b_8x8);
           MK_CHECKBOX(i4x4CheckBox,analyze.b_i4x4);
@@ -243,7 +244,8 @@
 #define MK_MENU(x,y)        myCopy.y=ui.x->currentIndex()
 bool x264Dialog::download(void)
 {
-          MK_CHECKBOX(fastFirstPassCheckBox,analyze.fast_pskip);
+          MK_CHECKBOX(fastFirstPassCheckBox,general.fast_first_pass);
+          MK_CHECKBOX(fastPSkipCheckBox,analyze.fast_pskip);
           MK_CHECKBOX(weightedPredictCheckBox,analyze.weighted_bipred);
           MK_CHECKBOX(dct8x8CheckBox,analyze.b_8x8);
           MK_CHECKBOX(i4x4CheckBox,analyze.b_i4x4);

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/x264_encoder.conf
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/x264_encoder.conf	2011-04-08 14:09:29 UTC (rev 7125)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/x264_encoder.conf	2011-04-09 06:53:59 UTC (rev 7126)
@@ -2,6 +2,7 @@
 general{
 video_encode:params;
 uint32_t:threads;
+bool:fast_first_pass;
 }
 uint32_t:level
 vui{

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/x264_encoder.h
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/x264_encoder.h	2011-04-08 14:09:29 UTC (rev 7125)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/x264_encoder.h	2011-04-09 06:53:59 UTC (rev 7126)
@@ -5,6 +5,7 @@
 struct  {
 	COMPRES_PARAMS params;
 	uint32_t threads;
+	bool fast_first_pass;
 }general;
 uint32_t level;
 struct  {

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/x264_encoder_desc.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/x264_encoder_desc.cpp	2011-04-08 14:09:29 UTC (rev 7125)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/x264_encoder_desc.cpp	2011-04-09 06:53:59 UTC (rev 7126)
@@ -2,6 +2,7 @@
 extern const ADM_paramList x264_encoder_param[]={
  {"general.params",offsetof(x264_encoder,general.params),"COMPRES_PARAMS",ADM_param_video_encode},
  {"general.threads",offsetof(x264_encoder,general.threads),"uint32_t",ADM_param_uint32_t},
+ {"general.fast_first_pass",offsetof(x264_encoder,general.fast_first_pass),"bool",ADM_param_bool},
  {"level",offsetof(x264_encoder,level),"uint32_t",ADM_param_uint32_t},
  {"vui.sar_height",offsetof(x264_encoder,vui.sar_height),"uint32_t",ADM_param_uint32_t},
  {"vui.sar_width",offsetof(x264_encoder,vui.sar_width),"uint32_t",ADM_param_uint32_t},

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/x264_encoder_json.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/x264_encoder_json.cpp	2011-04-08 14:09:29 UTC (rev 7125)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/x264_encoder_json.cpp	2011-04-09 06:53:59 UTC (rev 7126)
@@ -8,6 +8,7 @@
 json.addNode("general");
 json.addCompressParam("params",key->general.params);
 json.addUint32("threads",key->general.threads);
+json.addBool("fast_first_pass",key->general.fast_first_pass);
 json.endNode();
 json.addUint32("level",key->level);
 json.addNode("vui");



From mean at mail.berlios.de  Sat Apr  9 09:02:20 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Sat,  9 Apr 2011 09:02:20 +0200
Subject: [Avidemux-svn-commit] r7127 -
	branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/preset
Message-ID: <20110409070220.88ED4480EC6@sheep.berlios.de>

Author: mean
Date: 2011-04-09 09:02:19 +0200 (Sat, 09 Apr 2011)
New Revision: 7127

Modified:
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/preset/PSP.json
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/preset/iPhone.json
Log:
[x264] update preset

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/preset/PSP.json
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/preset/PSP.json	2011-04-09 06:53:59 UTC (rev 7126)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/preset/PSP.json	2011-04-09 07:02:19 UTC (rev 7127)
@@ -1,6 +1,8 @@
 {
 	"general" : {
-		"threads" : 99
+		"params" : "CBR=1000",
+		"threads" : 99,
+		"fast_first_pass" : true
 	},
 	"level" : 31,
 	"vui" : {
@@ -57,4 +59,4 @@
 		"mb_tree" : true,
 		"lookahead" : 40
 	}
-}
\ No newline at end of file
+}

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/preset/iPhone.json
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/preset/iPhone.json	2011-04-09 06:53:59 UTC (rev 7126)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/preset/iPhone.json	2011-04-09 07:02:19 UTC (rev 7127)
@@ -1,6 +1,8 @@
 {
 	"general" : {
-		"threads" : 99
+		"params" : "CBR=1000",
+		"threads" : 99,
+		"fast_first_pass" : true
 	},
 	"level" : 31,
 	"vui" : {
@@ -57,4 +59,4 @@
 		"mb_tree" : true,
 		"lookahead" : 40
 	}
-}
\ No newline at end of file
+}



From mean at mail.berlios.de  Sat Apr  9 09:02:21 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Sat,  9 Apr 2011 09:02:21 +0200
Subject: [Avidemux-svn-commit] r7128 -
	branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/qt4
Message-ID: <20110409070221.BA085480EC6@sheep.berlios.de>

Author: mean
Date: 2011-04-09 09:02:21 +0200 (Sat, 09 Apr 2011)
New Revision: 7128

Modified:
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/qt4/Q_x264.cpp
Log:
[x264] Replace confirmation dialog (preset)

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/qt4/Q_x264.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/qt4/Q_x264.cpp	2011-04-09 07:02:19 UTC (rev 7127)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/qt4/Q_x264.cpp	2011-04-09 07:02:21 UTC (rev 7128)
@@ -460,6 +460,15 @@
   std::string rootPath;
   ADM_pluginGetPath("x264",pluginVersion,rootPath);
   std::string fullpath=rootPath+std::string("/")+out+std::string(".json");
+
+  if(ADM_fileExist(fullpath.c_str()))
+  {
+        if(false==GUI_Confirmation_HIG("Overwrite","Replace the following preset ?:",out))
+        {
+            ADM_dealloc(out);
+            return;
+        }
+  }
   ADM_dealloc(out);
   if(false==x264_encoder_jserialize(fullpath.c_str(),&myCopy))
   {



From mean at mail.berlios.de  Mon Apr 11 12:04:29 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Mon, 11 Apr 2011 12:04:29 +0200
Subject: [Avidemux-svn-commit] r7129 -
	branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264
Message-ID: <20110411100430.2EB064810C0@sheep.berlios.de>

Author: mean
Date: 2011-04-11 12:04:29 +0200 (Mon, 11 Apr 2011)
New Revision: 7129

Modified:
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/CMakeLists.txt
Log:
[x264] Fix preset install

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/CMakeLists.txt
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/CMakeLists.txt	2011-04-09 07:02:21 UTC (rev 7128)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoEncoder/x264/CMakeLists.txt	2011-04-11 10:04:29 UTC (rev 7129)
@@ -26,20 +26,21 @@
   endif(DO_QT4)
   #-----------------------/QT4 VERSION---------------------
   #-----------------------GTK or CLI VERSION---------------------
-  if(DO_GTK or DO_CLI)
+  if((DO_GTK) OR (DO_CLI))
     ADD_VIDEO_ENCODER_(ADM_ve_x264_other   ADM_x264_noui.cpp ${x264_SRCS})
     TARGET_LINK_LIBRARIES(ADM_ve_x264_other x264 )
     INIT_VIDEO_ENCODER(ADM_ve_x264_other)
     INSTALL_VIDEO_ENCODER(ADM_ve_x264_other)
-  endif(DO_GTK or DO_CLI)
+  endif((DO_GTK) OR (DO_CLI))
+  # ------------- PRESET -----------
+  if((DO_GTK) OR (DO_CLI) OR (DO_QT4))
+    SET(PRESET_DIR "${AVIDEMUX_LIB_DIR}/ADM_plugins6/pluginSettings/x264/1/")
+
+    FILE(GLOB json_files ${CMAKE_CURRENT_SOURCE_DIR}/preset/*.json)
+    message(STATUS "Presets found : ${json_files}")
+    install(FILES ${json_files} DESTINATION "${PRESET_DIR}")
+  endif((DO_GTK) OR (DO_CLI) OR (DO_QT4))
 ELSE(X264_FOUND)
   MESSAGE(STATUS "x264 disabled.")
 ENDIF(X264_FOUND)
 
-if(DO_GTK or DO_CLI or DO_QT4)
-SET(PRESET_DIR "${AVIDEMUX_LIB_DIR}/ADM_plugins6/pluginSettings/x264/1/")
-
-FILE(GLOB json_files ${CMAKE_CURRENT_SOURCE_DIR}/preset/*.json)
-install(FILES ${json_files} DESTINATION "${PRESET_DIR}")
-endif(DO_GTK or DO_CLI or DO_QT4)
-



From mean at mail.berlios.de  Mon Apr 11 12:04:31 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Mon, 11 Apr 2011 12:04:31 +0200
Subject: [Avidemux-svn-commit] r7130 -
	branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoFilters/Srt
Message-ID: <20110411100431.2EFE34810C0@sheep.berlios.de>

Author: mean
Date: 2011-04-11 12:04:30 +0200 (Mon, 11 Apr 2011)
New Revision: 7130

Modified:
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoFilters/Srt/ADM_vidSRT.cpp
Log:
[sub/plugin] Use ADM_fopen rather then fopen

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoFilters/Srt/ADM_vidSRT.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoFilters/Srt/ADM_vidSRT.cpp	2011-04-11 10:04:29 UTC (rev 7129)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_videoFilters/Srt/ADM_vidSRT.cpp	2011-04-11 10:04:30 UTC (rev 7130)
@@ -185,7 +185,7 @@
 uint8_t	ADMVideoSubtitle::loadSubtitle( void )
 {
 unsigned char c,d;
-			_fd=fopen((char *)_conf->_subname,"rt");
+			_fd=ADM_fopen((char *)_conf->_subname,"rt");
 			if(!_fd)
 			{
                           GUI_Error_HIG(QT_TR_NOOP("Could not open subtitle file"), NULL);



From mean at mail.berlios.de  Mon Apr 11 14:33:23 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Mon, 11 Apr 2011 14:33:23 +0200
Subject: [Avidemux-svn-commit] r7131 -
	branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreVideoEncoder/src
Message-ID: <20110411123323.871B44803FE@sheep.berlios.de>

Author: mean
Date: 2011-04-11 14:33:23 +0200 (Mon, 11 Apr 2011)
New Revision: 7131

Modified:
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreVideoEncoder/src/ADM_coreVideoEncoder.cpp
Log:
[coreVideoEncoder] Dont create system plugin path

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreVideoEncoder/src/ADM_coreVideoEncoder.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreVideoEncoder/src/ADM_coreVideoEncoder.cpp	2011-04-11 10:04:30 UTC (rev 7130)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreVideoEncoder/src/ADM_coreVideoEncoder.cpp	2011-04-11 12:33:23 UTC (rev 7131)
@@ -143,12 +143,8 @@
     std::stringstream out;
     out << pluginVersion;
     version=out.str();
-
-    ADM_mkdir(path.c_str());
     path=path+slash+std::string(pluginName);
-    ADM_mkdir(path.c_str());
     path=path+slash+version;
-    ADM_mkdir(path.c_str());
     rootPath=path;
     ADM_info("System Plugin preset path : %s\n",rootPath.c_str());
     return true;
@@ -192,6 +188,7 @@
         ADM_info("No preset found\n");
         return true;
     }
+    ADM_info("Found %d files\n",(int)nb);
     for( int i=0;i<nb;i++)
     {
         std::string s=std::string(list[i]);



From mean at mail.berlios.de  Mon Apr 11 18:17:22 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Mon, 11 Apr 2011 18:17:22 +0200
Subject: [Avidemux-svn-commit] r7132 -
	branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreVideoEncoder/src
Message-ID: <20110411161722.4A0E54813A4@sheep.berlios.de>

Author: mean
Date: 2011-04-11 18:17:21 +0200 (Mon, 11 Apr 2011)
New Revision: 7132

Modified:
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreVideoEncoder/src/ADM_coreVideoEncoder.cpp
Log:
[coreVideoEncoder] Use correct separator slash/backslash depending on the platform

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreVideoEncoder/src/ADM_coreVideoEncoder.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreVideoEncoder/src/ADM_coreVideoEncoder.cpp	2011-04-11 12:33:23 UTC (rev 7131)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreVideoEncoder/src/ADM_coreVideoEncoder.cpp	2011-04-11 16:17:21 UTC (rev 7132)
@@ -25,6 +25,11 @@
 #include "libavcodec/avcodec.h"
 }
 
+#ifdef __WIN32
+const std::string slash=std::string("\\");
+#else
+const std::string slash=std::string("/");
+#endif
 /**
     \fn ADM_coreVideoEncoder
 */                          
@@ -137,8 +142,6 @@
 {
     
     std::string path=std::string(ADM_getSystemPluginSettingsDir());
-
-    std::string slash=std::string("/");
     std::string version;
     std::stringstream out;
     out << pluginVersion;
@@ -156,7 +159,6 @@
 bool ADM_pluginGetPath(const std::string pluginName,int pluginVersion,std::string &rootPath)
 {
     std::string path=std::string(ADM_getUserPluginSettingsDir());
-    std::string slash=std::string("/");
     std::string version;
     std::stringstream out;
     out << pluginVersion;



From mean at mail.berlios.de  Mon Apr 11 19:34:01 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Mon, 11 Apr 2011 19:34:01 +0200
Subject: [Avidemux-svn-commit] r7133 -
	branches/avidemux_2.6_branch_mean/avidemux_core/ADM_core/src
Message-ID: <20110411173401.F002F4813C3@sheep.berlios.de>

Author: mean
Date: 2011-04-11 19:34:01 +0200 (Mon, 11 Apr 2011)
New Revision: 7133

Modified:
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_core/src/ADM_fileio.cpp
Log:
[core] fix system folder name (win32, plugin and auto)

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_core/src/ADM_fileio.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_core/src/ADM_fileio.cpp	2011-04-11 16:17:21 UTC (rev 7132)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_core/src/ADM_fileio.cpp	2011-04-11 17:34:01 UTC (rev 7133)
@@ -225,7 +225,7 @@
 {
 	if (ADM_autodir )
 		return ADM_autodir;
-    ADM_autodir = ADM_getInstallRelativePath("lib", "ADM_plugins6", "autoScripts");
+    ADM_autodir = ADM_getInstallRelativePath(ADM_RELATIVE_LIB_DIR, "ADM_plugins6", "autoScripts");
 	return ADM_autodir;
 }
 /**
@@ -235,7 +235,7 @@
 const char *ADM_getSystemPluginSettingsDir(void)
 {
     if(ADM_systemPluginSettings) return ADM_systemPluginSettings;
-    ADM_systemPluginSettings=ADM_getInstallRelativePath("lib", "ADM_plugins6", "pluginSettings");
+    ADM_systemPluginSettings=ADM_getInstallRelativePath(ADM_RELATIVE_LIB_DIR, "ADM_plugins6", "pluginSettings");
     return ADM_systemPluginSettings;
 }
 /**



From mean at mail.berlios.de  Mon Apr 11 20:30:14 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Mon, 11 Apr 2011 20:30:14 +0200
Subject: [Avidemux-svn-commit] r7134 -
	branches/avidemux_2.6_branch_mean/avidemux_core/ADM_core/src
Message-ID: <20110411183014.E82954813F0@sheep.berlios.de>

Author: mean
Date: 2011-04-11 20:30:14 +0200 (Mon, 11 Apr 2011)
New Revision: 7134

Modified:
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_core/src/ADM_fileio.cpp
Log:
[Core/fileio] Use ADM_fopen when copying file, else it wont work on win32

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_core/src/ADM_fileio.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_core/src/ADM_fileio.cpp	2011-04-11 17:34:01 UTC (rev 7133)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_core/src/ADM_fileio.cpp	2011-04-11 18:30:14 UTC (rev 7134)
@@ -735,13 +735,13 @@
 */
 uint8_t ADM_copyFile(const char *source, const char *target)
 {
-    FILE *fin=fopen(source,"rb");
+    FILE *fin=ADM_fopen(source,"rb");
     if(!fin)
     {
         ADM_error("Cannot open %s for reading\n",source);
         return false;
     }
-    FILE *fout=fopen(target,"wb");
+    FILE *fout=ADM_fopen(target,"wb");
     if(!fout)
     {
         fclose(fin);



From mean at mail.berlios.de  Tue Apr 12 07:59:37 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Tue, 12 Apr 2011 07:59:37 +0200
Subject: [Avidemux-svn-commit] r7135 -
	branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreTinyPy/src
Message-ID: <20110412055937.D1A7A480F19@sheep.berlios.de>

Author: mean
Date: 2011-04-12 07:59:37 +0200 (Tue, 12 Apr 2011)
New Revision: 7135

Modified:
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreTinyPy/src/tinypy.cpp
Log:
[tinypy] Use ADM_fopen so that it works on win32

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreTinyPy/src/tinypy.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreTinyPy/src/tinypy.cpp	2011-04-11 18:30:14 UTC (rev 7134)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreTinyPy/src/tinypy.cpp	2011-04-12 05:59:37 UTC (rev 7135)
@@ -123,6 +123,12 @@
 // MEANX : Redirect printf
 bool pyPrintf(const char *fmt,...);
 #define printf pyPrintf
+// MEANX : Need to use ADM_fopen for WIN32 support
+extern "C"
+{
+        FILE *ADM_fopen(const char *filename,const char *access);
+}
+#define fopen ADM_fopen
 
 /*  #define tp_malloc(x) calloc((x),1)
     #define tp_realloc(x,y) realloc(x,y)



From mean at mail.berlios.de  Wed Apr 13 07:33:06 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Wed, 13 Apr 2011 07:33:06 +0200
Subject: [Avidemux-svn-commit] r7136 -
	branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src
Message-ID: <20110413053307.0C1DF481342@sheep.berlios.de>

Author: mean
Date: 2011-04-13 07:33:06 +0200 (Wed, 13 Apr 2011)
New Revision: 7136

Modified:
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/prefs.cpp
Log:
[prefs] Dont use xmlParseFile but xmlParseMemory so that we can use utf aware ADM_fopen to open the file

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/prefs.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/prefs.cpp	2011-04-12 05:59:37 UTC (rev 7135)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/prefs.cpp	2011-04-13 05:33:06 UTC (rev 7136)
@@ -1,7 +1,21 @@
+/***************************************************************************
+   
+    \file  prefs.cpp
+    \brief 
+    copyright            : (C) 2001 by mean
+    email                : fixounet at free.fr
+ ***************************************************************************/
 
 /***************************************************************************
+ *                                                                         *
+ *   This program is free software; you can redistribute it and/or modify  *
+ *   it under the terms of the GNU General Public License as published by  *
+ *   the Free Software Foundation; either version 2 of the License, or     *
+ *   (at your option) any later version.                                   *
+ *                                                                         *
  ***************************************************************************/
 
+
 /***************************************************************************
  *                                                                         *
  *   This program is free software; you can redistribute it and/or modify  *
@@ -249,38 +263,54 @@
 	
 }
 
+#define FILE_SIZE_MAX (20*1024)
+/**
+    \fn load
+    \brief load prefs from file..
+*/
 int preferences::load(){
    xmlNodePtr p;
-   char *rcfile;
    char *home;
    char *dir_adm;
+   std::string path;
    
    char buf[1024];
+   char fileInMemory[FILE_SIZE_MAX];
    DIR   *dir;
 
-        dir_adm=ADM_getBaseDir();
-        if(!dir_adm) return RC_FAILED;
+    
 
-        rcfile=new char[strlen(dir_adm)+4+strlen(CONFIG)];
-        strcpy(rcfile,dir_adm);
-        strcat(rcfile,"/");
-        strcat(rcfile,CONFIG);
+    dir_adm=ADM_getBaseDir();
+    if(!dir_adm) return RC_FAILED;
 
-        
-        // Now build the filename
-	if( access(rcfile,R_OK) == -1 ){
-		if( errno != ENOENT )
-			fprintf(stderr,"can't read(%s): %d (%s)\n",
-				rcfile, errno, strerror(errno) );
-                delete [] rcfile;
+    path=string(dir_adm);
+    path=path+std::string("/");
+    path=path+std::string(CONFIG);
+    ADM_info("Loading prefs from %s\n",path.c_str());
+    // exist ?
+    if(!ADM_fileExist(path.c_str()))
+    {
+		fprintf(stderr,"can't read(%s): %d (%s)\n",
+				path.c_str(), errno, strerror(errno) );
 		return RC_FAILED;
-	}
-	if( !(xdoc = xmlParseFile(rcfile)) ){
-		fprintf(stderr,"can't parse \"rcfile\".\n");
-                delete [] rcfile;
+    }
+    FILE *o=ADM_fopen(path.c_str(),"r");
+    if(!o)
+    {
+        ADM_error("Cannot open pref file\n");
+        return RC_FAILED;
+    }
+    int sz=fread(fileInMemory,1,FILE_SIZE_MAX,o);
+    // Read into memory...
+    fclose(o);
+    //ADM_info("prefs is %d bytes long\n",sz);
+    // Parse...
+    xdoc=xmlParseMemory(fileInMemory,sz);
+    if(!xdoc)
+    {
+		fprintf(stderr,"can't parse "CONFIG".\n");
 		return RC_FAILED;
 	}
-        delete [] rcfile;
 	erase_blank_nodes(xdoc->children);
 	p = xdoc->children; // ->avidemux
 	buf[0] = '\0';
@@ -341,7 +371,7 @@
 	//    check ranges foreach val
 	//       set to min if  <min or to max if >max - generate warning
 	//    warn about unused options
-	printf("Preferences found and loaded\n");
+	ADM_info("Preferences found and loaded\n");
 	return RC_OK;
 }
 



From mean at mail.berlios.de  Wed Apr 13 07:33:08 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Wed, 13 Apr 2011 07:33:08 +0200
Subject: [Avidemux-svn-commit] r7137 - in
	branches/avidemux_2.6_branch_mean/avidemux_core:
	ADM_core/include ADM_core/src ADM_coreUtils/src
Message-ID: <20110413053308.28B0E481342@sheep.berlios.de>

Author: mean
Date: 2011-04-13 07:33:07 +0200 (Wed, 13 Apr 2011)
New Revision: 7137

Modified:
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_core/include/ADM_assert.h
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_core/src/ADM_fileio.cpp
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/prefs.cpp
Log:
[core] use ADM_unlink, rewrite prefs load/save to be safe on win32

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_core/include/ADM_assert.h
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_core/include/ADM_assert.h	2011-04-13 05:33:06 UTC (rev 7136)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_core/include/ADM_assert.h	2011-04-13 05:33:07 UTC (rev 7137)
@@ -54,6 +54,7 @@
 int             ADM_fclose (FILE *file);
 uint8_t         ADM_fileExist(const char *name);
 uint8_t         ADM_mkdir(const char *name);
+bool            ADM_eraseFile(const char *name);
 
 /* Replacements for memory allocation functions */
 extern void     *ADM_alloc(size_t size);

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_core/src/ADM_fileio.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_core/src/ADM_fileio.cpp	2011-04-13 05:33:06 UTC (rev 7136)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_core/src/ADM_fileio.cpp	2011-04-13 05:33:07 UTC (rev 7137)
@@ -80,7 +80,19 @@
 {
 	return fwrite(ptr,size,n,sstream);
 }
-
+/**
+    \fn ADM_eraseFile
+*/
+bool ADM_eraseFile(const char *file)
+{
+    if(!unlink(file))
+        return true;
+    return false;
+}
+/**
+    \fn ADM_fopen
+    \brief utf8 aware fopen, so that we can use utf8 string even on win32
+*/
 FILE *ADM_fopen(const char *file, const char *mode)
 {
 #ifdef __MINGW32__

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/prefs.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/prefs.cpp	2011-04-13 05:33:06 UTC (rev 7136)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/prefs.cpp	2011-04-13 05:33:07 UTC (rev 7137)
@@ -168,6 +168,9 @@
 int xmlSaveNoEmptyTags  = 1;      /* save empty tags as <empty></empty> */
 int xmlIndentTreeOutput = 1;      /* try to indent the tree dumps */
 #endif
+
+
+
 void erase_blank_nodes(xmlNodePtr cur){
   /* erase all blank-nodes recursive; they deny IndentTreeOutput !!! */
   xmlNodePtr run = cur;
@@ -242,27 +245,6 @@
 
 #include "prefs.h"
 
-preferences::preferences(){
-	internal_lastfiles[0] = internal_lastfiles[1] = NULL;
-	internal_lastfiles[2] = internal_lastfiles[3] = NULL;
-	internal_lastfiles[4] = NULL;
-	
-	xdoc = NULL;
-	
-}
-
-preferences::~preferences(){
-  unsigned int idx;
-	for( idx=0; idx < 4; idx++ ){
-		if( internal_lastfiles[idx] )
-			ADM_dealloc(internal_lastfiles[idx]);
-	}
-	
-	if( xdoc )
-		xmlFreeDoc(xdoc);
-	
-}
-
 #define FILE_SIZE_MAX (20*1024)
 /**
     \fn load
@@ -375,7 +357,9 @@
 	return RC_OK;
 }
 
-
+/**
+    \fn save
+*/
 int preferences::save(){
    xmlNodePtr n;
    char buf[1024];
@@ -416,24 +400,26 @@
 	}
 	return save_xml_to_file();
 }
+/**
+    \fn save_xml_to_file
 
-int preferences::save_xml_to_file(){
+*/
+int preferences::save_xml_to_file()
+{
    char *dir_adm;
-   char *rcfile;
-   char *rcfilenew;
+   std::string path,path_new;
 
-        dir_adm=ADM_getBaseDir();
-        if(!dir_adm) return RC_FAILED;
+    dir_adm=ADM_getBaseDir();
+    if(!dir_adm) return RC_FAILED;
 
-        rcfile=new char[strlen(dir_adm)+4+strlen(CONFIG)];
-        strcpy(rcfile,dir_adm);
-        strcat(rcfile,"/");
-        strcat(rcfile,CONFIG);
+    path=std::string(dir_adm);
+    path=path+std::string("/");
+    path=path+std::string(CONFIG);
 
 
-#if defined(__MINGW32__)
+#if 0 // Why ? defined(__MINGW32__)
 	xmlSetDocCompressMode(xdoc,9);
-	if( xmlSaveFormatFile(rcfile,xdoc,1) == -1 ){
+	if( xmlSaveFormatFile(path.c_str(),xdoc,1) == -1 ){
            fprintf(stderr,"\ncan't save xml tree to file. Filesystem full?\n\n");
            delete [] rcfile;
 	   return RC_FAILED;
@@ -443,44 +429,47 @@
 
 #else
 	
-        
-         rcfilenew=new char[strlen(rcfile)+5];
-        strcpy(rcfilenew,rcfile);
-        strcat(rcfilenew,".new");
-        if( unlink(rcfilenew) == -1 && errno != ENOENT ){
-           fprintf(stderr,"can't unlink(%s): %d (%s)\n",
-                   rcfilenew, errno, strerror(errno));
-           delete [] rcfilenew;
-           return RC_FAILED;
-        }
-	xmlSetDocCompressMode(xdoc,9);
-	if( qxmlSaveFormatFile(rcfilenew,xdoc,1) == -1 ){
-           delete [] rcfilenew;
-           delete [] rcfile;
+    path_new=path+std::string(".new");
+    ADM_eraseFile(path_new.c_str());
+    xmlSetDocCompressMode(xdoc,9);
+	if( qxmlSaveFormatFile(path_new.c_str(),xdoc,1) == -1 )
+    {
 	   return RC_FAILED;
 	}
-
-        if( unlink(rcfile) == -1 && errno != ENOENT ){
-           fprintf(stderr,"can't unlink(%s): %d (%s)\n",
-                   rcfile, errno, strerror(errno));
-           delete [] rcfilenew;
-           delete [] rcfile;
-           return RC_FAILED;
-        }
-        if( link(rcfilenew,rcfile) == -1 ){
-           fprintf(stderr,"can't create \"%s\": %d (%s)\n",
-                   rcfile, errno, strerror(errno));
-           delete [] rcfilenew;
-           delete [] rcfile;
-           return RC_FAILED;
-        }
-        unlink(rcfilenew); // rc/errno handling is done on next call ;-)
-        delete [] rcfilenew;
-        delete [] rcfile;
+    ADM_eraseFile(path.c_str());
+    if(false==ADM_copyFile(path_new.c_str(),path.c_str()))
+    {
+        ADM_error("Cannot copy %s to %s\n",path_new.c_str(),path.c_str());
+    }
+    ADM_eraseFile(path_new.c_str());
 	return RC_OK;
 #endif
 }
+/**
+    \fn ctor
+*/
+preferences::preferences(){
+	internal_lastfiles[0] = internal_lastfiles[1] = NULL;
+	internal_lastfiles[2] = internal_lastfiles[3] = NULL;
+	internal_lastfiles[4] = NULL;
+	
+	xdoc = NULL;
+	
+}
 
+preferences::~preferences(){
+  unsigned int idx;
+	for( idx=0; idx < 4; idx++ ){
+		if( internal_lastfiles[idx] )
+			ADM_dealloc(internal_lastfiles[idx]);
+	}
+	
+	if( xdoc )
+		xmlFreeDoc(xdoc);
+	
+}
+
+
 /*
 int preferences::get(options option, uint8_t *val){
    unsigned int x;
@@ -978,12 +967,17 @@
 #endif
 	return (const char**)internal_lastfiles;
 }
+/**
+    \fn initPrefs
+*/
 int initPrefs(  void )
 {
   prefs = new preferences();
   return 1;
 }
-
+/**
+    \fn destroyPrefs
+*/
 int destroyPrefs(void)
 {
 	for (int i = 0; i < num_opts; i++)



From mean at mail.berlios.de  Wed Apr 13 07:44:44 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Wed, 13 Apr 2011 07:44:44 +0200
Subject: [Avidemux-svn-commit] r7138 - in
	branches/avidemux_2.6_branch_mean/avidemux_core/ADM_core:
	include src
Message-ID: <20110413054444.6F6D2481342@sheep.berlios.de>

Author: mean
Date: 2011-04-13 07:44:43 +0200 (Wed, 13 Apr 2011)
New Revision: 7138

Modified:
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_core/include/ADM_assert.h
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_core/src/ADM_fileio.cpp
Log:
[core] dont use bool in files used by C parts

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_core/include/ADM_assert.h
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_core/include/ADM_assert.h	2011-04-13 05:33:07 UTC (rev 7137)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_core/include/ADM_assert.h	2011-04-13 05:44:43 UTC (rev 7138)
@@ -54,7 +54,7 @@
 int             ADM_fclose (FILE *file);
 uint8_t         ADM_fileExist(const char *name);
 uint8_t         ADM_mkdir(const char *name);
-bool            ADM_eraseFile(const char *name);
+uint8_t         ADM_eraseFile(const char *name);
 
 /* Replacements for memory allocation functions */
 extern void     *ADM_alloc(size_t size);

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_core/src/ADM_fileio.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_core/src/ADM_fileio.cpp	2011-04-13 05:33:07 UTC (rev 7137)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_core/src/ADM_fileio.cpp	2011-04-13 05:44:43 UTC (rev 7138)
@@ -83,7 +83,7 @@
 /**
     \fn ADM_eraseFile
 */
-bool ADM_eraseFile(const char *file)
+uint8_t ADM_eraseFile(const char *file)
 {
     if(!unlink(file))
         return true;



From mean at mail.berlios.de  Thu Apr 14 08:07:44 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Thu, 14 Apr 2011 08:07:44 +0200
Subject: [Avidemux-svn-commit] r7139 -
	branches/avidemux_2.6_branch_mean/avidemux/common/ADM_toolkit
Message-ID: <20110414060745.2099848137E@sheep.berlios.de>

Author: mean
Date: 2011-04-14 08:07:44 +0200 (Thu, 14 Apr 2011)
New Revision: 7139

Modified:
   branches/avidemux_2.6_branch_mean/avidemux/common/ADM_toolkit/automation.cpp
Log:
[automation] Dont save if nothing was loaded

Modified: branches/avidemux_2.6_branch_mean/avidemux/common/ADM_toolkit/automation.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux/common/ADM_toolkit/automation.cpp	2011-04-13 05:44:43 UTC (rev 7138)
+++ branches/avidemux_2.6_branch_mean/avidemux/common/ADM_toolkit/automation.cpp	2011-04-14 06:07:44 UTC (rev 7139)
@@ -473,6 +473,7 @@
 
 void save(char*name)
 {
+    if(!video_body->getNbSegment()) return;
 	A_Save(name);
 }
 



From mean at mail.berlios.de  Thu Apr 14 08:07:45 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Thu, 14 Apr 2011 08:07:45 +0200
Subject: [Avidemux-svn-commit] r7140 -
	branches/avidemux_2.6_branch_mean/avidemux/common
Message-ID: <20110414060745.C5D4C48137E@sheep.berlios.de>

Author: mean
Date: 2011-04-14 08:07:45 +0200 (Thu, 14 Apr 2011)
New Revision: 7140

Modified:
   branches/avidemux_2.6_branch_mean/avidemux/common/gui_save.cpp
Log:
[save] Dont save if nothing was loaded

Modified: branches/avidemux_2.6_branch_mean/avidemux/common/gui_save.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux/common/gui_save.cpp	2011-04-14 06:07:44 UTC (rev 7139)
+++ branches/avidemux_2.6_branch_mean/avidemux/common/gui_save.cpp	2011-04-14 06:07:45 UTC (rev 7140)
@@ -47,6 +47,11 @@
 */
 void HandleAction_Save(Action action)
 {
+    if(!video_body->getNbSegment())
+    {
+        GUI_Error_HIG("No","No file loaded");
+        return;
+    }
     switch(action)
     {
     case ACT_SAVE_QUEUE:



From mean at mail.berlios.de  Thu Apr 14 08:07:46 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Thu, 14 Apr 2011 08:07:46 +0200
Subject: [Avidemux-svn-commit] r7141 - in
	branches/avidemux_2.6_branch_mean/avidemux_core/ADM_core:
	include src
Message-ID: <20110414060746.F418E48137E@sheep.berlios.de>

Author: mean
Date: 2011-04-14 08:07:46 +0200 (Thu, 14 Apr 2011)
New Revision: 7141

Modified:
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_core/include/ADM_assert.h
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_core/src/ADM_fileio.cpp
Log:
[core] Add ADM_fileSize function, utf safe

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_core/include/ADM_assert.h
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_core/include/ADM_assert.h	2011-04-14 06:07:45 UTC (rev 7140)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_core/include/ADM_assert.h	2011-04-14 06:07:46 UTC (rev 7141)
@@ -55,7 +55,7 @@
 uint8_t         ADM_fileExist(const char *name);
 uint8_t         ADM_mkdir(const char *name);
 uint8_t         ADM_eraseFile(const char *name);
-
+int64_t         ADM_fileSize(const char *file);
 /* Replacements for memory allocation functions */
 extern void     *ADM_alloc(size_t size);
 extern void     *ADM_calloc(size_t nbElm,size_t elSize);

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_core/src/ADM_fileio.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_core/src/ADM_fileio.cpp	2011-04-14 06:07:45 UTC (rev 7140)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_core/src/ADM_fileio.cpp	2011-04-14 06:07:46 UTC (rev 7141)
@@ -90,6 +90,19 @@
     return false;
 }
 /**
+    \fn ADM_fileSize
+    \brief return filesize, -1 on error
+*/
+int64_t ADM_fileSize(const char *file)
+{
+    FILE *f=ADM_fopen(file,"r");
+    if(!f) return -1;
+    fseeko(f,0,SEEK_END);
+    int64_t v=ftello(f);
+    fclose(f);
+    return v;
+}
+/**
     \fn ADM_fopen
     \brief utf8 aware fopen, so that we can use utf8 string even on win32
 */



From mean at mail.berlios.de  Thu Apr 14 08:07:48 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Thu, 14 Apr 2011 08:07:48 +0200
Subject: [Avidemux-svn-commit] r7142 - in
	branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreTinyPy/src:
	. patches
Message-ID: <20110414060748.4B83248137E@sheep.berlios.de>

Author: mean
Date: 2011-04-14 08:07:48 +0200 (Thu, 14 Apr 2011)
New Revision: 7142

Modified:
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreTinyPy/src/patches/99_fix_cpp_compile.diff
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreTinyPy/src/tinypy.cpp
Log:
[tinypy] dont use stat, it is not utf safe

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreTinyPy/src/patches/99_fix_cpp_compile.diff
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreTinyPy/src/patches/99_fix_cpp_compile.diff	2011-04-14 06:07:46 UTC (rev 7141)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreTinyPy/src/patches/99_fix_cpp_compile.diff	2011-04-14 06:07:48 UTC (rev 7142)
@@ -1,16 +1,22 @@
---- tinypy.c.org	2011-02-26 11:04:51.912547001 +0100
-+++ tinypy.cpp	2011-02-26 11:04:00.592547002 +0100
-@@ -119,6 +119,9 @@
+--- tinypy.cpp.orig	2011-03-05 19:01:34.305179001 +0100
++++ tinypy.cpp	2011-04-12 07:57:36.557517002 +0200
+@@ -120,6 +120,15 @@
  #ifndef tp_inline
  #error "Unsuported compiler"
  #endif
 +// MEANX : Redirect printf
 +bool pyPrintf(const char *fmt,...);
 +#define printf pyPrintf
++// MEANX : Need to use ADM_fopen for WIN32 support
++extern "C"
++{
++        FILE *ADM_fopen(const char *filename,const char *access);
++}
++#define fopen ADM_fopen
  
  /*  #define tp_malloc(x) calloc((x),1)
      #define tp_realloc(x,y) realloc(x,y)
-@@ -462,7 +465,8 @@
+@@ -463,7 +472,8 @@
  
  tp_inline static void tp_echo(TP,tp_obj e) {
      e = tp_str(tp,e);
@@ -20,7 +26,7 @@
  }
  
  /* Function: tp_string_n
-@@ -2200,6 +2204,9 @@
+@@ -2219,6 +2229,9 @@
          exit(-1);
  #else
          tp->ex = e;
@@ -30,7 +36,7 @@
          longjmp(tp->nextexpr,1);
  #endif
      }
-@@ -2236,6 +2243,9 @@
+@@ -2255,6 +2268,9 @@
      tp_print_stack(tp);
      exit(-1);
  #else

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreTinyPy/src/tinypy.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreTinyPy/src/tinypy.cpp	2011-04-14 06:07:46 UTC (rev 7141)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreTinyPy/src/tinypy.cpp	2011-04-14 06:07:48 UTC (rev 7142)
@@ -124,9 +124,13 @@
 bool pyPrintf(const char *fmt,...);
 #define printf pyPrintf
 // MEANX : Need to use ADM_fopen for WIN32 support
+#define uint8_t unsigned char
+#define int64_t long long int
 extern "C"
 {
         FILE *ADM_fopen(const char *filename,const char *access);
+        uint8_t ADM_fileExist(const char *file);
+        int64_t ADM_fileSize(const char *file);
 }
 #define fopen ADM_fopen
 
@@ -1443,9 +1447,10 @@
     tp_obj r;
     char *s;
     char fname[256]; tp_cstr(tp,TP_STR(),fname,256);
-    struct stat stbuf;
-    stat(fname, &stbuf);
-    l = stbuf.st_size;
+    int64_t size=ADM_fileSize(fname);
+    if(size==-1)
+        tp_raise(tp_None,tp_string("(tp_load) cant get filesize"));
+    l = (int)size;
     f = fopen(fname,"rb");
     if (!f) {
         tp_raise(tp_None,tp_string("(tp_load) IOError: ?"));
@@ -1483,11 +1488,14 @@
 
 tp_obj tp_exists(TP) {
     char fname[TP_CSTR_LEN]; tp_cstr(tp,TP_STR(),fname,TP_CSTR_LEN);
-    struct stat stbuf;
-    return tp_number(!stat(fname,&stbuf));
+    uint8_t e=ADM_fileExist(fname);
+    //struct stat stbuf;
+    //return tp_number(!stat(fname,&stbuf));
+    return tp_number(e);
 }
 tp_obj tp_mtime(TP) {
     char fname[TP_CSTR_LEN]; tp_cstr(tp,TP_STR(),fname,TP_CSTR_LEN);
+    #warning fixme
     struct stat stbuf;
     if (!stat(fname,&stbuf)) { return tp_number(stbuf.st_mtime); }
     tp_raise(tp_None,tp_string("(tp_mtime) IOError: ?"));



From mean at mail.berlios.de  Thu Apr 14 18:29:06 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Thu, 14 Apr 2011 18:29:06 +0200
Subject: [Avidemux-svn-commit] r7143 -
	branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreTinyPy/src/patches
Message-ID: <20110414162906.F03FB481369@sheep.berlios.de>

Author: mean
Date: 2011-04-14 18:29:06 +0200 (Thu, 14 Apr 2011)
New Revision: 7143

Modified:
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreTinyPy/src/patches/99_fix_cpp_compile.diff
Log:
[tinypy] Patch to avoid using stat

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreTinyPy/src/patches/99_fix_cpp_compile.diff
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreTinyPy/src/patches/99_fix_cpp_compile.diff	2011-04-14 06:07:48 UTC (rev 7142)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreTinyPy/src/patches/99_fix_cpp_compile.diff	2011-04-14 16:29:06 UTC (rev 7143)
@@ -1,6 +1,6 @@
 --- tinypy.cpp.orig	2011-03-05 19:01:34.305179001 +0100
-+++ tinypy.cpp	2011-04-12 07:57:36.557517002 +0200
-@@ -120,6 +120,15 @@
++++ tinypy.cpp	2011-04-14 08:06:25.799269001 +0200
+@@ -120,6 +120,19 @@
  #ifndef tp_inline
  #error "Unsuported compiler"
  #endif
@@ -8,15 +8,19 @@
 +bool pyPrintf(const char *fmt,...);
 +#define printf pyPrintf
 +// MEANX : Need to use ADM_fopen for WIN32 support
++#define uint8_t unsigned char
++#define int64_t long long int
 +extern "C"
 +{
 +        FILE *ADM_fopen(const char *filename,const char *access);
++        uint8_t ADM_fileExist(const char *file);
++        int64_t ADM_fileSize(const char *file);
 +}
 +#define fopen ADM_fopen
  
  /*  #define tp_malloc(x) calloc((x),1)
      #define tp_realloc(x,y) realloc(x,y)
-@@ -463,7 +472,8 @@
+@@ -463,7 +476,8 @@
  
  tp_inline static void tp_echo(TP,tp_obj e) {
      e = tp_str(tp,e);
@@ -26,7 +30,38 @@
  }
  
  /* Function: tp_string_n
-@@ -2219,6 +2229,9 @@
+@@ -1433,9 +1447,10 @@
+     tp_obj r;
+     char *s;
+     char fname[256]; tp_cstr(tp,TP_STR(),fname,256);
+-    struct stat stbuf;
+-    stat(fname, &stbuf);
+-    l = stbuf.st_size;
++    int64_t size=ADM_fileSize(fname);
++    if(size==-1)
++        tp_raise(tp_None,tp_string("(tp_load) cant get filesize"));
++    l = (int)size;
+     f = fopen(fname,"rb");
+     if (!f) {
+         tp_raise(tp_None,tp_string("(tp_load) IOError: ?"));
+@@ -1473,11 +1488,14 @@
+ 
+ tp_obj tp_exists(TP) {
+     char fname[TP_CSTR_LEN]; tp_cstr(tp,TP_STR(),fname,TP_CSTR_LEN);
+-    struct stat stbuf;
+-    return tp_number(!stat(fname,&stbuf));
++    uint8_t e=ADM_fileExist(fname);
++    //struct stat stbuf;
++    //return tp_number(!stat(fname,&stbuf));
++    return tp_number(e);
+ }
+ tp_obj tp_mtime(TP) {
+     char fname[TP_CSTR_LEN]; tp_cstr(tp,TP_STR(),fname,TP_CSTR_LEN);
++    #warning fixme
+     struct stat stbuf;
+     if (!stat(fname,&stbuf)) { return tp_number(stbuf.st_mtime); }
+     tp_raise(tp_None,tp_string("(tp_mtime) IOError: ?"));
+@@ -2219,6 +2237,9 @@
          exit(-1);
  #else
          tp->ex = e;
@@ -36,7 +71,7 @@
          longjmp(tp->nextexpr,1);
  #endif
      }
-@@ -2255,6 +2268,9 @@
+@@ -2255,6 +2276,9 @@
      tp_print_stack(tp);
      exit(-1);
  #else



From mean at mail.berlios.de  Thu Apr 14 18:29:08 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Thu, 14 Apr 2011 18:29:08 +0200
Subject: [Avidemux-svn-commit] r7144 -
	branches/avidemux_2.6_branch_mean/avidemux/qt4/ADM_jobs/src
Message-ID: <20110414162908.233DA481369@sheep.berlios.de>

Author: mean
Date: 2011-04-14 18:29:07 +0200 (Thu, 14 Apr 2011)
New Revision: 7144

Modified:
   branches/avidemux_2.6_branch_mean/avidemux/qt4/ADM_jobs/src/ADM_runOneJob.cpp
Log:
[jobs/win32] Try to use CreateProcess rather than system on win32

Modified: branches/avidemux_2.6_branch_mean/avidemux/qt4/ADM_jobs/src/ADM_runOneJob.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux/qt4/ADM_jobs/src/ADM_runOneJob.cpp	2011-04-14 16:29:06 UTC (rev 7143)
+++ branches/avidemux_2.6_branch_mean/avidemux/qt4/ADM_jobs/src/ADM_runOneJob.cpp	2011-04-14 16:29:07 UTC (rev 7144)
@@ -11,6 +11,10 @@
  *   (at your option) any later version.                                   *
  *                                                                         *
  ***************************************************************************/
+#ifdef _WIN32
+#include <windows.h>
+#endif
+
 #include "T_jobs.h"
 #include "T_progress.h"
 #include "ADM_default.h"
@@ -39,7 +43,37 @@
     }
     ADM_info("=>%s\n",command.c_str());
     ADM_info("==================== Start of spawner process job ================\n");
+
+#ifdef _WIN32
+    STARTUPINFO si;
+    PROCESS_INFORMATION pi;
+
+    ZeroMemory( &si, sizeof(si) );
+    si.cb = sizeof(si);
+    ZeroMemory( &pi, sizeof(pi) );
+    cmd=ADM_stdup(command.c_str());
+    // Start the child process. 
+    if( !CreateProcess( 
+        NULL,   // No module name (use command line)
+        cmd,        // Command line
+        NULL,           // Process handle not inheritable
+        NULL,           // Thread handle not inheritable
+        FALSE,          // Set handle inheritance to FALSE
+        0,              // No creation flags
+        NULL,           // Use parent's environment block
+        NULL,           // Use parent's starting directory 
+        &si,            // Pointer to STARTUPINFO structure
+        &pi )           // Pointer to PROCESS_INFORMATION structure
+    )
+    {
+        ADM_error("Cannot spawn process! (%s)\n",cmd);
+        ADM_dealloc(cmd);
+        return false;
+    }
+    ADM_dealloc(cmd);
+#else
     system(command.c_str());
+#endif
     ADM_info("==================== End of spawner process job ================\n");
     return true;
 }
@@ -109,12 +143,15 @@
 
     // 2- Spawn  child
     string ScriptFullPath;
-    ScriptFullPath=string(ADM_getJobDir())+string("/")+string(job.scriptName);
+    
 #ifdef _WIN32
     #define MKEXE(x) "avidemux3_"#x".exe"
+    string slash=string("\\");
 #else
     #define MKEXE(x) "avidemux3_"#x
+    string slash=string("/");
 #endif
+    ScriptFullPath=string(ADM_getJobDir())+slash+string(job.scriptName);
     const char *avidemuxVersion=MKEXE(cli);
     if(ui.checkBoxUseQt4->isChecked())
     {



From mean at mail.berlios.de  Thu Apr 14 19:05:32 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Thu, 14 Apr 2011 19:05:32 +0200
Subject: [Avidemux-svn-commit] r7145 -
	branches/avidemux_2.6_branch_mean/avidemux/qt4/ADM_jobs/src
Message-ID: <20110414170532.D42D84803D1@sheep.berlios.de>

Author: mean
Date: 2011-04-14 19:05:32 +0200 (Thu, 14 Apr 2011)
New Revision: 7145

Modified:
   branches/avidemux_2.6_branch_mean/avidemux/qt4/ADM_jobs/src/ADM_runOneJob.cpp
Log:
[jobs/win32] Fix

Modified: branches/avidemux_2.6_branch_mean/avidemux/qt4/ADM_jobs/src/ADM_runOneJob.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux/qt4/ADM_jobs/src/ADM_runOneJob.cpp	2011-04-14 16:29:07 UTC (rev 7144)
+++ branches/avidemux_2.6_branch_mean/avidemux/qt4/ADM_jobs/src/ADM_runOneJob.cpp	2011-04-14 17:05:32 UTC (rev 7145)
@@ -51,7 +51,7 @@
     ZeroMemory( &si, sizeof(si) );
     si.cb = sizeof(si);
     ZeroMemory( &pi, sizeof(pi) );
-    cmd=ADM_stdup(command.c_str());
+    char *cmd=ADM_strdup(command.c_str());
     // Start the child process. 
     if( !CreateProcess( 
         NULL,   // No module name (use command line)



From mean at mail.berlios.de  Fri Apr 15 07:33:07 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Fri, 15 Apr 2011 07:33:07 +0200
Subject: [Avidemux-svn-commit] r7146 -
	branches/avidemux_2.6_branch_mean/avidemux/common
Message-ID: <20110415053307.BB1794813B2@sheep.berlios.de>

Author: mean
Date: 2011-04-15 07:33:07 +0200 (Fri, 15 Apr 2011)
New Revision: 7146

Modified:
   branches/avidemux_2.6_branch_mean/avidemux/common/main.cpp
Log:
[command line/win32] Try to use unicode args

Modified: branches/avidemux_2.6_branch_mean/avidemux/common/main.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux/common/main.cpp	2011-04-14 17:05:32 UTC (rev 7145)
+++ branches/avidemux_2.6_branch_mean/avidemux/common/main.cpp	2011-04-15 05:33:07 UTC (rev 7146)
@@ -212,7 +212,36 @@
     win32_netInit();
 #endif
 
-    UI_Init(argc,argv);
+    // unicode command line...
+    char    **Aargv=NULL;
+    int     Aargc=0;
+#if _WIN32
+     wchar_t **wargv = CommandLineToArgvW (GetCommandLine (), &Aargc);
+     if (wargv && Aargc)
+     {
+        Aargv=new *char[Aargc];
+        for(int i=0;i<Aargc;i++)
+        {
+            char *utf8;
+            wchar   *w=wargv[i];
+            int     lin=wcslen(w);
+            int     lout= wideCharStringToUtf8(w, lin,NULL);
+            utf8=new char[lout+1];
+            wideCharStringToUtf8(w,lin,utf8);
+            Aargv[i]=utf8;
+        }
+        for(int i=0;i<Aargc;i++)
+            printf("%d : %s\n",i,Aargv[i]);
+        
+     }
+#else
+    Aargv=argv;
+    Aargc=argc;
+
+#endif
+
+
+    UI_Init(Aargc,Aargv);
     AUDMEncoder_initDither();
 
     // Hook our UI...



From mean at mail.berlios.de  Fri Apr 15 07:49:54 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Fri, 15 Apr 2011 07:49:54 +0200
Subject: [Avidemux-svn-commit] r7147 -
	branches/avidemux_2.6_branch_mean/avidemux/common
Message-ID: <20110415054954.CDFBB4813B2@sheep.berlios.de>

Author: mean
Date: 2011-04-15 07:49:54 +0200 (Fri, 15 Apr 2011)
New Revision: 7147

Modified:
   branches/avidemux_2.6_branch_mean/avidemux/common/main.cpp
Log:
[win32] unicode command line, try2

Modified: branches/avidemux_2.6_branch_mean/avidemux/common/main.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux/common/main.cpp	2011-04-15 05:33:07 UTC (rev 7146)
+++ branches/avidemux_2.6_branch_mean/avidemux/common/main.cpp	2011-04-15 05:49:54 UTC (rev 7147)
@@ -19,6 +19,8 @@
 #include "ADM_cpp.h"
 
 #ifdef __MINGW32__
+#define UNICODE
+#include <winbase.h>
 #include <windows.h>
 #include <excpt.h>
 #endif
@@ -94,6 +96,7 @@
 extern void InitCoreToolkit(void);
 #ifdef __MINGW32__
 extern EXCEPTION_DISPOSITION exceptionHandler(struct _EXCEPTION_RECORD* pExceptionRec, void* pEstablisherFrame, struct _CONTEXT* pContextRecord, void* pDispatcherContext);
+extern int wideCharStringToUtf8(const wchar_t *wideCharString, int wideCharStringLength, char *utf8String);
 #else
 extern void installSigHandler(void);
 #endif
@@ -223,7 +226,7 @@
         for(int i=0;i<Aargc;i++)
         {
             char *utf8;
-            wchar   *w=wargv[i];
+            wchar_t   *w=wargv[i];
             int     lin=wcslen(w);
             int     lout= wideCharStringToUtf8(w, lin,NULL);
             utf8=new char[lout+1];



From mean at mail.berlios.de  Fri Apr 15 08:11:00 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Fri, 15 Apr 2011 08:11:00 +0200
Subject: [Avidemux-svn-commit] r7148 -
	branches/avidemux_2.6_branch_mean/avidemux/common
Message-ID: <20110415061100.388C04813B2@sheep.berlios.de>

Author: mean
Date: 2011-04-15 08:10:59 +0200 (Fri, 15 Apr 2011)
New Revision: 7148

Modified:
   branches/avidemux_2.6_branch_mean/avidemux/common/main.cpp
Log:
[win32] unicode command line, try3

Modified: branches/avidemux_2.6_branch_mean/avidemux/common/main.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux/common/main.cpp	2011-04-15 05:49:54 UTC (rev 7147)
+++ branches/avidemux_2.6_branch_mean/avidemux/common/main.cpp	2011-04-15 06:10:59 UTC (rev 7148)
@@ -219,7 +219,7 @@
     char    **Aargv=NULL;
     int     Aargc=0;
 #if _WIN32
-     wchar_t **wargv = CommandLineToArgvW (GetCommandLine (), &Aargc);
+     wchar_t **wargv = CommandLineToArgvW (GetCommandLineW (), &Aargc);
      if (wargv && Aargc)
      {
         Aargv=new *char[Aargc];



From mean at mail.berlios.de  Fri Apr 15 08:24:39 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Fri, 15 Apr 2011 08:24:39 +0200
Subject: [Avidemux-svn-commit] r7149 -
	branches/avidemux_2.6_branch_mean/avidemux/common
Message-ID: <20110415062439.CF4264813B2@sheep.berlios.de>

Author: mean
Date: 2011-04-15 08:24:39 +0200 (Fri, 15 Apr 2011)
New Revision: 7149

Modified:
   branches/avidemux_2.6_branch_mean/avidemux/common/main.cpp
Log:
[win32] unicode command line, try4

Modified: branches/avidemux_2.6_branch_mean/avidemux/common/main.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux/common/main.cpp	2011-04-15 06:10:59 UTC (rev 7148)
+++ branches/avidemux_2.6_branch_mean/avidemux/common/main.cpp	2011-04-15 06:24:39 UTC (rev 7149)
@@ -222,7 +222,7 @@
      wchar_t **wargv = CommandLineToArgvW (GetCommandLineW (), &Aargc);
      if (wargv && Aargc)
      {
-        Aargv=new *char[Aargc];
+        Aargv=new char *[Aargc];
         for(int i=0;i<Aargc;i++)
         {
             char *utf8;



From mean at mail.berlios.de  Fri Apr 15 21:26:04 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Fri, 15 Apr 2011 21:26:04 +0200
Subject: [Avidemux-svn-commit] r7150 -
	branches/avidemux_2.6_branch_mean/avidemux/qt4/ADM_jobs/src
Message-ID: <20110415192604.9C83248142A@sheep.berlios.de>

Author: mean
Date: 2011-04-15 21:26:04 +0200 (Fri, 15 Apr 2011)
New Revision: 7150

Modified:
   branches/avidemux_2.6_branch_mean/avidemux/qt4/ADM_jobs/src/ADM_runOneJob.cpp
Log:
[Jobs] Use unicode version or CreateProcess

Modified: branches/avidemux_2.6_branch_mean/avidemux/qt4/ADM_jobs/src/ADM_runOneJob.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux/qt4/ADM_jobs/src/ADM_runOneJob.cpp	2011-04-15 06:24:39 UTC (rev 7149)
+++ branches/avidemux_2.6_branch_mean/avidemux/qt4/ADM_jobs/src/ADM_runOneJob.cpp	2011-04-15 19:26:04 UTC (rev 7150)
@@ -12,7 +12,10 @@
  *                                                                         *
  ***************************************************************************/
 #ifdef _WIN32
+#define UNICODE
+#include <winbase.h>
 #include <windows.h>
+
 #endif
 
 #include "T_jobs.h"
@@ -21,6 +24,10 @@
 #include "ADM_coreJobs.h"
 #include "pthread.h"
 
+#ifdef _WIN32
+int utf8StringToWideChar(const char *utf8String, int utf8StringLength, wchar_t *wideCharString);
+#endif
+
 /**
     \fn spawnerBoomerang
     \brief Allow to do class -> plain C -> class 
@@ -51,11 +58,16 @@
     ZeroMemory( &si, sizeof(si) );
     si.cb = sizeof(si);
     ZeroMemory( &pi, sizeof(pi) );
-    char *cmd=ADM_strdup(command.c_str());
+    // utf8 -> utf16
+    const char *c=command.c_str();
+    int size=utf8StringToWideChar(c,strlen(c),NULL);
+    wchar_t w[size+1];
+
+    utf8StringToWideChar(c,strlen(c),w);
     // Start the child process. 
-    if( !CreateProcess( 
+    if( !CreateProcessW( 
         NULL,   // No module name (use command line)
-        cmd,        // Command line
+        w,        // Command line
         NULL,           // Process handle not inheritable
         NULL,           // Thread handle not inheritable
         FALSE,          // Set handle inheritance to FALSE
@@ -66,11 +78,10 @@
         &pi )           // Pointer to PROCESS_INFORMATION structure
     )
     {
-        ADM_error("Cannot spawn process! (%s)\n",cmd);
-        ADM_dealloc(cmd);
+        ADM_error("Cannot spawn process! (%s)\n",c);
         return false;
     }
-    ADM_dealloc(cmd);
+    
 #else
     system(command.c_str());
 #endif



From mean at mail.berlios.de  Sat Apr 16 07:28:01 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Sat, 16 Apr 2011 07:28:01 +0200
Subject: [Avidemux-svn-commit] r7151 -
	branches/avidemux_2.6_branch_mean/avidemux/qt4/ADM_jobs/src
Message-ID: <20110416052801.7057D481455@sheep.berlios.de>

Author: mean
Date: 2011-04-16 07:28:00 +0200 (Sat, 16 Apr 2011)
New Revision: 7151

Modified:
   branches/avidemux_2.6_branch_mean/avidemux/qt4/ADM_jobs/src/ADM_runOneJob.cpp
Log:
[win32] Fix qt4 job build

Modified: branches/avidemux_2.6_branch_mean/avidemux/qt4/ADM_jobs/src/ADM_runOneJob.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux/qt4/ADM_jobs/src/ADM_runOneJob.cpp	2011-04-15 19:26:04 UTC (rev 7150)
+++ branches/avidemux_2.6_branch_mean/avidemux/qt4/ADM_jobs/src/ADM_runOneJob.cpp	2011-04-16 05:28:00 UTC (rev 7151)
@@ -13,6 +13,9 @@
  ***************************************************************************/
 #ifdef _WIN32
 #define UNICODE
+#include "ADM_cpp.h"
+
+#define UNICODE
 #include <winbase.h>
 #include <windows.h>
 



From mean at mail.berlios.de  Sat Apr 16 08:40:29 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Sat, 16 Apr 2011 08:40:29 +0200
Subject: [Avidemux-svn-commit] r7152 -
	branches/avidemux_2.6_branch_mean/avidemux/common
Message-ID: <20110416064030.2B50D481455@sheep.berlios.de>

Author: mean
Date: 2011-04-16 08:40:29 +0200 (Sat, 16 Apr 2011)
New Revision: 7152

Modified:
   branches/avidemux_2.6_branch_mean/avidemux/common/main.cpp
Log:
[main] Cleanup string before doing utf16->utf8, it seems \0 is lost somehow

Modified: branches/avidemux_2.6_branch_mean/avidemux/common/main.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux/common/main.cpp	2011-04-16 05:28:00 UTC (rev 7151)
+++ branches/avidemux_2.6_branch_mean/avidemux/common/main.cpp	2011-04-16 06:40:29 UTC (rev 7152)
@@ -230,6 +230,7 @@
             int     lin=wcslen(w);
             int     lout= wideCharStringToUtf8(w, lin,NULL);
             utf8=new char[lout+1];
+            memset(utf8,0,lout+1);
             wideCharStringToUtf8(w,lin,utf8);
             Aargv[i]=utf8;
         }



From mean at mail.berlios.de  Sat Apr 16 09:01:03 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Sat, 16 Apr 2011 09:01:03 +0200
Subject: [Avidemux-svn-commit] r7153 -
	branches/avidemux_2.6_branch_mean/avidemux/common/ADM_toolkit
Message-ID: <20110416070103.A8021481455@sheep.berlios.de>

Author: mean
Date: 2011-04-16 09:01:03 +0200 (Sat, 16 Apr 2011)
New Revision: 7153

Modified:
   branches/avidemux_2.6_branch_mean/avidemux/common/ADM_toolkit/automation.cpp
Log:
[avidemux] Do utf translation as soon as possible, in main rather than in automation

Modified: branches/avidemux_2.6_branch_mean/avidemux/common/ADM_toolkit/automation.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux/common/ADM_toolkit/automation.cpp	2011-04-16 06:40:29 UTC (rev 7152)
+++ branches/avidemux_2.6_branch_mean/avidemux/common/ADM_toolkit/automation.cpp	2011-04-16 07:01:03 UTC (rev 7153)
@@ -91,11 +91,6 @@
 static void set_autoindex(char *p);
 //extern uint8_t A_setContainer(const char *cont);
 
-
-#ifdef __WIN32
-	extern int ansiStringToUtf8(const char *ansiString, int ansiStringLength, char *utf8String);
-#endif
-
 static int call_bframe(void);
 static int call_x264(void);
 static int call_forcesmart(void);
@@ -195,22 +190,9 @@
 static three_arg_type three;
 static two_arg_type two;
 static int index;
-          argc=global_argc;
-#ifdef __WIN32
-	int utf8StringLength;
-
-	argv = new char*[argc];
-
-	for (int arg = 0; arg < argc; arg++)
-	{
-		utf8StringLength = ansiStringToUtf8(global_argv[arg], -1, NULL);
-		argv[arg] = new char[utf8StringLength];
-
-		ansiStringToUtf8(global_argv[arg], -1, argv[arg]);
-	}
-#else
+    argc=global_argc;
 	argv = global_argv;
-#endif
+
           printf("\n *** Automated : %"LU" entries*************\n",(uint32_t)NB_AUTO);
           // we need to process
           argc-=1;
@@ -266,12 +248,6 @@
           } // end while
           GUI_Verbose();
           printf("\n ********** Automation ended***********\n");
-#ifdef __WIN32
-	for (int arg = 0; arg < argc; arg++)
-		delete [] argv[arg];
-
-	delete argv;
-#endif
           return 0; // Do not call me anymore
 }
 //_________________________________________________________________________



From mean at mail.berlios.de  Fri Apr 22 10:37:01 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Fri, 22 Apr 2011 10:37:01 +0200
Subject: [Avidemux-svn-commit] r7155 - in branches/avidemux_2.6_branch_mean:
	avidemux_core/ADM_core/src avidemux_core/ADM_coreMuxer/src
	avidemux_core/ADM_coreVideoCodec/include
	avidemux_core/ADM_coreVideoCodec/src
	avidemux_core/ADM_coreVideoEncoder/src
	avidemux_core/ffmpeg_package/patches
	avidemux_plugins/ADM_audioDecoders/ADM_ad_lav
	avidemux_plugins/ADM_audioEncoders/lavcodec cmake
Message-ID: <20110422083701.A30494813DE@sheep.berlios.de>

Author: mean
Date: 2011-04-22 10:37:01 +0200 (Fri, 22 Apr 2011)
New Revision: 7155

Modified:
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_core/src/ADM_memcpy.cpp
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreMuxer/src/ADM_coreMuxerFfmpeg.cpp
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreVideoCodec/include/ADM_ffmp43.h
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreVideoCodec/src/ADM_ffmp43.cpp
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreVideoEncoder/src/ADM_coreVideoEncoderFFmpeg.cpp
   branches/avidemux_2.6_branch_mean/avidemux_core/ffmpeg_package/patches/libavformat_matroskaenc.c.patch
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_audioDecoders/ADM_ad_lav/ADM_ad_lav.cpp
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_audioEncoders/lavcodec/audioencoder_lavcodec.cpp
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_audioEncoders/lavcodec/audioencoder_lavcodec.h
   branches/avidemux_2.6_branch_mean/cmake/admFFmpegBuild.cmake
   branches/avidemux_2.6_branch_mean/cmake/admFFmpegPrepareGit.cmake
   branches/avidemux_2.6_branch_mean/cmake/admFFmpegUtil.cmake
Log:
[lav] update lavcodec

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_core/src/ADM_memcpy.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_core/src/ADM_memcpy.cpp	2011-04-20 14:48:26 UTC (rev 7154)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_core/src/ADM_memcpy.cpp	2011-04-22 08:37:01 UTC (rev 7155)
@@ -389,9 +389,9 @@
 #if defined(ADM_CPU_X86)
   { "linux kernel memcpy()", linux_kernel_memcpy, 0, 0 },
 #if defined(ADM_CPU_X86)
-  { "MMX optimized memcpy()", mmx_memcpy, 0, FF_MM_MMX },
-  { "MMXEXT optimized memcpy()", mmx2_memcpy, 0, FF_MM_MMXEXT },
-  { "SSE optimized memcpy()", sse_memcpy, 0, FF_MM_MMXEXT|FF_MM_SSE },
+  { "MMX optimized memcpy()", mmx_memcpy, 0, 0 },
+  { "MMXEXT optimized memcpy()", mmx2_memcpy, 0, 0 },
+  { "SSE optimized memcpy()", sse_memcpy, 0, 0|0 },
 #endif
 #endif /* ARCH_X86 */
 #if 0 && defined(ADM_CPU_PPC) && !defined (__APPLE__)

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreMuxer/src/ADM_coreMuxerFfmpeg.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreMuxer/src/ADM_coreMuxerFfmpeg.cpp	2011-04-20 14:48:26 UTC (rev 7154)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreMuxer/src/ADM_coreMuxerFfmpeg.cpp	2011-04-22 08:37:01 UTC (rev 7155)
@@ -95,7 +95,7 @@
 */
 bool muxerFFmpeg::setupMuxer(const char *format,const char *filename)
 {
-    fmt=guess_format(format, NULL, NULL);
+    fmt=av_guess_format(format, NULL, NULL);
     if(!fmt)
     {
             printf("[FF] guess format failed\n");
@@ -111,9 +111,11 @@
 	snprintf(oc->filename,1000,"file://%s",filename);
     // probably a memeleak here
     char *foo=ADM_strdup(filename);
-
+#warning use AV METADATA
+#if 0
     strcpy(oc->title,ADM_GetFileName(foo));
     strcpy(oc->author,"Avidemux");
+#endif
     printf("[FF] Muxer opened\n");
     return true;
 }
@@ -150,12 +152,12 @@
         c->rc_max_rate=9500*1000;
         c->rc_min_rate=0;
         c->bit_rate=9000*1000;
-        c->codec_type = CODEC_TYPE_VIDEO;
+        c->codec_type = AVMEDIA_TYPE_VIDEO;
         c->flags=CODEC_FLAG_QSCALE;
         c->width = stream->getWidth();
         c->height =stream->getHeight();
         uint32_t fcc=stream->getFCC();
-        
+
         if(isMpeg4Compatible(fcc))
         {
                 c->codec_id = CODEC_ID_MPEG4;
@@ -233,7 +235,7 @@
                                             }else
                                             {
                                                 uint32_t id=stream->getFCC();
-            
+
                                                 CodecID cid=ADM_codecIdFindByFourcc(fourCC::tostring(id));
                                                 if(cid==CODEC_ID_NONE)
                                                 {
@@ -252,7 +254,7 @@
             {
                 ADM_info("Video has extradata and muxer requires globalHeader, assuming it is done so.\n");
                 c->flags|=CODEC_FLAG_GLOBAL_HEADER;
-            }else       
+            }else
             {
                 ADM_warning("Video has no extradata but muxer requires globalHeader.\n");
             }
@@ -324,7 +326,7 @@
                                  return false;
                           break;
           }
-          c->codec_type = CODEC_TYPE_AUDIO;
+          c->codec_type = AVMEDIA_TYPE_AUDIO;
           c->bit_rate = audioheader->byterate*8;
           c->rc_buffer_size=(c->bit_rate/(2*8)); // 500 ms worth
           c->channels = audioheader->channels;
@@ -334,7 +336,7 @@
             {
                 ADM_info("Audio has extradata and muxer requires globalHeader, assuming it is done so.\n");
                 c->flags|=CODEC_FLAG_GLOBAL_HEADER;
-            }else       
+            }else
             {
                 ADM_warning("Audio has no extradata but muxer requires globalHeader.\n");
             }
@@ -378,8 +380,8 @@
     f*=1000000;
     videoIncrement=(uint64_t)f;
 
-    
 
+
     ADM_info("avg fps=%u\n",vStream->getAvgFps1000());
     AVRational *scale=&(video_st->codec->time_base);
     uint64_t videoDuration=vStream->getVideoDuration();
@@ -435,7 +437,7 @@
             pkt.data= buffer;
             pkt.size= out.len;
             if(out.flags & 0x10) // FIXME AVI_KEY_FRAME
-                        pkt.flags |= PKT_FLAG_KEY;
+                        pkt.flags |= AV_PKT_FLAG_KEY;
             ret =writePacket( &pkt);
             aprintf("[FF]Frame:%u, DTS=%08lu PTS=%08lu\n",written,out.dts,out.pts);
             if(false==ret)
@@ -491,7 +493,7 @@
                     pkt.stream_index=1+audio;
                     pkt.data= audioTrack->buffer;
                     pkt.size= audioTrack->size;
-                    pkt.flags |= PKT_FLAG_KEY; // Assume all audio are keyframe, which is slightly wrong
+                    pkt.flags |= AV_PKT_FLAG_KEY; // Assume all audio are keyframe, which is slightly wrong
                     ret =writePacket( &pkt);
                     audioTrack->present=false; // consumed
                     if(false==ret)

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreVideoCodec/include/ADM_ffmp43.h
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreVideoCodec/include/ADM_ffmp43.h	2011-04-20 14:48:26 UTC (rev 7154)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreVideoCodec/include/ADM_ffmp43.h	2011-04-22 08:37:01 UTC (rev 7155)
@@ -1,9 +1,9 @@
 /***************************************************************************
                           ADM_ffmp43.h  -  description
                              -------------------
-                             
+
 	Mpeg4 ****decoder******** using ffmpeg
-	                              
+
     begin                : Wed Sep 25 2002
     copyright            : (C) 2002 by mean
     email                : fixounet at free.fr
@@ -33,7 +33,7 @@
 class decoderFF:public decoders
 {
 protected:
-
+  bool  hurryUp;
   int codecId;
   uint8_t _refCopy;
   AVCodecContext *_context;

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreVideoCodec/src/ADM_ffmp43.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreVideoCodec/src/ADM_ffmp43.cpp	2011-04-20 14:48:26 UTC (rev 7154)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreVideoCodec/src/ADM_ffmp43.cpp	2011-04-22 08:37:01 UTC (rev 7155)
@@ -103,7 +103,7 @@
     //printf("[LAVC] Old pts :%"LLD" new pts :%"LLD"\n",out->Pts, (uint64_t)(src->reordered_opaque));
     //printf("[LAVC] pts: %"LLU"\n",src->pts);
     out->Pts= (uint64_t)(src->reordered_opaque);
- 
+
     return 1;
 }
 /**
@@ -126,11 +126,8 @@
   if (threads)
   {
       printf ("[lavc] Enabling MT decoder with %u threads\n", threads);
-
-      if (avcodec_thread_init (_context, threads) == -1)
-	      printf ("[lavc] Failed!!\n");
-	  else
-          _usingMT = 1;
+      _context->thread_count=threads;
+      _usingMT = 1;
   }
 }
 uint8_t decoderFF::getPARWidth (void)
@@ -156,6 +153,7 @@
 decoderFF::decoderFF (uint32_t w, uint32_t h,uint32_t fcc, uint32_t extraDataLen, uint8_t *extraData,uint32_t bpp)
             :decoders (w, h,fcc,extraDataLen,extraData,bpp)
 {
+  hurryUp=false;
   codecId = 0;
 //                              memset(&_context,0,sizeof(_context));
   _allowNull = 0;
@@ -190,7 +188,7 @@
   printf ("[lavc] Build: %d\n", LIBAVCODEC_BUILD);
   _context->debug_mv |= FF_SHOW;
   _context->debug |= FF_DEBUG_VIS_MB_TYPE + FF_DEBUG_VIS_QP;
-  
+
 }
 
 //_____________________________________________________
@@ -200,7 +198,6 @@
   if (_usingMT)
     {
       printf ("[lavc] Killing decoding threads\n");
-      avcodec_thread_free (_context);
       _usingMT = 0;
     }
 
@@ -274,16 +271,17 @@
 }
 bool decoderFF::decodeHeaderOnly (void)
 {
-  if (codecId == CODEC_ID_H264)
-    _context->hurry_up = 4;
-  else
-    _context->hurry_up = 5;
+  hurryUp=true;
+  _context->skip_frame=AVDISCARD_ALL;
+  _context->skip_idct=AVDISCARD_ALL;
   printf ("\n[lavc] Hurry up\n");
   return 1;
 }
 bool decoderFF::decodeFull (void)
 {
-  _context->hurry_up = 0;
+  _context->skip_frame=AVDISCARD_DEFAULT;
+  _context->skip_idct=AVDISCARD_DEFAULT;
+  hurryUp=false;
   printf ("\n[lavc] full decoding\n");
   return 1;
 }
@@ -321,14 +319,14 @@
       _context->debug &= ~(FF_DEBUG_VIS_MB_TYPE + FF_DEBUG_VIS_QP);
     }
 
-   
-    
+
+
   if (in->dataLength == 0 && !_allowNull)	// Null frame, silently skipped
     {
-      
+
       printf ("[Codec] null frame\n");
         // search the last image
-        if (_context->coded_frame && 
+        if (_context->coded_frame &&
             _context->coded_frame->data &&
             _context->coded_frame->data[0]
             )
@@ -358,7 +356,7 @@
     pkt.flags=AV_PKT_FLAG_KEY;
   else
     pkt.flags=0;
-  
+
   ret = avcodec_decode_video2 (_context, &_frame, &got_picture, &pkt);
   if(!bFramePossible())
   {
@@ -366,15 +364,15 @@
     _context->reordered_opaque=(int64_t)in->demuxerPts;
   }
   out->_qStride = 0;		//Default = no quant
-  if (0 > ret && !_context->hurry_up)
+  if (0 > ret && !hurryUp)
     {
       printf ("\n[lavc] error in lavcodec decoder!\n");
       printf ("[lavc] Err: %d, size :%d\n", ret, in->dataLength);
       return 0;
     }
-  if (!got_picture && !_context->hurry_up)
+  if (!got_picture && !hurryUp)
     {
-      // Some encoder code a vop header with the 
+      // Some encoder code a vop header with the
       // vop flag set to 0
       // it is meant to mean frame skipped but very dubious
       if (in->dataLength <= 8 && codecId == CODEC_ID_MPEG4)
@@ -412,7 +410,7 @@
       //return 1;
       return 0;
     }
-  if (_context->hurry_up)
+  if (hurryUp)
     {
       out->flags = frameType ();
       return 1;
@@ -486,7 +484,7 @@
 {
 // force low delay as avidemux don't handle B-frames
   ADM_info ("[lavc] Using %d bytes of extradata for MPEG4 decoder\n", (int)extraDataLen);
-  
+
   _refCopy = 1;			// YUV420 only
   _context->extradata = (uint8_t *) extraData;
   _context->extradata_size = (int)extraDataLen  ;
@@ -557,9 +555,9 @@
 */
 bool   decoderFFH264::uncompress (ADMCompressedImage * in, ADMImage * out)
 {
-  if(!_context->hurry_up) return decoderFF::uncompress (in, out);
+  if(!hurryUp) return decoderFF::uncompress (in, out);
     ADM_assert(0);
-#if 0  
+#if 0
   uint32_t nalSize, isAvc;
   av_getAVCStreamInfo(_context,&nalSize,&isAvc);
   if(isAvc)
@@ -607,7 +605,7 @@
 {
    // if(level>1) return;
     char buf[256];
-  
+
     vsnprintf(buf, sizeof(buf), fmt, list);
     if(level<=AV_LOG_INFO)
         ADM_info("[lavc] %s",buf);

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreVideoEncoder/src/ADM_coreVideoEncoderFFmpeg.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreVideoEncoder/src/ADM_coreVideoEncoderFFmpeg.cpp	2011-04-20 14:48:26 UTC (rev 7154)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreVideoEncoder/src/ADM_coreVideoEncoderFFmpeg.cpp	2011-04-22 08:37:01 UTC (rev 7155)
@@ -2,7 +2,7 @@
                           \fn ADM_coreVideoEncoder
                           \brief Base class for video encoder plugin
                              -------------------
-    
+
     copyright            : (C) 2002/2009 by mean
     email                : fixounet at free.fr
  ***************************************************************************/
@@ -34,7 +34,7 @@
 
 */
 
-ADM_coreVideoEncoderFFmpeg::ADM_coreVideoEncoderFFmpeg(ADM_coreVideoFilter *src,FFcodecSettings *set,bool globalHeader) 
+ADM_coreVideoEncoderFFmpeg::ADM_coreVideoEncoderFFmpeg(ADM_coreVideoFilter *src,FFcodecSettings *set,bool globalHeader)
                     : ADM_coreVideoEncoder(src)
 {
 uint32_t w,h;
@@ -42,9 +42,9 @@
     targetColorSpace=ADM_COLOR_YV12;
     w=getWidth();
     h=getHeight();
-    
+
     image=new ADMImageDefault(w,h);
-    _context = avcodec_alloc_context2 (CODEC_TYPE_VIDEO);
+    _context = avcodec_alloc_context2 (AVMEDIA_TYPE_VIDEO);
     ADM_assert (_context);
     memset (&_frame, 0, sizeof (_frame));
     _frame.pts = AV_NOPTS_VALUE;
@@ -75,7 +75,7 @@
                 ADM_info("Codec configured to use global header\n");
                 _context->flags|=CODEC_FLAG_GLOBAL_HEADER;
     }
-    
+
 }
 /**
     \fn ADM_coreVideoEncoderFFmpeg
@@ -88,7 +88,6 @@
         if (_isMT )
         {
           printf ("[lavc] killing threads\n");
-          avcodec_thread_free (_context);
           _isMT = false;
         }
         if(_context->codec)
@@ -100,7 +99,7 @@
     {
         delete colorSpace;
         colorSpace=NULL;
-    }   
+    }
     if(rgbBuffer)
     {
         delete [] rgbBuffer;
@@ -126,11 +125,11 @@
 
   switch(targetColorSpace)
     {
-        case ADM_COLOR_YV12:    _frame.linesize[0] = w; 
-                                _frame.linesize[1] = w>>1; 
-                                _frame.linesize[2] = w>>1; 
+        case ADM_COLOR_YV12:    _frame.linesize[0] = w;
+                                _frame.linesize[1] = w>>1;
+                                _frame.linesize[2] = w>>1;
                                 _context->pix_fmt =PIX_FMT_YUV420P;break;
-        case ADM_COLOR_YUV422P: _frame.linesize[0] = w; 
+        case ADM_COLOR_YUV422P: _frame.linesize[0] = w;
                                 _frame.linesize[1] = w>>1;
                                 _frame.linesize[2] = w>>1;
                                 _context->pix_fmt =PIX_FMT_YUV422P;break;
@@ -141,18 +140,18 @@
         default: ADM_assert(0);
 
     }
-    
+
     // Eval fps
     uint64_t f=source->getInfo()->frameIncrement;
     // Let's put 100 us as time  base
-    
+
 #ifdef TIME_TENTH_MILLISEC
     _context->time_base.num=1;
     _context->time_base.den=10000LL;
 #else
 
     int n,d;
-    
+
     usSecondsToFrac(f,&n,&d);
  //   printf("[ff] Converted a time increment of %d ms to %d /%d seconds\n",f/1000,n,d);
     _context->time_base.num=n;
@@ -166,7 +165,7 @@
 */
 int64_t          ADM_coreVideoEncoderFFmpeg::timingToLav(uint64_t val)
 {
-  int64_t v= floor( ((float)val+timeScaler/2.) /timeScaler);    
+  int64_t v= floor( ((float)val+timeScaler/2.) /timeScaler);
   return v;
 }
 /**
@@ -180,7 +179,7 @@
 
 /**
     \fn pre-encoder
-    
+
 */
 bool             ADM_coreVideoEncoderFFmpeg::preEncode(void)
 {
@@ -211,7 +210,7 @@
     //
     switch(targetColorSpace)
     {
-        case ADM_COLOR_YV12:      
+        case ADM_COLOR_YV12:
                 _frame.data[0] = image->GetWritePtr(PLANAR_Y);
                 _frame.data[2] = image->GetWritePtr(PLANAR_U);
                 _frame.data[1] = image->GetWritePtr(PLANAR_V);
@@ -255,7 +254,7 @@
 {
     int res;
     AVCodec *codec=avcodec_find_encoder(codecId);
-    if(!codec) 
+    if(!codec)
     {
         printf("[ff] Cannot find codec\n");
         return false;
@@ -266,12 +265,12 @@
     {
         encoderMT();
     }
-   res=avcodec_open(_context, codec); 
-   if(res<0) 
+   res=avcodec_open(_context, codec);
+   if(res<0)
     {   printf("[ff] Cannot open codec\n");
         return false;
     }
-   
+
     // Now allocate colorspace
     int w,h;
     FilterInfo *info=source->getInfo();
@@ -355,11 +354,11 @@
     aprintf("[ffMpeg4] Out Quant :%d, pic type %d keyf %d\n",out->out_quantizer,pict_type,keyframe);
     out->len=size;
     out->flags=0;
-    if(keyframe) 
+    if(keyframe)
         out->flags=AVI_KEY_FRAME;
     else if(pict_type==FF_B_TYPE)
         out->flags=AVI_B_FRAME;
-    
+
     // Update PTS/Dts
     if(!_context->max_b_frames)
     {
@@ -370,17 +369,17 @@
     getRealPtsFromInternal(_context->coded_frame->pts,&(out->dts),&(out->pts));
     // update lastDts
     lastDts=out->dts;
-    
-    aprintf("Codec>Out pts=%"LLU" us, out Dts=%"LLU"\n",out->pts,out->dts);    
 
+    aprintf("Codec>Out pts=%"LLU" us, out Dts=%"LLU"\n",out->pts,out->dts);
+
     // Update quant
     if(!_context->coded_frame->quality)
       out->out_quantizer=(int) floor (_frame.quality / (float) FF_QP2LAMBDA);
     else
       out->out_quantizer =(int) floor (_context->coded_frame->quality / (float) FF_QP2LAMBDA);
 
-    
 
+
     // Update stats
     if(Settings.params.mode==COMPRESS_2PASS   || Settings.params.mode==COMPRESS_2PASS_BITRATE)
     {
@@ -398,7 +397,7 @@
 bool ADM_coreVideoEncoderFFmpeg::presetContext(FFcodecSettings *set)
 {
 	  //_context->gop_size = 250;
-	
+
 #define SETX(x) _context->x=set->lavcSettings.x; printf("[LAVCODEC]"#x" : %d\n",set->lavcSettings.x);
 #define SETX_COND(x) if(set->lavcSettings.is_##x) {_context->x=set->lavcSettings.x; printf("[LAVCODEC]"#x" : %d\n",set->lavcSettings.x);} else\
 		{ printf(#x" is not activated\n");}
@@ -446,7 +445,7 @@
         default:
           ADM_assert (0);
 	}
-      
+
       SETX (_4MV);
       SETX (_QPEL);
       if(set->lavcSettings._TRELLIS_QUANT) _context->trellis=1;
@@ -461,7 +460,7 @@
 
         }
 #undef SETX
-    
+
   _context->bit_rate_tolerance = 8000000;
   _context->b_quant_factor = 1.25;
   _context->rc_strategy = 2;
@@ -508,7 +507,7 @@
 bool ADM_coreVideoEncoderFFmpeg::setupPass(void)
 {
     int averageBitrate; // Fixme
-   
+
     // Compute average bitrate
 
         if(Settings.params.mode==COMPRESS_2PASS_BITRATE) averageBitrate=Settings.params.avg_bitrate*1000;
@@ -560,10 +559,10 @@
 /**
     \fn encoderMT
     \brief handle multithreaded encoding
-*/  
+*/
 bool ADM_coreVideoEncoderFFmpeg::encoderMT (void)
 {
- 
+
   uint32_t threads =    LAVS(MultiThreaded);
   switch(threads)
   {
@@ -574,11 +573,8 @@
   if (threads)
   {
       printf ("[lavc] Enabling MT encoder with %u threads\n", threads);
-
-      if (avcodec_thread_init (_context, threads) == -1)
-	      printf ("[lavc] Failed!!\n");
-	  else
-          _isMT = 1;
+      _context->thread_count=threads;
+      _isMT = 1;
   }
   return true;
 }

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ffmpeg_package/patches/libavformat_matroskaenc.c.patch
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ffmpeg_package/patches/libavformat_matroskaenc.c.patch	2011-04-20 14:48:26 UTC (rev 7154)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ffmpeg_package/patches/libavformat_matroskaenc.c.patch	2011-04-22 08:37:01 UTC (rev 7155)
@@ -42,7 +42,7 @@
          put_ebml_uint (pb, MATROSKA_ID_TRACKFLAGLACING , 0);    // no lacing (yet)
  
 + 		/**  MEANX : Add a default duration for video **/
-+ 		if(codec->codec_type==CODEC_TYPE_VIDEO)
++ 		if(codec->codec_type==AVMEDIA_TYPE_VIDEO)
 + 		{
 + 			if(codec->time_base.den && codec->time_base.num)
 + 			{

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_audioDecoders/ADM_ad_lav/ADM_ad_lav.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_audioDecoders/ADM_ad_lav/ADM_ad_lav.cpp	2011-04-20 14:48:26 UTC (rev 7154)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_audioDecoders/ADM_ad_lav/ADM_ad_lav.cpp	2011-04-22 08:37:01 UTC (rev 7155)
@@ -18,6 +18,7 @@
 
 extern "C" {
 #include "libavcodec/avcodec.h"
+#include "libavutil/audioconvert.h"
 }
 
 #include "ADM_ad_plugin.h"
@@ -27,11 +28,12 @@
 class ADM_AudiocoderLavcodec : public     ADM_Audiocodec
 {
 	protected:
-		void *_contextVoid;
-		uint8_t _buffer[ ADMWA_BUF];
-		uint32_t _tail,_head;
-		uint32_t _blockalign;
-        uint32_t channels;
+	    bool        useFloat;
+		void      *_contextVoid;
+		uint8_t    _buffer[ ADMWA_BUF];
+		uint32_t   _tail,_head;
+		uint32_t   _blockalign;
+        uint32_t    channels;
         bool        decodeToS16(float *outptr,uint32_t *nbOut);
         bool        decodeToFloat(float *outptr,uint32_t *nbOut);
 	public:
@@ -59,9 +61,9 @@
         {WAV_MP2,AD_MEDIUM_QUAL},
         {WAV_AC3,AD_LOW_QUAL},   // liba52 preferred ???
         {WAV_AAC,AD_LOW_QUAL},   // libfaad preferred ???
-        {0x706D,AD_LOW_QUAL}, 
+        {0x706D,AD_LOW_QUAL},
         {WAV_EAC3,AD_MEDIUM_QUAL}
-  
+
 };
 
 DECLARE_AUDIO_DECODER(ADM_AudiocoderLavcodec,						// Class
@@ -97,8 +99,8 @@
  ADM_AudiocoderLavcodec::ADM_AudiocoderLavcodec(uint32_t fourcc,WAVHeader *info,uint32_t l,uint8_t *d)
        :  ADM_Audiocodec(fourcc)
  {
-    printf(" [ADM_AD_LAV] Using decoder for type 0x%x\n",info->encoding);
-    printf(" [ADM_AD_LAV] #of channels %d\n",info->channels);
+    ADM_info(" [ADM_AD_LAV] Using decoder for type 0x%x\n",info->encoding);
+    ADM_info(" [ADM_AD_LAV] #of channels %d\n",info->channels);
     _tail=_head=0;
     channels=info->channels;
     _contextVoid=(void *)avcodec_alloc_context();
@@ -109,7 +111,6 @@
     _context->channels = info->channels;
     _blockalign=_context->block_align = info->blockalign;
     _context->bit_rate = info->byterate*8;
-    _context->sample_fmt=AV_SAMPLE_FMT_S16;
     switch(fourcc)
     {
       case WAV_WMA:
@@ -158,9 +159,6 @@
     }
 
 
-
-
-
     _context->extradata=(uint8_t *)d;
     _context->extradata_size=(int)l;
     printf("[ADM_AD_LAV] Using %d bytes of extra header data\n", _context->extradata_size);
@@ -168,23 +166,41 @@
 
    AVCodec *codec=avcodec_find_decoder(_context->codec_id);
    if(!codec) {ADM_assert(0);}
+
+    useFloat=false;
+    _context->sample_fmt=AV_SAMPLE_FMT_FLT;
     if (avcodec_open(_context, codec) < 0)
     {
-        printf("[audioCodec] Lavc audio decoder init failed !\n");
-        ADM_assert(0);
+         ADM_warning("[audioCodec] Cannot use float, retrying with int16 \n");
+         _context->sample_fmt=AV_SAMPLE_FMT_S16;
+         if (avcodec_open(_context, codec) < 0)
+          {
+              ADM_warning("[audioCodec] int16 failed also. Crashing.. \n");
+              ADM_assert(0);
+          }
+          ADM_info("Decoder created using i..\n");
+    }else
+    {
+        useFloat=true;
+        ADM_info("Decoder created using float..\n");
     }
+
+
     if(!_blockalign)
     {
       if(_context->block_align) _blockalign=_context->block_align;
       else
       {
-        printf("[ADM_ad_lav] : no blockalign taking 378\n");
+        ADM_info("[ADM_ad_lav] : no blockalign taking 378\n");
         _blockalign=378;
       }
     }
-    printf("[ADM_ad_lav] init successful (blockalign %d)\n",info->blockalign);
-  
+    ADM_info("[ADM_ad_lav] init successful (blockalign %d)\n",info->blockalign);
+
 }
+/**
+    \fn dtor
+*/
  ADM_AudiocoderLavcodec::~ADM_AudiocoderLavcodec()
  {
         avcodec_close(_context);
@@ -205,8 +221,12 @@
         {
           nbChunk=(_tail-_head)/_blockalign;
           pout=SCRATCH_PAD_SIZE;
-          out=avcodec_decode_audio2(_context,(int16_t *)scratchPad,
-                                   &pout,_buffer+_head,nbChunk*_blockalign);
+          AVPacket pkt;
+          av_init_packet(&pkt);
+          pkt.size=nbChunk*_blockalign;
+          pkt.data=_buffer+_head;
+          out=avcodec_decode_audio3(_context,(int16_t *)scratchPad,
+                                   &pout,&pkt);
 
           if(out<0)
           {
@@ -252,36 +272,31 @@
         {
           nbChunk=(_tail-_head)/_blockalign;
           pout=SCRATCH_PAD_SIZE;
-          out=avcodec_decode_audio2(_context,(int16_t *)outptr,
-                                   &pout,_buffer+_head,nbChunk*_blockalign);
+
+          AVPacket pkt;
+          av_init_packet(&pkt);
+          pkt.size=nbChunk*_blockalign;
+          pkt.data=_buffer+_head;
+
+          out=avcodec_decode_audio3(_context,(int16_t *)outptr,
+                                   &pout,&pkt);
             //ADM_info("in %d out %d\n",out,pout);
 
           if(out<0)
           {
-            printf( "[ADM_ad_lav] *** decoding error (%u)***\n",_blockalign);
+            ADM_warning( "[ADM_ad_lav] *** decoding error (%u)***\n",_blockalign);
             _head+=1; // Try skipping some bytes
             continue;
           }
           if(pout>=SCRATCH_PAD_SIZE)
           {
-            printf("[ADM_ad_lav]Produced : %u, buffer %u,in%u\n",pout,SCRATCH_PAD_SIZE,_tail-_head);
+            ADM_error("[ADM_ad_lav]Produced : %u, buffer %u,in%u\n",pout,SCRATCH_PAD_SIZE,_tail-_head);
             ADM_assert(0);
           }
 
           _head+=out; // consumed bytes
           pout/=sizeof(float); // size in bytes -> nb float
-          // convert float[+-32767] to float[+-1]...
-#if 0
-          for(int i=0;i<pout;i++)
-          {
-            float f=*outptr;
-            f/=32767.;
-            *outptr=f;
-            outptr++;
-          }
-#else
-            outptr+=pout;
-#endif          
+          outptr+=pout;
           *nbOut+=pout;
         }
     return true;
@@ -305,34 +320,27 @@
         ADM_assert(nbIn+_tail<ADMWA_BUF);
         memcpy(_buffer+_tail,inptr,nbIn);
         _tail+=nbIn;
-        //---------------
-        switch(_context->codec_id)
-        {
-            case CODEC_ID_AC3:
-            case CODEC_ID_EAC3:
-            case CODEC_ID_DTS:
-                    decodeToFloat(outptr,nbOut);
-                    break;
-            default:
-                    decodeToS16(outptr,nbOut);
-                    break;
-         }
+        if(useFloat)
+         decodeToFloat(outptr,nbOut);
+        else
+         decodeToS16(outptr,nbOut);
+
         //------------------
           if(channels>=5 )
             {
             CHANNEL_TYPE *p_ch_type = channelMapping;
-#define DOIT(x,y) if(_context->channel_layout & CH_##x) *(p_ch_type++)=ADM_CH_##y;
-                    
+#define DOIT(x,y) if(_context->channel_layout & AV_CH_##x) *(p_ch_type++)=ADM_CH_##y;
+
                     DOIT(FRONT_LEFT,FRONT_LEFT);
                     DOIT(FRONT_RIGHT,FRONT_RIGHT);
-                    DOIT(FRONT_CENTER,FRONT_CENTER);                    
+                    DOIT(FRONT_CENTER,FRONT_CENTER);
                     DOIT(LOW_FREQUENCY,LFE);
                     DOIT(SIDE_LEFT,REAR_LEFT);
-                    DOIT(SIDE_RIGHT,REAR_RIGHT);
+                    DOIT(SIDE_RIGHT,REAR_RIGHT); // AV_CH_SIDE_LEFT
             }
-        
+
         return 1;
 }
-//---
+//--- EOF
 
 

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_audioEncoders/lavcodec/audioencoder_lavcodec.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_audioEncoders/lavcodec/audioencoder_lavcodec.cpp	2011-04-20 14:48:26 UTC (rev 7154)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_audioEncoders/lavcodec/audioencoder_lavcodec.cpp	2011-04-22 08:37:01 UTC (rev 7155)
@@ -1,10 +1,10 @@
 /***************************************************************************
-                        
+
     copyright            : (C) 2002-2006 by mean
     email                : fixounet at free.fr
-    
+
     Interface to FFmpeg mpeg1/2 audio encoder
-    
+
  ***************************************************************************/
 
 /***************************************************************************
@@ -20,6 +20,7 @@
 
 extern "C" {
 #include "libavcodec/avcodec.h"
+#include "libavutil/error.h"
 }
 
 #include "DIA_factory.h"
@@ -36,7 +37,7 @@
 /********************* Declare Plugin *****************************************************/
 ADM_DECLARE_AUDIO_ENCODER_PREAMBLE(AUDMEncoder_Lavcodec);
 
-static ADM_audioEncoder encoderDesc = { 
+static ADM_audioEncoder encoderDesc = {
   ADM_AUDIO_ENCODER_API_VERSION,
   create,			// Defined by macro automatically
   destroy,			// Defined by macro automatically
@@ -53,7 +54,7 @@
   setConfigurationData,  // Defined by macro automatically
 
   getBitrate,           // Defined by macro automatically
-  setBitrate,            // Defined by macro automatically 
+  setBitrate,            // Defined by macro automatically
 
   NULL,         //** put your own function here**
 
@@ -70,7 +71,7 @@
 */
 AUDMEncoder_Lavcodec::AUDMEncoder_Lavcodec(AUDMAudioFilter * instream,bool globalHeader)  :ADM_AudioEncoder    (instream)
 {
-  
+
   _context=NULL;
   _globalHeader=globalHeader;
    printf("[Lavcodec] Creating Lavcodec audio encoder (0x%x)\n",makeName(WAV));
@@ -96,7 +97,7 @@
         *d=CONTEXT->extradata;
         *l=(uint32_t)size;
     }
-    else    
+    else
     {
         *d=NULL;
         *l=0;
@@ -125,24 +126,24 @@
 {
   int ret;
   _context=( void *)avcodec_alloc_context();
-  
+  _useFloat=true;
 
   if( _incoming->getInfo()->channels>ADM_LAV_MAX_CHANNEL)
   {
     ADM_error("[Lavcodec]Too many channels\n");
-    return 0; 
+    return 0;
   }
-  wavheader.byterate=(lavBitrate*1000)>>3;         
-      
+  wavheader.byterate=(lavBitrate*1000)>>3;
+
   _chunk = ADM_LAV_SAMPLE_PER_P*wavheader.channels; // AC3
   ADM_info("[Lavcodec]Incoming : fq : %"LU", channel : %"LU" bitrate: %"LU" \n",
   wavheader.frequency,wavheader.channels,lavBitrate);
-  
-  
+
+
   CONTEXT->channels     =  wavheader.channels;
   CONTEXT->sample_rate  =  wavheader.frequency;
   CONTEXT->bit_rate     = (lavBitrate*1000); // bits -> kbits
-
+  CONTEXT->sample_fmt   =  AV_SAMPLE_FMT_FLT;
   if(true==_globalHeader)
   {
     ADM_info("Configuring audio codec to use global headers\n");
@@ -152,21 +153,39 @@
   AVCodec *codec;
   CodecID codecID;
 
-  
+
   codecID=makeName(CODEC_ID);
   codec = avcodec_find_encoder(codecID);
   ADM_assert(codec);
-  
+  // Try float...
   ret = avcodec_open(CONTEXT, codec);
-  if (0> ret) 
+  if (0> ret)
   {
-    ADM_error("[Lavcodec] init failed err : %d!\n",ret);
-    return 0;
-  }
+    char er[256]={0};
+    av_strerror(ret, er, sizeof(er));
+    ADM_info("[Lavcodec] init failed err : %d %s!\n",ret,er);
+    ADM_info("Float failed, retrying with int16\n");
+    CONTEXT->sample_fmt   =  AV_SAMPLE_FMT_S16;
+    ret = avcodec_open(CONTEXT, codec);
+    if (0> ret)
+    {
+        char er[256]={0};
+        av_strerror(ret, er, sizeof(er));
+        ADM_error("[Lavcodec] init failed err : %d %s!\n",ret,er);
+        ADM_info("s16 failed\n");
+        return 0;
+    }
+    _useFloat=false;
+    ADM_info("Using int16 samples\n");
+  }else
+     {
+         _useFloat=true;
+         ADM_info("Using float samples\n");
+     }
 
 
   ADM_info("[Lavcodec]Lavcodec successfully initialized,wavTag : 0x%x\n",makeName(WAV));
-  return 1;       
+  return 1;
 }
 /**
     \fn encode
@@ -188,12 +207,13 @@
         {
             if(left) // Last block
             {
-               dither16(&(tmpbuffer[tmphead]),left,channels);
+               if(_useFloat==false)
+                    dither16(&(tmpbuffer[tmphead]),left,channels);
                ADM_assert(tmptail>=tmphead);
 #warning buffer overread
                nbout = avcodec_encode_audio(CONTEXT, dest, 5000, (short *) &(tmpbuffer[tmphead]));
                tmphead=tmptail;
-               *samples = left/channels; 
+               *samples = left/channels;
                *len=nbout;
                ADM_info("[Lav] Last audio block\n");
                goto cnt;
@@ -204,14 +224,14 @@
               if(CONTEXT->codec->capabilities & CODEC_CAP_DELAY)
               {
                   nbout=avcodec_encode_audio(CONTEXT, dest, 5000,NULL);
-                  if(nbout<0) 
+                  if(nbout<0)
                   {
                         ADM_warning("Error while flushing lame\n");
-                        return false;   
+                        return false;
                   }
-                        
+
                   *len=nbout;
-                  *samples=_chunk/channels;  
+                  *samples=_chunk/channels;
                   ADM_info("[Lav] Flushing, last block is %d bytes\n",nbout);
                   return true;
               }else
@@ -222,20 +242,21 @@
         }
     }
 
+  if(_useFloat==false)
+    dither16(&(tmpbuffer[tmphead]),_chunk,channels);
 
-  dither16(&(tmpbuffer[tmphead]),_chunk,channels);
-
   ADM_assert(tmptail>=tmphead);
   nbout = avcodec_encode_audio(CONTEXT, dest, 5000, (short *) &(tmpbuffer[tmphead]));
 
   tmphead+=_chunk;
 cnt:
-  if (nbout < 0) 
+  if (nbout < 0)
   {
     ADM_error("[Lavcodec] Error !!! : %"LD"\n", nbout);
     return 0;
   }
   *len=nbout;
+  *samples=_chunk/channels;
   return true;
 }
 #define SZT(x) sizeof(x)/sizeof(diaMenuEntry )
@@ -261,13 +282,13 @@
                               BITRATE(384)
                           };
     diaElemMenu bitrate(&(lavBitrate),   QT_TR_NOOP("_Bitrate:"), SZT(bitrateM),bitrateM);
-  
-    
 
+
+
     diaElem *elems[]={&bitrate};
-    
+
     return ( diaFactoryRun(QT_TR_NOOP(ADM_LAV_MENU" (lav) Configuration"),1,elems));
-    
-}	
 
+}
+
 // EOF

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_audioEncoders/lavcodec/audioencoder_lavcodec.h
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_audioEncoders/lavcodec/audioencoder_lavcodec.h	2011-04-20 14:48:26 UTC (rev 7154)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_audioEncoders/lavcodec/audioencoder_lavcodec.h	2011-04-22 08:37:01 UTC (rev 7155)
@@ -18,12 +18,12 @@
 class AUDMEncoder_Lavcodec : public ADM_AudioEncoder
 {
   protected:
-   
+    bool               _useFloat;
     void              *_context;
     uint32_t            _chunk;
     bool               _globalHeader;
-    
-         
+
+
   public:
             bool        initialize(void);
    virtual             ~AUDMEncoder_Lavcodec();

Modified: branches/avidemux_2.6_branch_mean/cmake/admFFmpegBuild.cmake
===================================================================
--- branches/avidemux_2.6_branch_mean/cmake/admFFmpegBuild.cmake	2011-04-20 14:48:26 UTC (rev 7154)
+++ branches/avidemux_2.6_branch_mean/cmake/admFFmpegBuild.cmake	2011-04-22 08:37:01 UTC (rev 7155)
@@ -1,5 +1,7 @@
-set(FFMPEG_VERSION "8cb3c557a9f3b24bc55325e3f64a2150b983305c")	# http://git.ffmpeg.org/?p=ffmpeg;a=snapshot;h=2be4fa05c5528073bcfc472d1c23f2d77b679a9d;sf=tgz
+set(FFMPEG_VERSION "efb5fa79f5ca34140db357a00c999286097ab53e")	# http://git.ffmpeg.org/?p=ffmpeg;a=snapshot;h=2be4fa05c5528073bcfc472d1c23f2d77b679a9d;sf=tgz
+#set(FFMPEG_VERSION "8cb3c557a9f3b24bc55325e3f64a2150b983305c")	# http://git.ffmpeg.org/?p=ffmpeg;a=snapshot;h=2be4fa05c5528073bcfc472d1c23f2d77b679a9d;sf=tgz
 
+
 set(FFMPEG_ROOT_DIR "${AVIDEMUX_TOP_SOURCE_DIR}/avidemux_core/ffmpeg_package")
 set(FFMPEG_PATCH_DIR  "${FFMPEG_ROOT_DIR}/patches/")
 set(FFMPEG_SOURCE_ARCHIVE "ffmpeg_r${FFMPEG_VERSION}.tar.gz")
@@ -13,12 +15,15 @@
 					 mjpegb  mpeg2video  mpeg4  msmpeg4v2  msmpeg4v3  msvideo1  nellymoser  png  qdm2  rawvideo  snow
 					 svq3  theora  tscc 
 					 vc1  vp3  vp6  vp6a  vp6f  wmav2  wmv1  wmv2  wmv3)
-set(FFMPEG_ENCODERS  ac3  dvvideo  ffv1  ffvhuff  flv  h263  huffyuv  mjpeg  mp2  mpeg1video  mpeg2video  mpeg4  snow aac)
+set(FFMPEG_ENCODERS  ac3  ac3_float dvvideo  ffv1  ffvhuff  flv  h263  huffyuv  mjpeg  mp2  mpeg1video  mpeg2video  mpeg4  snow aac)
 set(FFMPEG_MUXERS  flv  matroska  mpeg1vcd  mpeg2dvd  mpeg2svcd  mpegts  mov  mp4  psp)
 set(FFMPEG_PARSERS  ac3  h263  h264  mpeg4video)
 set(FFMPEG_PROTOCOLS  file)
-set(FFMPEG_FLAGS  --enable-shared --disable-static --disable-everything --disable-avfilter --enable-hwaccels --enable-postproc --enable-gpl 
-				  --enable-runtime-cpudetect --disable-network --disable-ffplay --disable-ffprobe)
+set(FFMPEG_FLAGS  --enable-shared --disable-static --disable-everything --disable-avfilter )
+set(FFMPEG_FLAGS  ${FFMPEG_FLAGS} --enable-hwaccels --enable-postproc --enable-gpl )
+set(FFMPEG_FLAGS  ${FFMPEG_FLAGS} --enable-runtime-cpudetect --disable-network )
+set(FFMPEG_FLAGS  ${FFMPEG_FLAGS} --disable-ffplay --disable-ffprobe)
+set(FFMPEG_FLAGS  ${FFMPEG_FLAGS} --enable-audio-float)
 
 MACRO (xadd opt)
 	set(FFMPEG_FLAGS ${FFMPEG_FLAGS} ${opt})
@@ -219,7 +224,6 @@
 
 add_custom_command(OUTPUT
 						"${FFMPEG_BINARY_DIR}/libavcodec/${LIBAVCODEC_LIB}"
-						"${FFMPEG_BINARY_DIR}/libavcore/${LIBAVCORE_LIB}"
 						"${FFMPEG_BINARY_DIR}/libavformat/${LIBAVFORMAT_LIB}"
 						"${FFMPEG_BINARY_DIR}/libavutil/${LIBAVUTIL_LIB}"
 						"${FFMPEG_BINARY_DIR}/libpostproc/${LIBPOSTPROC_LIB}"
@@ -237,14 +241,12 @@
 ADM_INSTALL_LIB_FILES("${FFMPEG_BINARY_DIR}/libavutil/${LIBAVUTIL_LIB}")
 ADM_INSTALL_LIB_FILES("${FFMPEG_BINARY_DIR}/libavcodec/${LIBAVCODEC_LIB}")
 ADM_INSTALL_LIB_FILES("${FFMPEG_BINARY_DIR}/libavformat/${LIBAVFORMAT_LIB}")
-ADM_INSTALL_LIB_FILES("${FFMPEG_BINARY_DIR}/libavcore/${LIBAVCORE_LIB}")
 
 install(FILES "${FFMPEG_BINARY_DIR}/libavutil/avconfig.h" DESTINATION "${AVIDEMUX_INCLUDE_DIR}/avidemux/2.6/libavutil") 
 
 install(FILES "${FFMPEG_SOURCE_DIR}/libavcodec/avcodec.h" "${FFMPEG_SOURCE_DIR}/libavcodec/vdpau.h"
+	"${FFMPEG_SOURCE_DIR}/libavcodec/version.h" 
 	DESTINATION "${AVIDEMUX_INCLUDE_DIR}/avidemux/2.6/libavcodec")
-install(FILES "${FFMPEG_SOURCE_DIR}/libavcore/audioconvert.h" "${FFMPEG_SOURCE_DIR}/libavcore/avcore.h" 
-	"${FFMPEG_SOURCE_DIR}/libavcore/samplefmt.h" DESTINATION "${AVIDEMUX_INCLUDE_DIR}/avidemux/2.6/libavcore")
 install(FILES "${FFMPEG_SOURCE_DIR}/libavformat/avformat.h" "${FFMPEG_SOURCE_DIR}/libavformat/avio.h"
 	"${FFMPEG_SOURCE_DIR}/libavformat/version.h" 
 	"${FFMPEG_SOURCE_DIR}/libavformat/flv.h" DESTINATION "${AVIDEMUX_INCLUDE_DIR}/avidemux/2.6/libavformat")
@@ -253,6 +255,7 @@
 	"${FFMPEG_SOURCE_DIR}/libavutil/cpu.h" "${FFMPEG_SOURCE_DIR}/libavutil/intfloat_readwrite.h"
 	"${FFMPEG_SOURCE_DIR}/libavutil/log.h" "${FFMPEG_SOURCE_DIR}/libavutil/mathematics.h"
 	"${FFMPEG_SOURCE_DIR}/libavutil/mem.h" "${FFMPEG_SOURCE_DIR}/libavutil/pixfmt.h"
+	"${FFMPEG_SOURCE_DIR}/libavutil/samplefmt.h" "${FFMPEG_SOURCE_DIR}/libavutil/audioconvert.h"
 	"${FFMPEG_SOURCE_DIR}/libavutil/rational.h" DESTINATION "${AVIDEMUX_INCLUDE_DIR}/avidemux/2.6/libavutil")
 install(FILES "${FFMPEG_SOURCE_DIR}/libpostproc/postprocess.h" DESTINATION "${AVIDEMUX_INCLUDE_DIR}/avidemux/2.6/libpostproc")
 install(FILES "${FFMPEG_SOURCE_DIR}/libswscale/swscale.h" DESTINATION "${AVIDEMUX_INCLUDE_DIR}/avidemux/2.6/libswscale")

Modified: branches/avidemux_2.6_branch_mean/cmake/admFFmpegPrepareGit.cmake
===================================================================
--- branches/avidemux_2.6_branch_mean/cmake/admFFmpegPrepareGit.cmake	2011-04-20 14:48:26 UTC (rev 7154)
+++ branches/avidemux_2.6_branch_mean/cmake/admFFmpegPrepareGit.cmake	2011-04-22 08:37:01 UTC (rev 7155)
@@ -8,7 +8,7 @@
 # Checkout FFmpeg source and patch it
 if (NOT EXISTS  "${FFMPEG_SOURCE_DIR}/${FFMPEG_VERSION}")
 	message(STATUS "Checking out FFmpeg from git repository")
-	execute_process(COMMAND ${GIT_EXECUTABLE} clone --depth 20 git://git.ffmpeg.org/ffmpeg.git  "${FFMPEG_SOURCE_DIR}"
+	execute_process(COMMAND ${GIT_EXECUTABLE} clone --depth 20 git://git.videolan.org/ffmpeg.git  "${FFMPEG_SOURCE_DIR}"
 					${ffmpegGitOutput})
 	MESSAGE(STATUS "Going to revision ${FFMPEG_VERSION}")
 	execute_process(COMMAND ${GIT_EXECUTABLE} checkout   ${FFMPEG_VERSION}

Modified: branches/avidemux_2.6_branch_mean/cmake/admFFmpegUtil.cmake
===================================================================
--- branches/avidemux_2.6_branch_mean/cmake/admFFmpegUtil.cmake	2011-04-20 14:48:26 UTC (rev 7154)
+++ branches/avidemux_2.6_branch_mean/cmake/admFFmpegUtil.cmake	2011-04-22 08:37:01 UTC (rev 7155)
@@ -5,38 +5,34 @@
 ENDMACRO (getFfmpegVersionFromHeader)
 
 MACRO (getFfmpegLibNames sourceDir)
-	getFfmpegVersionFromHeader("libavcodec" "${sourceDir}/libavcodec/avcodec.h" LIBAVCODEC_VERSION_MAJOR LIBAVCODEC_VERSION)
-	getFfmpegVersionFromHeader("libavcore" "${sourceDir}/libavcore/avcore.h" LIBAVCORE_VERSION_MAJOR LIBAVCORE_VERSION)	
+	getFfmpegVersionFromHeader("libavcodec" "${sourceDir}/libavcodec/version.h" LIBAVCODEC_VERSION_MAJOR LIBAVCODEC_VERSION)
 	getFfmpegVersionFromHeader("libavformat" "${sourceDir}/libavformat/version.h" LIBAVFORMAT_VERSION_MAJOR LIBAVFORMAT_VERSION)
 	getFfmpegVersionFromHeader("libavutil" "${sourceDir}/libavutil/avutil.h" LIBAVUTIL_VERSION_MAJOR LIBAVUTIL_VERSION)
 	getFfmpegVersionFromHeader("libpostproc" "${sourceDir}/libpostproc/postprocess.h" LIBPOSTPROC_VERSION_MAJOR LIBPOSTPROC_VERSION)
 	getFfmpegVersionFromHeader("libswscale" "${sourceDir}/libswscale/swscale.h" LIBSWSCALE_VERSION_MAJOR LIBSWSCALE_VERSION)
-	#MESSAGE(STATUS "AVFORMAT : ${LIBAVFORMAT_VERSION}, Major : ${LIBAVFORMAT_VERSION_MAJOR}")
-	#MESSAGE(STATUS "AVCODEC  : ${LIBAVCODEC_VERSION}, Major : ${LIBAVCODEC_VERSION_MAJOR}")
-	#MESSAGE(STATUS "AVUTIL   : ${LIBAVUTIL_VERSION}, Major : ${LIBAVUTIL_VERSION_MAJOR}")
-	#MESSAGE(STATUS "POSTPRC  : ${LIBPOSTPROC_VERSION}, Major : ${LIBPOSTPROC_VERSION_MAJOR}")
-	#MESSAGE(STATUS "SWSCALE  : ${LIBSWSCALE_VERSION}, Major : ${LIBSWSCALE_VERSION_MAJOR}")
+	MESSAGE(STATUS "AVFORMAT : ${LIBAVFORMAT_VERSION}, Major : ${LIBAVFORMAT_VERSION_MAJOR}")
+	MESSAGE(STATUS "AVCODEC  : ${LIBAVCODEC_VERSION}, Major : ${LIBAVCODEC_VERSION_MAJOR}")
+	MESSAGE(STATUS "AVUTIL   : ${LIBAVUTIL_VERSION}, Major : ${LIBAVUTIL_VERSION_MAJOR}")
+	MESSAGE(STATUS "POSTPRC  : ${LIBPOSTPROC_VERSION}, Major : ${LIBPOSTPROC_VERSION_MAJOR}")
+	MESSAGE(STATUS "SWSCALE  : ${LIBSWSCALE_VERSION}, Major : ${LIBSWSCALE_VERSION_MAJOR}")
 	if (UNIX)
 		set(LIBAVCODEC_ADM ADM6)
 	endif (UNIX)
 
 	if (APPLE)
 		set(LIBAVCODEC_LIB lib${LIBAVCODEC_ADM}avcodec.${LIBAVCODEC_VERSION}${CMAKE_SHARED_LIBRARY_SUFFIX})
-		set(LIBAVCORE_LIB lib${LIBAVCODEC_ADM}avcore.${LIBAVCORE_VERSION}${CMAKE_SHARED_LIBRARY_SUFFIX})
 		set(LIBAVFORMAT_LIB lib${LIBAVCODEC_ADM}avformat.${LIBAVFORMAT_VERSION}${CMAKE_SHARED_LIBRARY_SUFFIX})
 		set(LIBAVUTIL_LIB lib${LIBAVCODEC_ADM}avutil.${LIBAVUTIL_VERSION}${CMAKE_SHARED_LIBRARY_SUFFIX})
 		set(LIBPOSTPROC_LIB lib${LIBAVCODEC_ADM}postproc.${LIBPOSTPROC_VERSION}${CMAKE_SHARED_LIBRARY_SUFFIX})
 		set(LIBSWSCALE_LIB lib${LIBAVCODEC_ADM}swscale.${LIBSWSCALE_VERSION}${CMAKE_SHARED_LIBRARY_SUFFIX})
 	elseif (UNIX)
 		set(LIBAVCODEC_LIB lib${LIBAVCODEC_ADM}avcodec${CMAKE_SHARED_LIBRARY_SUFFIX}.${LIBAVCODEC_VERSION})
-		set(LIBAVCORE_LIB lib${LIBAVCODEC_ADM}avcore${CMAKE_SHARED_LIBRARY_SUFFIX}.${LIBAVCORE_VERSION})
 		set(LIBAVFORMAT_LIB lib${LIBAVCODEC_ADM}avformat${CMAKE_SHARED_LIBRARY_SUFFIX}.${LIBAVFORMAT_VERSION})
 		set(LIBAVUTIL_LIB lib${LIBAVCODEC_ADM}avutil${CMAKE_SHARED_LIBRARY_SUFFIX}.${LIBAVUTIL_VERSION})
 		set(LIBPOSTPROC_LIB lib${LIBAVCODEC_ADM}postproc${CMAKE_SHARED_LIBRARY_SUFFIX}.${LIBPOSTPROC_VERSION})
 		set(LIBSWSCALE_LIB lib${LIBAVCODEC_ADM}swscale${CMAKE_SHARED_LIBRARY_SUFFIX}.${LIBSWSCALE_VERSION})
 	else (APPLE)
 		set(LIBAVCODEC_LIB ${LIBAVCODEC_ADM}avcodec-${LIBAVCODEC_VERSION}${CMAKE_SHARED_LIBRARY_SUFFIX})
-		set(LIBAVCORE_LIB ${LIBAVCODEC_ADM}avcore-${LIBAVCORE_VERSION}${CMAKE_SHARED_LIBRARY_SUFFIX})
 		set(LIBAVFORMAT_LIB ${LIBAVCODEC_ADM}avformat-${LIBAVFORMAT_VERSION}${CMAKE_SHARED_LIBRARY_SUFFIX})
 		set(LIBAVUTIL_LIB ${LIBAVCODEC_ADM}avutil-${LIBAVUTIL_VERSION}${CMAKE_SHARED_LIBRARY_SUFFIX})
 		set(LIBPOSTPROC_LIB ${LIBAVCODEC_ADM}postproc-${LIBPOSTPROC_VERSION}${CMAKE_SHARED_LIBRARY_SUFFIX})
@@ -52,7 +48,6 @@
 	add_library(ADM_libavutil UNKNOWN IMPORTED)
 	add_library(ADM_libavcodec UNKNOWN IMPORTED)
 	add_library(ADM_libavformat UNKNOWN IMPORTED)
-	add_library(ADM_libavcore UNKNOWN IMPORTED)
 
 	if (${installed})
 		set_property(TARGET ADM_libswscale PROPERTY IMPORTED_LOCATION "${binaryDir}/${LIBSWSCALE_LIB}")
@@ -60,17 +55,14 @@
 		set_property(TARGET ADM_libavutil PROPERTY IMPORTED_LOCATION "${binaryDir}/${LIBAVUTIL_LIB}")
 		set_property(TARGET ADM_libavcodec PROPERTY IMPORTED_LOCATION "${binaryDir}/${LIBAVCODEC_LIB}")
 		set_property(TARGET ADM_libavformat PROPERTY IMPORTED_LOCATION "${binaryDir}/${LIBAVFORMAT_LIB}")
-		set_property(TARGET ADM_libavcore PROPERTY IMPORTED_LOCATION "${binaryDir}/${LIBAVCORE_LIB}")
 	else (${installed})
 		set_property(TARGET ADM_libswscale PROPERTY IMPORTED_LOCATION "${binaryDir}/libswscale/${LIBSWSCALE_LIB}")
 		set_property(TARGET ADM_libpostproc PROPERTY IMPORTED_LOCATION "${binaryDir}/libpostproc/${LIBPOSTPROC_LIB}")
 		set_property(TARGET ADM_libavutil PROPERTY IMPORTED_LOCATION "${binaryDir}/libavutil/${LIBAVUTIL_LIB}")
 		set_property(TARGET ADM_libavcodec PROPERTY IMPORTED_LOCATION "${binaryDir}/libavcodec/${LIBAVCODEC_LIB}")
 		set_property(TARGET ADM_libavformat PROPERTY IMPORTED_LOCATION "${binaryDir}/libavformat/${LIBAVFORMAT_LIB}")
-		set_property(TARGET ADM_libavcore PROPERTY IMPORTED_LOCATION "${binaryDir}/libavcore/${LIBAVCORE_LIB}")
 
 		add_custom_target(libavcodec DEPENDS "${binaryDir}/libavcodec/${LIBAVCODEC_LIB}")
-		add_custom_target(libavcore DEPENDS "${binaryDir}/libavcore/${LIBAVCORE_LIB}")
 		add_custom_target(libavformat DEPENDS "${binaryDir}/libavformat/${LIBAVFORMAT_LIB}")
 		add_custom_target(libavutil DEPENDS "${binaryDir}/libavutil/${LIBAVUTIL_LIB}")
 		add_custom_target(libpostproc DEPENDS "${binaryDir}/libpostproc/${LIBAVPOSTPROC_LIB}")
@@ -79,7 +71,6 @@
 
 		if (${CMAKE_VERSION} VERSION_GREATER 2.8.3)
 			add_dependencies(ADM_libavcodec libavcodec)
-			add_dependencies(ADM_libavcore libavcore)
 			add_dependencies(ADM_libavformat libavformat)
 			add_dependencies(ADM_libavutil libavutil)
 			add_dependencies(ADM_libpostproc libpostproc)



From mean at mail.berlios.de  Fri Apr 22 10:38:06 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Fri, 22 Apr 2011 10:38:06 +0200
Subject: [Avidemux-svn-commit] r7157 - in
	branches/avidemux_2.6_branch_mean/autononreg/py: . codec_out
Message-ID: <20110422083806.7362F4813DE@sheep.berlios.de>

Author: mean
Date: 2011-04-22 10:38:06 +0200 (Fri, 22 Apr 2011)
New Revision: 7157

Added:
   branches/avidemux_2.6_branch_mean/autononreg/py/codec_out/
   branches/avidemux_2.6_branch_mean/autononreg/py/codec_out/audio_codec.py
Log:
[autononreg] Add tinypy script to test all lav based audio codec

Added: branches/avidemux_2.6_branch_mean/autononreg/py/codec_out/audio_codec.py
===================================================================
--- branches/avidemux_2.6_branch_mean/autononreg/py/codec_out/audio_codec.py	                        (rev 0)
+++ branches/avidemux_2.6_branch_mean/autononreg/py/codec_out/audio_codec.py	2011-04-22 08:38:06 UTC (rev 7157)
@@ -0,0 +1,38 @@
+#PY  <- Needed to identify#
+#--automatically built--
+#--Project: /home/fx/allAudio.py
+
+adm=Avidemux()
+#** Video **
+# 01 videos source 
+adm.loadVideo("/work/samples/avi/2mn.avi")
+#01 segments
+adm.clearSegments()
+adm.addSegment(0,0,1281739416)
+adm.markerA=0
+adm.markerB=1281739416
+
+#** Postproc **
+adm.setPostProc(3,3,0)
+
+#** Video Codec conf **
+adm.videoCodec("Copy")
+
+#** Filters **
+
+#** Audio **
+adm.audioReset()
+adm.audioCodec("copy",-1075244360)
+
+#** Muxer **
+adm.setContainer("MKV","forceDisplayWidth=False","displayWidth=1280")
+
+allcodec=["LavAAC","LavAC3","LavMP2"]
+for i in allcodec:
+    print str(i)
+    adm.audioCodec(i,128)
+    out="/tmp/audio_codec_"+i+".mkv"
+    adm.save(out)
+
+#adm.save(output)
+#End of script



From mean at mail.berlios.de  Fri Apr 22 10:38:07 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Fri, 22 Apr 2011 10:38:07 +0200
Subject: [Avidemux-svn-commit] r7158 - in
	branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_muxers:
	muxerFlv muxerMkv muxerMp4 muxerffPS muxerffTS
Message-ID: <20110422083808.055DC4813DE@sheep.berlios.de>

Author: mean
Date: 2011-04-22 10:38:07 +0200 (Fri, 22 Apr 2011)
New Revision: 7158

Modified:
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_muxers/muxerFlv/muxerFlv.cpp
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_muxers/muxerMkv/muxerMkv.cpp
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_muxers/muxerMp4/muxerMP4.cpp
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_muxers/muxerffPS/muxerffPS.cpp
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_muxers/muxerffTS/muxerffTS.cpp
Log:
[muxer] Update lav based muxer to use new api (av_xx instead of url_xx)

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_muxers/muxerFlv/muxerFlv.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_muxers/muxerFlv/muxerFlv.cpp	2011-04-22 08:38:06 UTC (rev 7157)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_muxers/muxerFlv/muxerFlv.cpp	2011-04-22 08:38:07 UTC (rev 7158)
@@ -120,9 +120,10 @@
             printf("[FLV]: set param failed \n");
             return false;
         }
-        if (url_fopen(&(oc->pb), file, URL_WRONLY) < 0)
+        int er=avio_open(&(oc->pb), file, AVIO_FLAG_WRITE);
+        if (er)
         {
-            printf("[FLV]: Failed to open file :%s\n",file);
+            ADM_error("[Flv]: Failed to open file :%s, er=%d\n",file,er);
             r=false;
             goto finish;
         }

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_muxers/muxerMkv/muxerMkv.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_muxers/muxerMkv/muxerMkv.cpp	2011-04-22 08:38:06 UTC (rev 7157)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_muxers/muxerMkv/muxerMkv.cpp	2011-04-22 08:38:07 UTC (rev 7158)
@@ -62,13 +62,13 @@
     /* All seems fine, open stuff */
     if(false==setupMuxer("matroska",file))
     {
-        printf("[Mkv] Failed to open muxer (setup)\n");
+        ADM_warning("[Mkv] Failed to open muxer (setup)\n");
         return false;
     }
  
    if(initVideo(s)==false) 
     {
-        printf("[Mkv] Failed to init video\n");
+        ADM_warning("[Mkv] Failed to init video\n");
         return false;
     }
   
@@ -92,7 +92,7 @@
 
         if(initAudio(nbAudioTrack,a)==false)
         {
-            printf("[Mkv] Failed to init audio\n");
+            ADM_warning("[Mkv] Failed to init audio\n");
             return false;
         }
         
@@ -105,9 +105,10 @@
             printf("Lav: set param failed \n");
             return false;
         }
-        if (url_fopen(&(oc->pb), file, URL_WRONLY) < 0)
+        int er=avio_open(&(oc->pb), file, AVIO_FLAG_WRITE);
+        if (er)
         {
-            printf("[Mkv]: Failed to open file :%s\n",file);
+            ADM_error("[Mkv]: Failed to open file :%s, er=%d\n",file,er);
             return false;
         }
 
@@ -144,7 +145,7 @@
 bool muxerMkv::close(void) 
 {
    
-    printf("[Mkv] Closing\n");
+    ADM_info("[Mkv] Closing\n");
     return closeMuxer();
 }
 

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_muxers/muxerMp4/muxerMP4.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_muxers/muxerMp4/muxerMP4.cpp	2011-04-22 08:38:06 UTC (rev 7157)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_muxers/muxerMp4/muxerMP4.cpp	2011-04-22 08:38:07 UTC (rev 7158)
@@ -110,12 +110,14 @@
             printf("Lav: set param failed \n");
             return false;
         }
-        if (url_fopen(&(oc->pb), file, URL_WRONLY) < 0)
+        int er=avio_open(&(oc->pb), file, AVIO_FLAG_WRITE);
+        if (er)
         {
-            printf("[MP4]: Failed to open file :%s\n",file);
+            ADM_error("[Mp4]: Failed to open file :%s, er=%d\n",file,er);
             return false;
         }
 
+
         ADM_assert(av_write_header(oc)>=0);
         vStream=s;
         aStreams=a;

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_muxers/muxerffPS/muxerffPS.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_muxers/muxerffPS/muxerffPS.cpp	2011-04-22 08:38:06 UTC (rev 7157)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_muxers/muxerffPS/muxerffPS.cpp	2011-04-22 08:38:07 UTC (rev 7158)
@@ -115,9 +115,10 @@
             printf("[ffPs]Lav: set param failed \n");
             return false;
         }
-        if (url_fopen(&(oc->pb), file, URL_WRONLY) < 0)
+        int erx=avio_open(&(oc->pb), file, AVIO_FLAG_WRITE);
+        if (erx)
         {
-            printf("[ffPS]: Failed to open file :%s\n",file);
+            ADM_error("[PS]: Failed to open file :%s, er=%d\n",file,erx);
             return false;
         }
 

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_muxers/muxerffTS/muxerffTS.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_muxers/muxerffTS/muxerffTS.cpp	2011-04-22 08:38:06 UTC (rev 7157)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_muxers/muxerffTS/muxerffTS.cpp	2011-04-22 08:38:07 UTC (rev 7158)
@@ -115,9 +115,10 @@
             printf("[ffTS]Lav: set param failed \n");
             return false;
         }
-        if (url_fopen(&(oc->pb), file, URL_WRONLY) < 0)
+        int erx=avio_open(&(oc->pb), file, AVIO_FLAG_WRITE);
+        if (erx)
         {
-            printf("[ffTS]: Failed to open file :%s\n",file);
+            ADM_error("[Mp4]: Failed to open file :%s, er=%d\n",file,erx);
             return false;
         }
 



From mean at mail.berlios.de  Fri Apr 22 10:38:09 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Fri, 22 Apr 2011 10:38:09 +0200
Subject: [Avidemux-svn-commit] r7159 -
	branches/avidemux_2.6_branch_mean/cmake
Message-ID: <20110422083809.27E754813DE@sheep.berlios.de>

Author: mean
Date: 2011-04-22 10:38:08 +0200 (Fri, 22 Apr 2011)
New Revision: 7159

Modified:
   branches/avidemux_2.6_branch_mean/cmake/admFFmpegBuild.cmake
Log:
[ffmpeg] Enable mp2/mp3 audio decoder

Modified: branches/avidemux_2.6_branch_mean/cmake/admFFmpegBuild.cmake
===================================================================
--- branches/avidemux_2.6_branch_mean/cmake/admFFmpegBuild.cmake	2011-04-22 08:38:07 UTC (rev 7158)
+++ branches/avidemux_2.6_branch_mean/cmake/admFFmpegBuild.cmake	2011-04-22 08:38:08 UTC (rev 7159)
@@ -13,7 +13,7 @@
 
 set(FFMPEG_DECODERS  aac ac3 eac3 adpcm_ima_amv  amv  bmp  cinepak  cyuv  dca  dvbsub  dvvideo  ffv1  ffvhuff  flv  fraps  h263  h264  huffyuv  mjpeg
 					 mjpegb  mpeg2video  mpeg4  msmpeg4v2  msmpeg4v3  msvideo1  nellymoser  png  qdm2  rawvideo  snow
-					 svq3  theora  tscc 
+					 svq3  theora  tscc  mp2 mp3 mp2_float mp3_float
 					 vc1  vp3  vp6  vp6a  vp6f  wmav2  wmv1  wmv2  wmv3)
 set(FFMPEG_ENCODERS  ac3  ac3_float dvvideo  ffv1  ffvhuff  flv  h263  huffyuv  mjpeg  mp2  mpeg1video  mpeg2video  mpeg4  snow aac)
 set(FFMPEG_MUXERS  flv  matroska  mpeg1vcd  mpeg2dvd  mpeg2svcd  mpegts  mov  mp4  psp)



From mean at mail.berlios.de  Fri Apr 22 10:38:10 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Fri, 22 Apr 2011 10:38:10 +0200
Subject: [Avidemux-svn-commit] r7160 -
	branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_audioDecoders/ADM_ad_lav
Message-ID: <20110422083810.4C1C94813DE@sheep.berlios.de>

Author: mean
Date: 2011-04-22 10:38:10 +0200 (Fri, 22 Apr 2011)
New Revision: 7160

Modified:
   branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_audioDecoders/ADM_ad_lav/ADM_ad_lav.cpp
Log:
[ffmpeg] Use float decoder when available

Modified: branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_audioDecoders/ADM_ad_lav/ADM_ad_lav.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_audioDecoders/ADM_ad_lav/ADM_ad_lav.cpp	2011-04-22 08:38:08 UTC (rev 7159)
+++ branches/avidemux_2.6_branch_mean/avidemux_plugins/ADM_audioDecoders/ADM_ad_lav/ADM_ad_lav.cpp	2011-04-22 08:38:10 UTC (rev 7160)
@@ -178,11 +178,17 @@
               ADM_warning("[audioCodec] int16 failed also. Crashing.. \n");
               ADM_assert(0);
           }
-          ADM_info("Decoder created using i..\n");
+          ADM_info("Decoder created using int16..\n");
     }else
     {
-        useFloat=true;
-        ADM_info("Decoder created using float..\n");
+        if(_context->sample_fmt==AV_SAMPLE_FMT_FLT)
+        {
+            useFloat=true;
+            ADM_info("Decoder created using float..\n");
+        } else
+        {
+            ADM_info("Decoder created using int16..\n");
+        }
     }
 
 



From mean at mail.berlios.de  Fri Apr 22 15:09:14 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Fri, 22 Apr 2011 15:09:14 +0200
Subject: [Avidemux-svn-commit] r7161 -
	branches/avidemux_2.6_branch_mean/cmake
Message-ID: <20110422130914.9E4C148134B@sheep.berlios.de>

Author: mean
Date: 2011-04-22 15:09:14 +0200 (Fri, 22 Apr 2011)
New Revision: 7161

Modified:
   branches/avidemux_2.6_branch_mean/cmake/admFFmpegBuild.cmake
Log:
[FFmpeg] Also install error.h

Modified: branches/avidemux_2.6_branch_mean/cmake/admFFmpegBuild.cmake
===================================================================
--- branches/avidemux_2.6_branch_mean/cmake/admFFmpegBuild.cmake	2011-04-22 08:38:10 UTC (rev 7160)
+++ branches/avidemux_2.6_branch_mean/cmake/admFFmpegBuild.cmake	2011-04-22 13:09:14 UTC (rev 7161)
@@ -255,6 +255,7 @@
 	"${FFMPEG_SOURCE_DIR}/libavutil/cpu.h" "${FFMPEG_SOURCE_DIR}/libavutil/intfloat_readwrite.h"
 	"${FFMPEG_SOURCE_DIR}/libavutil/log.h" "${FFMPEG_SOURCE_DIR}/libavutil/mathematics.h"
 	"${FFMPEG_SOURCE_DIR}/libavutil/mem.h" "${FFMPEG_SOURCE_DIR}/libavutil/pixfmt.h"
+	"${FFMPEG_SOURCE_DIR}/libavutil/error.h" 
 	"${FFMPEG_SOURCE_DIR}/libavutil/samplefmt.h" "${FFMPEG_SOURCE_DIR}/libavutil/audioconvert.h"
 	"${FFMPEG_SOURCE_DIR}/libavutil/rational.h" DESTINATION "${AVIDEMUX_INCLUDE_DIR}/avidemux/2.6/libavutil")
 install(FILES "${FFMPEG_SOURCE_DIR}/libpostproc/postprocess.h" DESTINATION "${AVIDEMUX_INCLUDE_DIR}/avidemux/2.6/libpostproc")



From mean at mail.berlios.de  Fri Apr 22 19:21:38 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Fri, 22 Apr 2011 19:21:38 +0200
Subject: [Avidemux-svn-commit] r7162 -
	branches/avidemux_2.6_branch_mean/cmake
Message-ID: <20110422172138.22F7848134B@sheep.berlios.de>

Author: mean
Date: 2011-04-22 19:21:37 +0200 (Fri, 22 Apr 2011)
New Revision: 7162

Modified:
   branches/avidemux_2.6_branch_mean/cmake/admCheckAudioEncoderLibs.cmake
Log:
[aften] Override version check when cross compiling.

Modified: branches/avidemux_2.6_branch_mean/cmake/admCheckAudioEncoderLibs.cmake
===================================================================
--- branches/avidemux_2.6_branch_mean/cmake/admCheckAudioEncoderLibs.cmake	2011-04-22 13:09:14 UTC (rev 7161)
+++ branches/avidemux_2.6_branch_mean/cmake/admCheckAudioEncoderLibs.cmake	2011-04-22 17:21:37 UTC (rev 7162)
@@ -13,44 +13,36 @@
 	IF (AFTEN_FOUND)
 		SET(USE_AFTEN 1)
 	        SET(TMP_LIBS "${AFTEN_LIBRARY_DIR}")	
-		IF (NOT DEFINED AFTEN_TEST_RUN_RESULT)
-			TRY_RUN(AFTEN_TEST_RUN_RESULT
-				AFTEN_TEST_COMPILE_RESULT
-				${CMAKE_BINARY_DIR}
-				"${AVIDEMUX_TOP_SOURCE_DIR}/cmake_compile_check/aften_check.cpp"
-				CMAKE_FLAGS -DINCLUDE_DIRECTORIES:PATH=${AFTEN_INCLUDE_DIR}   -DLINK_LIBRARIES:STRING=${TMP_LIBS}
-                                OUTPUT_VARIABLE AFTEN_OUTPUT)
-		ENDIF (NOT DEFINED AFTEN_TEST_RUN_RESULT)
-                #MESSAGE(STATUS " Compile ${AFTEN_TEST_COMPILE_RESULT}, TMP_LIBS=${TMP_LIBS},OUTPUT=${AFTEN_OUTPUT}")
-                IF( AFTEN_TEST_COMPILE_RESULT )
-                        IF(AFTEN_TEST_RUN_RESULT EQUAL 99)
-                                MESSAGE(STATUS "  version: SVN")
-                                MESSAGE(WARNING "  This is a svn version of Aften. We will assume it is compatible with 0.0.8, build may fail")
-                                SET(USE_AFTEN 1)
-		        ELSEIF (AFTEN_TEST_RUN_RESULT EQUAL 8)
-                                MESSAGE(STATUS " This is version 0.8 of aften")
-			        SET(USE_AFTEN 1)
-			        SET(USE_AFTEN_08 1)
-                        ENDIF(AFTEN_TEST_RUN_RESULT EQUAL 99)
-		      #  IF (AFTEN_TEST_RUN_RESULT EQUAL 8)
-			        #MESSAGE(STATUS "  version: 0.0.8")
-			        #SET(USE_AFTEN_08 1)
-		        #ELSEIF (AFTEN_TEST_RUN_RESULT EQUAL 7)
-			        #MESSAGE(STATUS "  version: 0.07")
-			        #SET(USE_AFTEN_07 1)
-                        #ELSEIF(AFTEN_TEST_RUN_RESULT EQUAL 99)
-                                #MESSAGE(STATUS "  version: SVN")
-                                #MESSAGE(WARNING "  This is a svn version of Aften. We will assume it is compatible with 0.0.8, build may fail")
-                                #SET(USE_AFTEN_08 1)
-                        #ELSE(AFTEN_TEST_RUN_RESULT EQUAL 8)
-                                #MESSAGE(STATUS "Warning: Unable to determine Aften version - support for Aften will be turned off (result=${AFTEN_TEST_RUN_RESULT})")
-                                #SET(USE_AFTEN 0)
-		        #ENDIF (AFTEN_TEST_RUN_RESULT EQUAL 8)
-                ELSE( AFTEN_TEST_COMPILE_RESULT )
-			        MESSAGE(STATUS "  Cannot compile test program to determine Aften version")
-			        SET(USE_AFTEN 0)
-                ENDIF( AFTEN_TEST_COMPILE_RESULT )
+                IF(CROSS)
+                                        MESSAGE(WARNING "  Cross compiling mode used. Let's assume aften is recent, it might fail at compile time!")
+                                        SET(USE_AFTEN 1)
+                ELSE(CROSS)
 
+        		IF (NOT DEFINED AFTEN_TEST_RUN_RESULT)
+			        TRY_RUN(AFTEN_TEST_RUN_RESULT
+				        AFTEN_TEST_COMPILE_RESULT
+				        ${CMAKE_BINARY_DIR}
+				        "${AVIDEMUX_TOP_SOURCE_DIR}/cmake_compile_check/aften_check.cpp"
+				        CMAKE_FLAGS -DINCLUDE_DIRECTORIES:PATH=${AFTEN_INCLUDE_DIR}   -DLINK_LIBRARIES:STRING=${TMP_LIBS}
+                                        OUTPUT_VARIABLE AFTEN_OUTPUT)
+		        ENDIF (NOT DEFINED AFTEN_TEST_RUN_RESULT)
+                        #MESSAGE(STATUS " Compile ${AFTEN_TEST_COMPILE_RESULT}, TMP_LIBS=${TMP_LIBS},OUTPUT=${AFTEN_OUTPUT}")
+                        IF( AFTEN_TEST_COMPILE_RESULT )
+                                IF(AFTEN_TEST_RUN_RESULT EQUAL 99)
+                                        MESSAGE(STATUS "  version: SVN")
+                                        MESSAGE(WARNING "  This is a svn version of Aften. We will assume it is compatible with 0.0.8, build may fail")
+                                        SET(USE_AFTEN 1)
+		                ELSEIF (AFTEN_TEST_RUN_RESULT EQUAL 8)
+                                        MESSAGE(STATUS " This is version 0.8 of aften")
+			                SET(USE_AFTEN 1)
+			                SET(USE_AFTEN_08 1)
+                                ENDIF(AFTEN_TEST_RUN_RESULT EQUAL 99)
+                        ELSE( AFTEN_TEST_COMPILE_RESULT )
+			                MESSAGE(STATUS "  Cannot compile test program to determine Aften version")
+			                SET(USE_AFTEN 0)
+                        ENDIF( AFTEN_TEST_COMPILE_RESULT )
+                ENDIF(CROSS)
+
 	ENDIF (AFTEN_FOUND)
 ELSE (AFTEN)
 	MESSAGE("${MSG_DISABLE_OPTION}")



From mean at mail.berlios.de  Sat Apr 23 21:56:47 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Sat, 23 Apr 2011 21:56:47 +0200
Subject: [Avidemux-svn-commit] r7163 -
	branches/avidemux_2.5_branch_gruntster/avidemux/ADM_UIs/ADM_QT4/src
Message-ID: <20110423195647.7DA104814C9@sheep.berlios.de>

Author: mean
Date: 2011-04-23 21:56:47 +0200 (Sat, 23 Apr 2011)
New Revision: 7163

Modified:
   branches/avidemux_2.5_branch_gruntster/avidemux/ADM_UIs/ADM_QT4/src/T_configMenu.cpp
Log:
[qt4] gcc 4.6 fix

Modified: branches/avidemux_2.5_branch_gruntster/avidemux/ADM_UIs/ADM_QT4/src/T_configMenu.cpp
===================================================================
--- branches/avidemux_2.5_branch_gruntster/avidemux/ADM_UIs/ADM_QT4/src/T_configMenu.cpp	2011-04-22 17:21:37 UTC (rev 7162)
+++ branches/avidemux_2.5_branch_gruntster/avidemux/ADM_UIs/ADM_QT4/src/T_configMenu.cpp	2011-04-23 19:56:47 UTC (rev 7163)
@@ -210,7 +210,8 @@
 				delete [] configData;
 
 				fillConfigurationComboBox();
-				selectConfiguration(&QFileInfo(configFileName).completeBaseName(), CONFIG_MENU_USER);
+				QString qs=QFileInfo(configFileName).completeBaseName();
+				selectConfiguration(&qs, CONFIG_MENU_USER);
 			}
 		}
 	}
@@ -315,8 +316,8 @@
 	void diaElemConfigMenu::updateMe(void)
 	{
 		ADM_QconfigMenu *configMenu = (ADM_QconfigMenu*)myWidget;
-
-		configMenu->selectConfiguration(&QString(configName), *configType);
+		QString qs=QString(configName);
+		configMenu->selectConfiguration(&qs, *configType);
 	}
 
 	void diaElemConfigMenu::finalize(void)
@@ -355,8 +356,8 @@
 				while (parentWidget != NULL);
 			}
 		}
-
-		configMenu->selectConfiguration(&QString(configName), *configType);
+		QString qs=QString(configName);
+		configMenu->selectConfiguration(&(qs), *configType);
 	}
 }
 



From mean at mail.berlios.de  Sat Apr 23 21:56:49 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Sat, 23 Apr 2011 21:56:49 +0200
Subject: [Avidemux-svn-commit] r7164 -
	branches/avidemux_2.5_branch_gruntster/plugins/ADM_videoEncoder/ADM_vidEnc_x264/qt4
Message-ID: <20110423195649.CD2B94814C9@sheep.berlios.de>

Author: mean
Date: 2011-04-23 21:56:49 +0200 (Sat, 23 Apr 2011)
New Revision: 7164

Modified:
   branches/avidemux_2.5_branch_gruntster/plugins/ADM_videoEncoder/ADM_vidEnc_x264/qt4/x264ConfigDialog.cpp
Log:
[qt4] gcc 4.6 fix

Modified: branches/avidemux_2.5_branch_gruntster/plugins/ADM_videoEncoder/ADM_vidEnc_x264/qt4/x264ConfigDialog.cpp
===================================================================
--- branches/avidemux_2.5_branch_gruntster/plugins/ADM_videoEncoder/ADM_vidEnc_x264/qt4/x264ConfigDialog.cpp	2011-04-23 19:56:47 UTC (rev 7163)
+++ branches/avidemux_2.5_branch_gruntster/plugins/ADM_videoEncoder/ADM_vidEnc_x264/qt4/x264ConfigDialog.cpp	2011-04-23 19:56:49 UTC (rev 7164)
@@ -350,7 +350,8 @@
 		delete [] xml;
 
 		fillConfigurationComboBox();
-		selectConfiguration(&QFileInfo(configFileName).completeBaseName(), PLUGIN_CONFIG_USER);
+		QString qs=QFileInfo(configFileName).completeBaseName();
+		selectConfiguration(&qs, PLUGIN_CONFIG_USER);
 	}
 
 	delete [] configDirectory;
@@ -586,9 +587,9 @@
 
 	disableGenericSlots = true;
 	options->getPresetConfiguration(&configurationName, &configurationType);
+	QString qs=QString(configurationName);
+	bool foundConfig = selectConfiguration(&qs, configurationType);
 
-	bool foundConfig = selectConfiguration(&QString(configurationName), configurationType);
-
 	if (!foundConfig)
 		printf("Configuration %s (type %d) could not be found.  Using snapshot.\n", configurationName, configurationType);
 



From mean at mail.berlios.de  Tue Apr 26 20:34:50 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Tue, 26 Apr 2011 20:34:50 +0200
Subject: [Avidemux-svn-commit] r7165 -
	branches/avidemux_2.5_branch_gruntster/cmake
Message-ID: <20110426183450.AB7624814FD@sheep.berlios.de>

Author: mean
Date: 2011-04-26 20:34:50 +0200 (Tue, 26 Apr 2011)
New Revision: 7165

Modified:
   branches/avidemux_2.5_branch_gruntster/cmake/admFFmpegBuild.cmake
Log:
[build] Fix right of lav libraries to be not executable, patch from rpmfusion

Modified: branches/avidemux_2.5_branch_gruntster/cmake/admFFmpegBuild.cmake
===================================================================
--- branches/avidemux_2.5_branch_gruntster/cmake/admFFmpegBuild.cmake	2011-04-23 19:56:49 UTC (rev 7164)
+++ branches/avidemux_2.5_branch_gruntster/cmake/admFFmpegBuild.cmake	2011-04-26 18:34:50 UTC (rev 7165)
@@ -178,29 +178,36 @@
 	set(FFMPEG_INSTALL_DIR lib${LIB_SUFFIX})
 endif (WIN32)
 
+if (CMAKE_INSTALL_SO_NO_EXE)
+	set(FFMPEG_SHLIB_INSTALL_TYPE FILES)
+else (CMAKE_INSTALL_SO_NO_EXE)
+	set(FFMPEG_SHLIB_INSTALL_TYPE PROGRAMS)
+endif (CMAKE_INSTALL_SO_NO_EXE)
+
+
 add_library(ADM_libswscale UNKNOWN IMPORTED)
 set_property(TARGET ADM_libswscale PROPERTY IMPORTED_LOCATION "${FFMPEG_BINARY_DIR}/libswscale/${LIBSWSCALE_LIB}")
-install(FILES "${FFMPEG_BINARY_DIR}/libswscale/${LIBSWSCALE_LIB}" DESTINATION "${FFMPEG_INSTALL_DIR}")
+install(${FFMPEG_SHLIB_INSTALL_TYPE} "${FFMPEG_BINARY_DIR}/libswscale/${LIBSWSCALE_LIB}" DESTINATION "${FFMPEG_INSTALL_DIR}")
 
 add_library(ADM_libpostproc UNKNOWN IMPORTED)
 set_property(TARGET ADM_libpostproc PROPERTY IMPORTED_LOCATION "${FFMPEG_BINARY_DIR}/libpostproc/${LIBPOSTPROC_LIB}")
-install(FILES "${FFMPEG_BINARY_DIR}/libpostproc/${LIBPOSTPROC_LIB}" DESTINATION "${FFMPEG_INSTALL_DIR}")
+install(${FFMPEG_SHLIB_INSTALL_TYPE} "${FFMPEG_BINARY_DIR}/libpostproc/${LIBPOSTPROC_LIB}" DESTINATION "${FFMPEG_INSTALL_DIR}")
 
 add_library(ADM_libavutil UNKNOWN IMPORTED)
 set_property(TARGET ADM_libavutil PROPERTY IMPORTED_LOCATION "${FFMPEG_BINARY_DIR}/libavutil/${LIBAVUTIL_LIB}")
-install(FILES "${FFMPEG_BINARY_DIR}/libavutil/${LIBAVUTIL_LIB}" DESTINATION "${FFMPEG_INSTALL_DIR}")
+install(${FFMPEG_SHLIB_INSTALL_TYPE} "${FFMPEG_BINARY_DIR}/libavutil/${LIBAVUTIL_LIB}" DESTINATION "${FFMPEG_INSTALL_DIR}")
 
 add_library(ADM_libavcodec UNKNOWN IMPORTED)
 set_property(TARGET ADM_libavcodec PROPERTY IMPORTED_LOCATION "${FFMPEG_BINARY_DIR}/libavcodec/${LIBAVCODEC_LIB}")
-install(FILES "${FFMPEG_BINARY_DIR}/libavcodec/${LIBAVCODEC_LIB}" DESTINATION "${FFMPEG_INSTALL_DIR}")
+install(${FFMPEG_SHLIB_INSTALL_TYPE} "${FFMPEG_BINARY_DIR}/libavcodec/${LIBAVCODEC_LIB}" DESTINATION "${FFMPEG_INSTALL_DIR}")
 
 add_library(ADM_libavformat UNKNOWN IMPORTED)
 set_property(TARGET ADM_libavformat PROPERTY IMPORTED_LOCATION "${FFMPEG_BINARY_DIR}/libavformat/${LIBAVFORMAT_LIB}")
-install(FILES "${FFMPEG_BINARY_DIR}/libavformat/${LIBAVFORMAT_LIB}" DESTINATION "${FFMPEG_INSTALL_DIR}")
+install(${FFMPEG_SHLIB_INSTALL_TYPE} "${FFMPEG_BINARY_DIR}/libavformat/${LIBAVFORMAT_LIB}" DESTINATION "${FFMPEG_INSTALL_DIR}")
 
 add_library(ADM_libavcore UNKNOWN IMPORTED)
 set_property(TARGET ADM_libavcore PROPERTY IMPORTED_LOCATION "${FFMPEG_BINARY_DIR}/libavcore/${LIBAVCORE_LIB}")
-install(FILES "${FFMPEG_BINARY_DIR}/libavcore/${LIBAVCORE_LIB}" DESTINATION "${FFMPEG_INSTALL_DIR}")
+install(${FFMPEG_SHLIB_INSTALL_TYPE} "${FFMPEG_BINARY_DIR}/libavcore/${LIBAVCORE_LIB}" DESTINATION "${FFMPEG_INSTALL_DIR}")
 
 include_directories("${FFMPEG_SOURCE_DIR}")
 include_directories("${FFMPEG_SOURCE_DIR}/libavutil")



From mean at mail.berlios.de  Tue Apr 26 20:34:52 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Tue, 26 Apr 2011 20:34:52 +0200
Subject: [Avidemux-svn-commit] r7166 - in
	branches/avidemux_2.5_branch_gruntster/avidemux/ADM_outputs:
	. oplug_mp4
Message-ID: <20110426183452.182D14814FD@sheep.berlios.de>

Author: mean
Date: 2011-04-26 20:34:51 +0200 (Tue, 26 Apr 2011)
New Revision: 7166

Modified:
   branches/avidemux_2.5_branch_gruntster/avidemux/ADM_outputs/ADM_lavformat.cpp
   branches/avidemux_2.5_branch_gruntster/avidemux/ADM_outputs/oplug_mp4/oplug_mp4.cpp
Log:
[save] be more verbose when failing, patch by JaLee

Modified: branches/avidemux_2.5_branch_gruntster/avidemux/ADM_outputs/ADM_lavformat.cpp
===================================================================
--- branches/avidemux_2.5_branch_gruntster/avidemux/ADM_outputs/ADM_lavformat.cpp	2011-04-26 18:34:50 UTC (rev 7165)
+++ branches/avidemux_2.5_branch_gruntster/avidemux/ADM_outputs/ADM_lavformat.cpp	2011-04-26 18:34:51 UTC (rev 7166)
@@ -210,6 +210,7 @@
                                    if(!ADM_4cc_to_lavcodec((const char *)&(info->fcc),&(c->codec_id)))
                                    {
                                       printf("[lavFormat] Cannot map  this\n");
+                                      GUI_Error_HIG(QT_TR_NOOP("Can't mux that video codec into MKV"), NULL);
                                       return 0;
                                    }
 

Modified: branches/avidemux_2.5_branch_gruntster/avidemux/ADM_outputs/oplug_mp4/oplug_mp4.cpp
===================================================================
--- branches/avidemux_2.5_branch_gruntster/avidemux/ADM_outputs/oplug_mp4/oplug_mp4.cpp	2011-04-26 18:34:50 UTC (rev 7165)
+++ branches/avidemux_2.5_branch_gruntster/avidemux/ADM_outputs/oplug_mp4/oplug_mp4.cpp	2011-04-26 18:34:51 UTC (rev 7166)
@@ -350,7 +350,10 @@
 					  muxerType,
 					  &info, videoExtraDataSize, videoExtraData,
 					  audioinfo, extraDataSize, extraData))
-					  break;
+                                          {
+                                                r=0;
+					        break;
+                                          }
 			  }
 
 			  while (muxer->needAudio())



From mean at mail.berlios.de  Sat Apr 30 11:22:49 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Sat, 30 Apr 2011 11:22:49 +0200
Subject: [Avidemux-svn-commit] r7168 - in branches/avidemux_2.6_branch_mean:
	. avidemux_core/ADM_coreUtils/src cmake
Message-ID: <20110430092249.7BA11481323@sheep.berlios.de>

Author: mean
Date: 2011-04-30 11:22:49 +0200 (Sat, 30 Apr 2011)
New Revision: 7168

Modified:
   branches/avidemux_2.6_branch_mean/.gitignore
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/prefs.in
   branches/avidemux_2.6_branch_mean/cmake/admSerialization.py
Log:
[gen pref] remove unused parts + update serialization to be used with prefs later

Modified: branches/avidemux_2.6_branch_mean/.gitignore
===================================================================
--- branches/avidemux_2.6_branch_mean/.gitignore	2011-04-30 09:22:40 UTC (rev 7167)
+++ branches/avidemux_2.6_branch_mean/.gitignore	2011-04-30 09:22:49 UTC (rev 7168)
@@ -9,3 +9,5 @@
 build*
 debs
 addons/*
+install/*
+avidemux/qt4/common

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/prefs.in
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/prefs.in	2011-04-30 09:22:40 UTC (rev 7167)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/prefs.in	2011-04-30 09:22:49 UTC (rev 7168)
@@ -11,26 +11,6 @@
 # maximum     :: the largest  value this option can have (ignored for STRING)
 
 # option name				type	value	minimum	maximum (incl.)
-codecs.svcd.enctype,			UINT,	0,	0,	99999
-codecs.svcd.bitrate,			UINT,	1500000,16000,	2748000
-codecs.svcd.quantizer,			UINT,	4,	2,	31
-codecs.svcd.finalsize,			UINT,	700,	0,	99999
-codecs.svcd.interlaced,			UINT,	0,	0,	1
-codecs.svcd.bff,			UINT,	0,	0,	1
-codecs.svcd.widescreen,			UINT,	0,	0,	1
-codecs.svcd.matrix,			UINT,	0,	0,	99999
-codecs.svcd.gopsize,			UINT,	12,	0,	99999
-codecs.svcd.maxbitrate,			UINT,	2500,	0,	2748
-codecs.dvd.enctype,			UINT,	0,	0,	99999
-codecs.dvd.bitrate,			UINT,	1500000,16000,	9900000
-codecs.dvd.quantizer,			UINT,	4,	2,	31
-codecs.dvd.finalsize,			UINT,	700,	0,	99999
-codecs.dvd.interlaced,			UINT,	0,	0,	1
-codecs.dvd.bff,				UINT,	0,	0,	1
-codecs.dvd.widescreen,			UINT,	0,	0,	1
-codecs.dvd.matrix,			UINT,	0,	0,	99999
-codecs.dvd.gopsize,			UINT,	12,	0,	99999
-codecs.dvd.maxbitrate,			UINT,	9000,	0,	9900
 codecs.xvid.enctype,			UINT,	0,	0,	99999
 codecs.xvid.quantizer,			UINT,	4,	2,	32
 codecs.xvid.bitrate,			UINT,	1500000,17,	5900000

Modified: branches/avidemux_2.6_branch_mean/cmake/admSerialization.py
===================================================================
--- branches/avidemux_2.6_branch_mean/cmake/admSerialization.py	2011-04-30 09:22:40 UTC (rev 7167)
+++ branches/avidemux_2.6_branch_mean/cmake/admSerialization.py	2011-04-30 09:22:49 UTC (rev 7168)
@@ -60,10 +60,10 @@
 #
 def processLine(varType,varName):
     if(not varType in allCTypes):
-        print("Unknown var "+str(varType))
+        print("Unknown var type "+str(varType))
         exit(1)
     if(not varType in allATypes):
-        print("Unknown var "+str(varType))
+        print("Unknown var type "+str(varType))
         exit(1)
     if(not varType in allJTypes):
         print("json:Unknown var "+str(varType))
@@ -155,6 +155,11 @@
     line=f.readline()
     if(len(line)==0):
         break # eof
+    line=re.sub(r'#.*$',r'',line)
+    line=re.sub(r'//.*$',r'',line)
+    line=line.strip()
+    if(len(line)==0):
+        continue # blank
     # Remove #....
     if(line.find(r'{')!=-1):
         #
@@ -185,9 +190,14 @@
             exit(1)
         line=re.sub(r'#.*$',r'',line)
         line=re.sub(r'//.*$',r'',line)
+        if(len(line)==0):
+            continue
         # split by :
         (varType,varName)=line.split(r':')
         #
+        # Remote extra ,.... used by prefs
+        varName=re.sub(r',.*$',r';',varName)
+        #
         varName=re.sub(r';.*$',r'',varName)
         varName=varName.strip()
         varType=varType.strip()



From mean at mail.berlios.de  Sat Apr 30 14:49:07 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Sat, 30 Apr 2011 14:49:07 +0200
Subject: [Avidemux-svn-commit] r7169 -
	branches/avidemux_2.5_branch_gruntster/plugins/ADM_videoEncoder/ADM_vidEnc_xvid/qt4
Message-ID: <20110430124908.20548481323@sheep.berlios.de>

Author: mean
Date: 2011-04-30 14:49:07 +0200 (Sat, 30 Apr 2011)
New Revision: 7169

Modified:
   branches/avidemux_2.5_branch_gruntster/plugins/ADM_videoEncoder/ADM_vidEnc_xvid/qt4/xvidConfigDialog.cpp
Log:
[xvid: gcc 46]

Modified: branches/avidemux_2.5_branch_gruntster/plugins/ADM_videoEncoder/ADM_vidEnc_xvid/qt4/xvidConfigDialog.cpp
===================================================================
--- branches/avidemux_2.5_branch_gruntster/plugins/ADM_videoEncoder/ADM_vidEnc_xvid/qt4/xvidConfigDialog.cpp	2011-04-30 09:22:49 UTC (rev 7168)
+++ branches/avidemux_2.5_branch_gruntster/plugins/ADM_videoEncoder/ADM_vidEnc_xvid/qt4/xvidConfigDialog.cpp	2011-04-30 12:49:07 UTC (rev 7169)
@@ -233,7 +233,9 @@
 		delete [] xml;
 
 		fillConfigurationComboBox();
-		selectConfiguration(&QFileInfo(configFileName).completeBaseName(), PLUGIN_CONFIG_USER);
+
+                QString qs=QFileInfo(configFileName).completeBaseName();
+		selectConfiguration(&qs, PLUGIN_CONFIG_USER);
 	}
 
 	delete [] configDirectory;
@@ -373,7 +375,8 @@
 	disableGenericSlots = true;
 	options->getPresetConfiguration(&configurationName, &configurationType);		
 
-	bool foundConfig = selectConfiguration(&QString(configurationName), configurationType);
+        QString qs=QString(configurationName);
+	bool foundConfig = selectConfiguration(&qs, configurationType);
 
 	if (!foundConfig)
 		printf("Configuration %s (type %d) could not be found.  Using snapshot.\n", configurationName, configurationType);



From mean at mail.berlios.de  Sat Apr 30 21:19:30 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Sat, 30 Apr 2011 21:19:30 +0200
Subject: [Avidemux-svn-commit] r7170 -
	branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src
Message-ID: <20110430191930.B829748137F@sheep.berlios.de>

Author: mean
Date: 2011-04-30 21:19:30 +0200 (Sat, 30 Apr 2011)
New Revision: 7170

Modified:
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/CMakeLists.txt
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/prefs.cpp
Log:
[pref] Switch from xml to json

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/CMakeLists.txt
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/CMakeLists.txt	2011-04-30 12:49:07 UTC (rev 7169)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/CMakeLists.txt	2011-04-30 19:19:30 UTC (rev 7170)
@@ -15,7 +15,9 @@
 ADM_string.cpp
 ADM_getbits.cpp
 ADM_writeRiff.cpp
-prefs.cpp)
+prefs.cpp
+prefs2_json.cpp
+)
 
 ADM_ADD_SHARED_LIBRARY(ADM_coreUtils6 ${ADM_coreUtils_SRCS})
 TARGET_LINK_LIBRARIES(ADM_coreUtils6 ADM_core6 ADM_coreUI6 ADM_libavutil ADM_libavcodec ${LIBXML2_LIBRARIES})

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/prefs.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/prefs.cpp	2011-04-30 12:49:07 UTC (rev 7169)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/prefs.cpp	2011-04-30 19:19:30 UTC (rev 7170)
@@ -27,240 +27,139 @@
 
 
 #include "ADM_cpp.h"
-#include <libxml/tree.h>
-#include <libxml/parser.h>
-
 #include "ADM_default.h"
 #include "ADM_quota.h"
+#include "ADM_paramList.h" 
+#include "prefs.h"
 
-#include <unistd.h>	/* access(), R_OK */
-#include <errno.h>	/* errno, ENOENT */
-#include <dirent.h>
+#include "prefs2.h"
+#include "prefs2_desc.cpp"
 
-#undef free
+#define CONFIG "config2"
+#define FILE_SIZE_MAX (20*1024)
 extern char *ADM_getBaseDir(void);
-#define CONFIG "config"
-extern int  qxmlSaveFormatFile(const char *filename, xmlDocPtr cur, int format);
 static char *checkDirAccess(char *home);
 extern char *ADM_escape(const ADM_filename *incoming);
 class preferences *prefs;
-// <prefs_gen>
-typedef enum {
-	ADM_UINT,
-	ADM_INT,
-	ADM_ULONG,
-	ADM_LONG,
-	ADM_FLOAT,
-	ADM_STRING,
-	ADM_FILENAME
-} types;
+static my_prefs_struct myPrefs;
 
-typedef struct {
-	const char *name;
-	types type;
-	const char *default_val;
-	char *current_val;
-	const char *minimum;
-	const char *maximum;
-} opt_def;
+bool  my_prefs_struct_jserialize(const char *file, const my_prefs_struct *key);
+bool  my_prefs_struct_jdeserialize(const char *file, const ADM_paramList *tmpl,my_prefs_struct *key);
 
-static opt_def opt_defs [] = {
-	{"codecs.svcd.enctype",		ADM_UINT,	"0",	NULL,	"0",	"99999"},
-	{"codecs.svcd.bitrate",		ADM_UINT,	"1500000",NULL,	"16000","2748000"},
-	{"codecs.svcd.quantizer",		ADM_UINT,	"4",	NULL,	"2",	"31"	},
-	{"codecs.svcd.finalsize",	ADM_UINT,	"700",	NULL,	"0",	"99999"},
-	{"codecs.svcd.interlaced",		ADM_UINT,	"0",	NULL,	"0",	"1"	},
-	{"codecs.svcd.bff",		ADM_UINT,	"0",	NULL,	"0",	"1"	},
-	{"codecs.svcd.widescreen",		ADM_UINT,	"0",	NULL,	"0",	"1"	},
-	{"codecs.svcd.matrix",		ADM_UINT,	"0",	NULL,	"0",	"99999"},
-	{"codecs.svcd.gopsize",		ADM_UINT,	"12",	NULL,	"0",	"99999"},
-	{"codecs.svcd.maxbitrate",		ADM_UINT,	"2500",	NULL,	"0",	"2748"	},
-	{"codecs.dvd.enctype",		ADM_UINT,	"0",	NULL,	"0",	"99999"},
-	{"codecs.dvd.bitrate",		ADM_UINT,	"1500000",NULL,	"16000","9900000"},
-	{"codecs.dvd.quantizer",		ADM_UINT,	"4",	NULL,	"2",	"31"	},
-	{"codecs.dvd.finalsize",	ADM_UINT,	"700",	NULL,	"0",	"99999"},
-	{"codecs.dvd.interlaced",		ADM_UINT,	"0",	NULL,	"0",	"1"	},
-	{"codecs.dvd.bff",		ADM_UINT,	"0",	NULL,	"0",	"1"	},
-	{"codecs.dvd.widescreen",		ADM_UINT,	"0",	NULL,	"0",	"1"	},
-	{"codecs.dvd.matrix",		ADM_UINT,	"0",	NULL,	"0",	"99999"},
-	{"codecs.dvd.gopsize",		ADM_UINT,	"12",	NULL,	"0",	"99999"},
-	{"codecs.dvd.maxbitrate",		ADM_UINT,	"9000",	NULL,	"0",	"9900"	},
-	{"codecs.xvid.enctype",		ADM_UINT,	"0",	NULL,	"0",	"99999"},
-	{"codecs.xvid.quantizer",		ADM_UINT,	"4",	NULL,	"2",	"32"	},
-	{"codecs.xvid.bitrate",		ADM_UINT,	"1500000",NULL,	"17",	"5900000"},
-	{"codecs.xvid.finalsize",	ADM_UINT,	"700",	NULL,	"0",	"3999"	},
-	{"codecs.preferredcodec",		ADM_STRING,"FFmpeg4",NULL, NULL, NULL },
-	{"filters.subtitle.fontname",		ADM_FILENAME,"/usr/share/fonts/truetype/DejaVuSans.ttf",NULL, NULL, NULL },
-	{"filters.subtitle.charset",		ADM_STRING,"ISO-8859-1",NULL, NULL, NULL },
-	{"filters.subtitle.fontsize",		ADM_UINT,	"24",	NULL,	"1",	"576"	},
-	{"filters.subtitle.ypercent",	ADM_INT,	"255",	NULL,	"0",	"255"	},
-	{"filters.subtitle.upercent",		ADM_INT,	"0",	NULL,	"0",	"255"	},
-	{"filters.subtitle.vpercent",		ADM_INT,	"0",	NULL,	"0",	"255"	},
-	{"filters.subtitle.selfadjustable",		ADM_UINT,	"0",	NULL,	"0",	"1"	},
-	{"filters.subtitle.usebackgroundcolor",		ADM_UINT,	"0",	NULL,	"0",	"1"	},
-	{"filters.avsfilter.avs_script",		ADM_FILENAME,"",	NULL, NULL, NULL },
-	{"filters.avsfilter.avs_loader",		ADM_FILENAME,"",	NULL, NULL, NULL },
-	{"filters.avsfilter.pipe_timeout",		ADM_UINT,	"10",	NULL,	"1",	"30"	},
-	{"filters.avsfilter.debug_msg",		ADM_UINT,	"1",	NULL,	"0",	"1"	},
-	{"settings.mpegsplit",	ADM_UINT,	"790",	NULL,	"400",	"5000"	},
-	{"device.audiodevice",		ADM_STRING,"ALSA",	NULL, NULL, NULL },
-	{"device.audio.alsa_device",		ADM_STRING,"dmix",	NULL, NULL, NULL },
-	{"device.videodevice",		ADM_UINT,	"0",	NULL,	"0",	"10"	},
-	{"default.postproc_type",		ADM_UINT,	"3",	NULL,	"0",	"7"	},
-	{"default.postproc_value",		ADM_UINT,	"3",	NULL,	"0",	"5"	},
-	{"lastfiles.file1",		ADM_FILENAME,"",	NULL, NULL, NULL },
-	{"lastfiles.file2",		ADM_FILENAME,"",	NULL, NULL, NULL },
-	{"lastfiles.file3",		ADM_FILENAME,"",	NULL, NULL, NULL },
-	{"lastfiles.file4",		ADM_FILENAME,"",	NULL, NULL, NULL },
-	{"lastdir_read",		ADM_FILENAME,"",	NULL, NULL, NULL },
-	{"lastdir_write",		ADM_FILENAME,"",	NULL, NULL, NULL },
-	{"lame_cli",		ADM_STRING,"",	NULL, NULL, NULL },
-	{"pipe_cmd",		ADM_STRING,"",	NULL, NULL, NULL },
-	{"pipe_param",		ADM_STRING,"",	NULL, NULL, NULL },
-	{"lame_path",		ADM_STRING,"",	NULL, NULL, NULL },
-	{"toolame_path",		ADM_STRING,"",	NULL, NULL, NULL },
-	{"lvemux_path",		ADM_STRING,"",	NULL, NULL, NULL },
-	{"requant_path",		ADM_STRING,"",	NULL, NULL, NULL },
-	{"message_level",		ADM_UINT,	"2",	NULL,	"0",	"2"	},
-	{"feature.swap_if_A_greater_than_B",		ADM_UINT,	"1",	NULL,	"0",	"1"	},
-	{"feature.svcdres.preferedsourceratio",		ADM_STRING,"1:1",	NULL, NULL, NULL },
-	{"feature.saveprefsonexit",		ADM_UINT,	"1",	NULL,	"0",	"1"	},
-	{"feature.ignoresavedmarkers",		ADM_UINT,	"0",	NULL,	"0",	"1"	},
-	{"feature.disable_nuv_resync",		ADM_UINT,	"0",	NULL,	"0",	"1"	},
-	{"feature.tryautoidx",		ADM_UINT,	"0",	NULL,	"0",	"1"	},
-	{"feature.use_odml",		ADM_UINT,	"0",	NULL,	"0",	"1"	},
-	{"feature.use_systray",		ADM_UINT,	"0",	NULL,	"0",	"1"	},
-	{"feature.reuse_2pass_log",		ADM_UINT,	"0",	NULL,	"0",	"1"	},
-	{"feature.audiobar_uses_master",		ADM_UINT,	"0",	NULL,	"0",	"1"	},
-	{"feature.threading.lavc",		ADM_UINT,	"0",	NULL,	"0",	"32"	},
-	{"feature.cpu_caps",		ADM_UINT,	"4294967295",NULL,	"0",	"4294967295"},
-	{"feature.mpeg_no_limit",		ADM_UINT,	"0",	NULL,	"0",	"1"	},
-	{"feature.auto_buildmap",		ADM_UINT,	"0",	NULL,	"0",	"1"	},
-	{"feature.auto_rebuildindex",		ADM_UINT,	"0",	NULL,	"0",	"1"	},
-	{"feature.auto_unpack",		ADM_UINT,	"0",	NULL,	"0",	"1"	},
-	{"downmixing.prologic",		ADM_UINT,	"2",	NULL,	"0",	"2"	},
-	{"filters.autoload.path",		ADM_STRING,"/tmp/",NULL, NULL, NULL },
-	{"filters.autoload.active",		ADM_UINT,	"0",	NULL,	"0",	"1"	},
-	{"feature.alternate_mp3_tag",		ADM_UINT,	"1",	NULL,	"0",	"1"	},
-	{"feature.vdpau",		ADM_UINT,	"0",	NULL,	"0",	"1"	},
-	{"feature.global_glyph.active",		ADM_UINT,	"1",	NULL,	"0",	"1"	},
-	{"feature.global_glyph.name",		ADM_STRING,"",	NULL, NULL, NULL },
-	{"priority.encoding",		ADM_UINT,	"3",	NULL,	"0",	"4"	},
-	{"priority.indexing",		ADM_UINT,	"3",	NULL,	"0",	"4"	},
-	{"priority.playback",		ADM_UINT,	"0",	NULL,	"0",	"4"	}
-};
+typedef struct
+{
+   const char *name;
+   const char *name2;
+   ADM_paramType  type;
+   const char *defaultValue;
+   const char *min;
+   const char *max;
+   char *Value;
+}optionDesc;
 
-int num_opts = 83;
-// </prefs_gen>
+#include "prefs2_pref.h"
 
+/**
+    \fn initPrefs
+*/
+int initPrefs(  void )
+{
+  prefs = new preferences();
+  return 1;
+}
+/**
+    \fn destroyPrefs
+*/
+int destroyPrefs(void)
+{
+	delete prefs;
+	prefs = NULL;
+	return 1;
+}
 
-/*
-** we cannot put this into the header file, cause libxml headers
-** are not reachable in all directories/Makefiles
-** way 1: make xml headers reachable
-** way 2: write my own (extended) class definition here
-** way 3: use an external static variable only here
-**
-** i've choosed way 3 ;-)
+static int searchOptionByName2(const char *name)
+{
+    int nb=sizeof( myOptions)/sizeof(optionDesc);
+    for(int i=0;i<nb;i++)
+        if(!strcmp(myOptions[i].name2,name)) return i;
+    return -1;
+}
+/**
+    \fn ctor
 */
-static xmlDocPtr xdoc;
-#if 0
-int xmlSaveNoEmptyTags  = 1;      /* save empty tags as <empty></empty> */
-int xmlIndentTreeOutput = 1;      /* try to indent the tree dumps */
-#endif
+preferences::preferences()
+{
+	internal_lastfiles[0] = internal_lastfiles[1] = NULL;
+	internal_lastfiles[2] = internal_lastfiles[3] = NULL;
+	internal_lastfiles[4] = NULL;
+    // set default...
+    int nb=sizeof( my_prefs_struct_param)/sizeof(ADM_paramList);
+    for(int i=0;i<nb-1;i++) //
+    {
+            char *dummyPointer=(char *)&myPrefs;
 
+            const ADM_paramList *param=my_prefs_struct_param+i;
+            int offset=param->offset;
+            const char *name=param->paramName;
 
+            int rank=searchOptionByName2(name);
+            ADM_assert(rank!=-1);
+            const optionDesc *opt=myOptions+rank;
+            ADM_assert(myOptions[rank].type==param->type);
+            
+            switch(param->type)
+            {
+                case ADM_param_uint32_t:
+                                    *(uint32_t *)(dummyPointer+offset)=atoi(opt->defaultValue);
+                                    break;
+                case ADM_param_int32_t:
+                                    *(int32_t *)(dummyPointer+offset)=atoi(opt->defaultValue);
+                                    break;
+                case ADM_param_float:
+                                    *(float *)(dummyPointer+offset)=atof(opt->defaultValue);
+                                    break;
+                case ADM_param_bool:
+                                    *(bool *)(dummyPointer+offset)=atoi(opt->defaultValue);
+                                    break;
+                case ADM_param_string:
+                                    {
+                                        char **z=(char **)(dummyPointer+offset);
+                                        *z=ADM_strdup(opt->defaultValue);
+                                    }
+                                    break;
+                default:
+                        ADM_error("Type not authorized for prefs %s\n",name);
+                        ADM_assert(0);
 
-void erase_blank_nodes(xmlNodePtr cur){
-  /* erase all blank-nodes recursive; they deny IndentTreeOutput !!! */
-  xmlNodePtr run = cur;
-  xmlNodePtr erase;
-   while( run ){
-      if( xmlIsBlankNode(run) ){
-         erase = run;
-         run = run->next;
-         xmlUnlinkNode(erase);
-         xmlFreeNode(erase);
-         continue;
-      }
-      if( run->children )
-         erase_blank_nodes(run->children); /* Blank nodes has no childs ;-) */
-      run = run->next;
-   }
+            }
+            // 
+    
+    }
 }
 
-xmlNodePtr goto_node(xmlNodePtr cur, const char *str){
-  xmlNodePtr ret;
-   ADM_assert(cur);
-   ret = cur->children;
-   while( ret ){
-      if( !strcmp((char *)ret->name,str) )
-         return ret;
-      ret = ret->next;
-   }
-   return ret;
-}
-
-xmlNodePtr goto_node_with_create(xmlNodePtr cur, const char *str){
-  xmlNodePtr nn = goto_node(cur, str);
-	if( ! nn ){
-		if( !(nn=xmlNewChild(cur,NULL,(xmlChar *)str,NULL)) ){
-			fprintf(stderr,"xmlNewChild() failed\n");
-			return NULL;
-		}
+preferences::~preferences(){
+  unsigned int idx;
+	for( idx=0; idx < 4; idx++ ){
+		if( internal_lastfiles[idx] )
+			ADM_dealloc(internal_lastfiles[idx]);
 	}
-	return nn;
-}
-
-void set_content(const char *option, xmlNodePtr x){
-   int idx = -1;
-   char *str,*str2;
-	for( int i=0; i < num_opts; i++ ){
-		if( !strcmp(opt_defs[i].name,option) ){
-			idx = i;
-			break;
-		}
-	}
-	if( idx == -1 ){
-		fprintf(stderr,"option \"%s\" not defined.\n",option);
-		return;
-	}
-	if( !(str = (char*)xmlNodeGetContent(x)) ){
-		fprintf(stderr,"no content in xmlNode for option \"%s\".\n",option);
-		return;
-	}
 	
-	str2=(char *)ADM_alloc(strlen(str)+1);
-	strcpy(str2,str);
-	free(str);
 	
-	if( opt_defs[idx].current_val )
-		ADM_dealloc(opt_defs[idx].current_val);
-	opt_defs[idx].current_val = str2;
-	#ifdef DEBUG_PREFS
-	fprintf(stderr,"Prefs: %s => %s\n",opt_defs[idx].name,opt_defs[idx].current_val);
-	#endif
 }
 
 
-#include "prefs.h"
 
-#define FILE_SIZE_MAX (20*1024)
 /**
     \fn load
-    \brief load prefs from file..
+    \brief load prefs from file.. Should be called only once
 */
-int preferences::load(){
-   xmlNodePtr p;
+int preferences::load()
+{
+
    char *home;
    char *dir_adm;
    std::string path;
-   
-   char buf[1024];
-   char fileInMemory[FILE_SIZE_MAX];
-   DIR   *dir;
 
-    
 
     dir_adm=ADM_getBaseDir();
     if(!dir_adm) return RC_FAILED;
@@ -272,726 +171,137 @@
     // exist ?
     if(!ADM_fileExist(path.c_str()))
     {
-		fprintf(stderr,"can't read(%s): %d (%s)\n",
-				path.c_str(), errno, strerror(errno) );
+		ADM_error("can't read %s\n",			path.c_str());
 		return RC_FAILED;
     }
-    FILE *o=ADM_fopen(path.c_str(),"r");
-    if(!o)
+    if(true==my_prefs_struct_jdeserialize(path.c_str(),my_prefs_struct_param,&myPrefs))
     {
-        ADM_error("Cannot open pref file\n");
-        return RC_FAILED;
+        ADM_info("Preferences found and loaded\n");
+        return RC_OK;
     }
-    int sz=fread(fileInMemory,1,FILE_SIZE_MAX,o);
-    // Read into memory...
-    fclose(o);
-    //ADM_info("prefs is %d bytes long\n",sz);
-    // Parse...
-    xdoc=xmlParseMemory(fileInMemory,sz);
-    if(!xdoc)
-    {
-		fprintf(stderr,"can't parse "CONFIG".\n");
-		return RC_FAILED;
-	}
-	erase_blank_nodes(xdoc->children);
-	p = xdoc->children; // ->avidemux
-	buf[0] = '\0';
-	if( p )
-		p = p->children; // ->avidemux->???
-	while( p ){
-		if( strlen(buf) ){
-			strncpy(&buf[strlen(buf)],".",1024-strlen(buf));
-			buf[1023] = '\0';
-		}
-		strncpy(&buf[strlen(buf)],(char*)p->name,1024-strlen(buf));
-		buf[1023] = '\0';
-		if( p->content ){
-			set_content(buf, p);
-		}else if( p->children ){
-		   xmlNodePtr c = p->children;
-			if( c->type == XML_TEXT_NODE && ! c->children && ! c->next && ! c->prev ){
-				set_content(buf, c);
-				// the routine below will go to c->parent->next (p->next) if we do:
-				p = c;
-				strncpy(&buf[strlen(buf)],".DUMMY",1024-strlen(buf));
-				buf[1023] = '\0';
-			}
-		}
-		if( p->children ){                               // go down first
-			p = p->children;
-		}else if( p->next ){                             // than go next
-		   char *t = rindex(buf,'.');
-			if( t )
-				*t = '\0';
-			else
-				buf[0] = '\0';
-			p = p->next;
-		}else{                                           // and last go up AND next
-			do{
-				if( p->parent == xdoc->children ){
-					p = NULL;
-				}else{
-				   char *t = rindex(buf,'.');
-					if( t )
-						*t = '\0';
-					else
-						buf[0] = '\0';
-					p = p->parent;
-				}
-			}while( p && ! p->next );
-			if( p ){
-			   char *t = rindex(buf,'.');
-				if( t )
-					*t = '\0';
-				else
-					buf[0] = '\0';
-				p = p->next;
-			}
-		}
-	}
-	// load xml to preferences
-	//    check ranges foreach val
-	//       set to min if  <min or to max if >max - generate warning
-	//    warn about unused options
-	ADM_info("Preferences found and loaded\n");
-	return RC_OK;
+    ADM_warning("An error happened while loading config\n");
+    return RC_FAILED;
 }
 
 /**
     \fn save
 */
-int preferences::save(){
-   xmlNodePtr n;
-   char buf[1024];
-   char *p;
-   char *q;
-	if( xdoc )
-		xmlFreeDoc(xdoc);
-	if( ! (xdoc = xmlNewDoc((const xmlChar *)"1.0")) )
-		return RC_FAILED;
-	if( ! (xdoc->children = xmlNewNode(NULL,(xmlChar *)"avidemux")) ){
-		xmlFreeDoc(xdoc); xdoc = NULL;
-		return RC_FAILED;
-	}
-	for( int i=0; i < num_opts; i++ ){
-	   xmlNodePtr nn;
-	   const char *val = opt_defs[i].current_val;
-		if( ! opt_defs[i].current_val )
-			val = opt_defs[i].default_val;
-		//	continue; // no value set - yet
-		// if( ! strcmp(opt_defs[i].default_val,opt_defs[i].current_val) )
-		//	continue; // current_val == default_val
-		strncpy(buf,opt_defs[i].name,1024);
-		buf[1023] = '\0';
-		p = buf;
-		n = xdoc->children;
-		while( (q=index(p,'.')) ){
-			*q = '\0'; q++;
-			nn = goto_node_with_create(n, p);
-			if( !nn )
-				return RC_FAILED;
-			p = q;
-			n = nn;
-		}
-		nn = goto_node_with_create(n, p);
-		if( !nn )
-			return RC_FAILED;
-		xmlNodeSetContent( nn, (xmlChar*)val );
-	}
-	return save_xml_to_file();
-}
-/**
-    \fn save_xml_to_file
-
-*/
-int preferences::save_xml_to_file()
+int preferences::save()
 {
+   char *home;
    char *dir_adm;
-   std::string path,path_new;
+   std::string path;
 
+
     dir_adm=ADM_getBaseDir();
     if(!dir_adm) return RC_FAILED;
 
-    path=std::string(dir_adm);
+    path=string(dir_adm);
     path=path+std::string("/");
     path=path+std::string(CONFIG);
+    string tmp=path;
+    tmp=tmp+string(".tmp");
+    ADM_error("Saving prefs to %s\n",tmp.c_str());
 
-
-#if 0 // Why ? defined(__MINGW32__)
-	xmlSetDocCompressMode(xdoc,9);
-	if( xmlSaveFormatFile(path.c_str(),xdoc,1) == -1 ){
-           fprintf(stderr,"\ncan't save xml tree to file. Filesystem full?\n\n");
-           delete [] rcfile;
-	   return RC_FAILED;
-	}
-        delete [] rcfile;
-	return RC_OK;
-
-#else
-	
-    path_new=path+std::string(".new");
-    ADM_eraseFile(path_new.c_str());
-    xmlSetDocCompressMode(xdoc,9);
-	if( qxmlSaveFormatFile(path_new.c_str(),xdoc,1) == -1 )
+   if(true==my_prefs_struct_jserialize(tmp.c_str(),&myPrefs))
     {
-	   return RC_FAILED;
-	}
-    ADM_eraseFile(path.c_str());
-    if(false==ADM_copyFile(path_new.c_str(),path.c_str()))
-    {
-        ADM_error("Cannot copy %s to %s\n",path_new.c_str(),path.c_str());
+        ADM_copyFile(tmp.c_str(),path.c_str());
+        ADM_eraseFile(tmp.c_str());
+        return RC_OK;
     }
-    ADM_eraseFile(path_new.c_str());
-	return RC_OK;
-#endif
+    ADM_error("Cannot save prefs\n");
+    return RC_FAILED;
 }
-/**
-    \fn ctor
-*/
-preferences::preferences(){
-	internal_lastfiles[0] = internal_lastfiles[1] = NULL;
-	internal_lastfiles[2] = internal_lastfiles[3] = NULL;
-	internal_lastfiles[4] = NULL;
-	
-	xdoc = NULL;
-	
-}
 
-preferences::~preferences(){
-  unsigned int idx;
-	for( idx=0; idx < 4; idx++ ){
-		if( internal_lastfiles[idx] )
-			ADM_dealloc(internal_lastfiles[idx]);
-	}
-	
-	if( xdoc )
-		xmlFreeDoc(xdoc);
-	
+//--------
+int preferences::get(options option, uint8_t *val)
+{
+	return RC_FAILED;
 }
 
 
-/*
-int preferences::get(options option, uint8_t *val){
-   unsigned int x;
-	if( get(option,&x) == RC_OK ){
-		if( x <= 255 ){
-			*val = (uint8_t)x;
-			return RC_OK;
-		}
-	}
+int preferences::get(options option, uint16_t *val)
+{
 	return RC_FAILED;
 }
-*/
-int preferences::get(options option, uint16_t *val){
-   unsigned int x;
-	if( get(option,&x) == RC_OK ){
-		if( x <= 65535 ){
-			*val = (uint16_t)x;
-			return RC_OK;
-		}
-	}
-	return RC_FAILED;
-}
 
-int preferences::get(options option, unsigned int *val){
-   const char *p = opt_defs[option].current_val;
-	if( !p )
-		p = opt_defs[option].default_val;
-	if( opt_defs[option].type != ADM_UINT ){
-		fprintf(stderr,"preferences::get(%s,uint) called for type %d\n",
-			opt_defs[option].name,opt_defs[option].type);
-		ADM_assert(0);
-	}
-	if( sscanf(p,"%u",val) == 1 )
-		return RC_OK;
+int preferences::get(options option, unsigned int *val)
+{
 	return RC_FAILED; // wrong input for conversion or EOF
 }
 
-int preferences::get(options option,          int *val){
-   const char *p = opt_defs[option].current_val;
-	if( !p )
-		p = opt_defs[option].default_val;
-	if( opt_defs[option].type != ADM_INT ){
-		fprintf(stderr,"preferences::get(%s,int) called for type %d\n",
-			opt_defs[option].name,opt_defs[option].type);
-		ADM_assert(0);
-	}
-	if( sscanf(p,"%d",val) == 1 )
-		return RC_OK;
+int preferences::get(options option,          int *val)
+{
+
 	return RC_FAILED; // wrong input for conversion or EOF
 }
 
-int preferences::get(options option, unsigned long *val){
-   const char *p = opt_defs[option].current_val;
-	if( !p )
-		p = opt_defs[option].default_val;
-	if( opt_defs[option].type != ADM_ULONG ){
-		fprintf(stderr,"preferences::get(%s,ulong) called for type %d\n",
-			opt_defs[option].name,opt_defs[option].type);
-		ADM_assert(0);
-	}
-	if( sscanf(p,"%lu",val) == 1 )
-		return RC_OK;
+int preferences::get(options option, unsigned long *val)
+{
+
 	return RC_FAILED; // wrong input for conversion or EOF
 }
 
-int preferences::get(options option, long *val){
-   const char *p = opt_defs[option].current_val;
-	if( !p )
-		p = opt_defs[option].default_val;
-	if( opt_defs[option].type != ADM_LONG ){
-		fprintf(stderr,"preferences::get(%s,long) called for type %d\n",
-			opt_defs[option].name,opt_defs[option].type);
-		ADM_assert(0);
-	}
-	if( sscanf(p,"%ld",val) == 1 )
-		return RC_OK;
+int preferences::get(options option, long *val)
+{
 	return RC_FAILED; // wrong input for conversion or EOF
 }
 
-int preferences::get(options option, float *val){
-   const char *p = opt_defs[option].current_val;
-	if( !p )
-		p = opt_defs[option].default_val;
-	if( opt_defs[option].type != ADM_FLOAT ){
-		fprintf(stderr,"preferences::get(%s,float) called for type %d\n",
-			opt_defs[option].name,opt_defs[option].type);
-		ADM_assert(0);
-	}
-	if( sscanf(p,"%f",val) == 1 )
-		return RC_OK;
+int preferences::get(options option, float *val)
+{
 	return RC_FAILED; // wrong input for conversion or EOF
 }
 
-int preferences::get(options option, char **val){
-   const char *p = opt_defs[option].current_val;
-	if( !p )
-		p = opt_defs[option].default_val;
-	// no type check : every value can be represented by a string
-	// not an error -> it's a magic feature
-	if( (*val = ADM_strdup(p) ) )
-		return RC_OK;
+int preferences::get(options option, char **val)
+{
 	return RC_FAILED; // strdup() out of memory
 }
-#warning incorrect!
-int preferences::get(options option, ADM_filename **val){
-   const char *p = opt_defs[option].current_val;
-	if( !p )
-		p = opt_defs[option].default_val;
-	// no type check : every value can be represented by a string
-	// not an error -> it's a magic feature
-	if( (*val = (ADM_filename *)ADM_strdup(p) ) )
-		return RC_OK;
-	return RC_FAILED; // strdup() out of memory
-}
-int preferences::set(options option, const unsigned int val){
-   unsigned int l,r;
-   char buf[1024];
-   unsigned int v = val;
-	// check type of option
-	if( opt_defs[option].type != ADM_UINT ){
-		fprintf(stderr,"preferences::set(%s,uint) called for type %d\n",
-			opt_defs[option].name,opt_defs[option].type);
-		ADM_assert(0);
-	}
-	// check range
-	if( sscanf(opt_defs[option].minimum,"%u",&l) != 1){
-		fprintf(stderr,"error reading opt_defs[option].minimum\n");
-		return RC_FAILED;
-	}
-	if( sscanf(opt_defs[option].maximum,"%u",&r) != 1){
-		fprintf(stderr,"error reading opt_defs[option].maximum\n");
-		return RC_FAILED;
-	}
-	if( v < l ){
-		fprintf(stderr,"%s : value < min : %u < %u\n", opt_defs[option].name, v, l);
-		v = l;
-		fprintf(stderr,"   using %u as value instead.\n", v);
-	}
-	if( v > r ){
-		fprintf(stderr,"%s : value > max : %u > %u\n", opt_defs[option].name, v, r);
-		v = r;
-		fprintf(stderr,"   using %u as value instead.\n", v);
-	}
-	// set value
-	if( opt_defs[option].current_val )
-		ADM_dealloc(opt_defs[option].current_val);
-	snprintf(buf,1024,"%u",v);
-	buf[1023] = '\0';
-	opt_defs[option].current_val = ADM_strdup(buf);
-	if( ! opt_defs[option].current_val )
-		return RC_FAILED;
+
+int preferences::set(options option, const unsigned int val)
+{
 	return RC_OK;
 }
 
-int preferences::set(options option, const int val){
-   int l,r;
-   char buf[1024];
-   int v = val;
-	// check type of option
-	if( opt_defs[option].type != ADM_INT ){
-		fprintf(stderr,"preferences::set(%s,int) called for type %d\n",
-			opt_defs[option].name,opt_defs[option].type);
-	}
-	// check range
-	if( sscanf(opt_defs[option].minimum,"%d",&l) != 1){
-		fprintf(stderr,"error reading opt_defs[option].minimum\n");
-		return RC_FAILED;
-	}
-	if( sscanf(opt_defs[option].maximum,"%d",&r) != 1){
-		fprintf(stderr,"error reading opt_defs[option].maximum\n");
-		return RC_FAILED;
-	}
-	if( v < l ){
-		fprintf(stderr,"%s : value < min : %d < %d\n", opt_defs[option].name, v, l);
-		v = l;
-		fprintf(stderr,"   using %d as value instead.\n", v);
-	}
-	if( v > r ){
-		fprintf(stderr,"%s : value > max : %d > %d\n", opt_defs[option].name, v, r);
-		v = r;
-		fprintf(stderr,"   using %d as value instead.\n", v);
-	}
-	// set value
-	if( opt_defs[option].current_val )
-		ADM_dealloc(opt_defs[option].current_val);
-	snprintf(buf,1024,"%d",v);
-	buf[1023] = '\0';
-	opt_defs[option].current_val = ADM_strdup(buf);
-	if( ! opt_defs[option].current_val )
-		return RC_FAILED;
+int preferences::set(options option, const int val)
+{
 	return RC_OK;
 }
 
-int preferences::set(options option, const unsigned long val){
-   unsigned long l,r;
-   char buf[1024];
-   unsigned long v = val;
-	// check type of option
-	if( opt_defs[option].type != ADM_ULONG ){
-		fprintf(stderr,"preferences::set(%s,ulong) called for type %d\n",
-			opt_defs[option].name,opt_defs[option].type);
-		ADM_assert(0);
-	}
-	// check range
-	if( sscanf(opt_defs[option].minimum,"%lu",&l) != 1){
-		fprintf(stderr,"error reading opt_defs[option].minimum\n");
-		return RC_FAILED;
-	}
-	if( sscanf(opt_defs[option].maximum,"%lu",&r) != 1){
-		fprintf(stderr,"error reading opt_defs[option].maximum\n");
-		return RC_FAILED;
-	}
-	if( v < l ){
-		fprintf(stderr,"%s : value < min : %lu < %lu\n", opt_defs[option].name, v, l);
-		v = l;
-		fprintf(stderr,"   using %lu as value instead.\n", v);
-	}
-	if( v > r ){
-		fprintf(stderr,"%s : value > max : %lu > %lu\n", opt_defs[option].name, v, r);
-		v = r;
-		fprintf(stderr,"   using %lu as value instead.\n", v);
-	}
-	// set value
-	if( opt_defs[option].current_val )
-		ADM_dealloc(opt_defs[option].current_val);
-	snprintf(buf,1024,"%lu",v);
-	buf[1023] = '\0';
-	opt_defs[option].current_val = ADM_strdup(buf);
-	if( ! opt_defs[option].current_val )
-		return RC_FAILED;
+int preferences::set(options option, const unsigned long val)
+{
 	return RC_OK;
 }
 
-int preferences::set(options option, const long val){
-   long l,r;
-   char buf[1024];
-   long v = val;
-	// check type of option
-	if( opt_defs[option].type != ADM_LONG ){
-		fprintf(stderr,"preferences::set(%s,long) called for type %d\n",
-			opt_defs[option].name,opt_defs[option].type);
-		ADM_assert(0);
-	}
-	// check range
-	if( sscanf(opt_defs[option].minimum,"%ld",&l) != 1){
-		fprintf(stderr,"error reading opt_defs[option].minimum\n");
-		return RC_FAILED;
-	}
-	if( sscanf(opt_defs[option].maximum,"%ld",&r) != 1){
-		fprintf(stderr,"error reading opt_defs[option].maximum\n");
-		return RC_FAILED;
-	}
-	if( v < l ){
-		fprintf(stderr,"%s : value < min : %ld < %ld\n", opt_defs[option].name, v, l);
-		v = l;
-		fprintf(stderr,"   using %ld as value instead.\n", v);
-	}
-	if( v > r ){
-		fprintf(stderr,"%s : value > max : %ld > %ld\n", opt_defs[option].name, v, r);
-		v = r;
-		fprintf(stderr,"   using %ld as value instead.\n", v);
-	}
-	// set value
-	if( opt_defs[option].current_val )
-		ADM_dealloc(opt_defs[option].current_val);
-	snprintf(buf,1024,"%ld",v);
-	buf[1023] = '\0';
-	opt_defs[option].current_val = ADM_strdup(buf);
-	if( ! opt_defs[option].current_val )
-		return RC_FAILED;
+int preferences::set(options option, const long val)
+{
 	return RC_OK;
 }
 
-int preferences::set(options option, const float val){
-   float l,r;
-   char buf[1024];
-   float v = val;
-	// check type of option
-	if( opt_defs[option].type != ADM_FLOAT ){
-		fprintf(stderr,"preferences::set(%s,float) called for type %d\n",
-			opt_defs[option].name,opt_defs[option].type);
-		ADM_assert(0);
-	}
-	// check range
-	if( sscanf(opt_defs[option].minimum,"%f",&l) != 1){
-		fprintf(stderr,"error reading opt_defs[option].minimum\n");
-		return RC_FAILED;
-	}
-	if( sscanf(opt_defs[option].maximum,"%f",&r) != 1){
-		fprintf(stderr,"error reading opt_defs[option].maximum\n");
-		return RC_FAILED;
-	}
-	if( v < l ){
-		fprintf(stderr,"%s : value < min : %f < %f\n", opt_defs[option].name, v, l);
-		v = l;
-		fprintf(stderr,"   using %f as value instead.\n", v);
-	}
-	if( v > r ){
-		fprintf(stderr,"%s : value > max : %f > %f\n", opt_defs[option].name, v, r);
-		v = r;
-		fprintf(stderr,"   using %f as value instead.\n", v);
-	}
-	// set value
-	if( opt_defs[option].current_val )
-		ADM_dealloc(opt_defs[option].current_val);
-	snprintf(buf,1024,"%f",v);
-	buf[1023] = '\0';
-	opt_defs[option].current_val = ADM_strdup(buf);
-	if( ! opt_defs[option].current_val )
-		return RC_FAILED;
+int preferences::set(options option, const float val)
+{
 	return RC_OK;
 }
 
-int preferences::set(options option, const char * val){
-	// check type of option
-	if( opt_defs[option].type != ADM_STRING ){
-		fprintf(stderr,"preferences::set(%s,string) called for type %d\n",
-			opt_defs[option].name,opt_defs[option].type);
-		ADM_assert(0);
-	}
-	// check val
-	if( ! val )
-		return RC_FAILED;
-	// set value
-	if( opt_defs[option].current_val )
-		ADM_dealloc(opt_defs[option].current_val);
-	opt_defs[option].current_val = ADM_strdup(val);
-	if( ! opt_defs[option].current_val )
-		return RC_FAILED;
+int preferences::set(options option, const char * val)
+{
 	return RC_OK;
 }
-#warning incorrect!
-int preferences::set(options option, const ADM_filename * val){
-	// check type of option
-	if( opt_defs[option].type != ADM_FILENAME ){
-		fprintf(stderr,"preferences::set(%s,string) called for type %d\n",
-			opt_defs[option].name,opt_defs[option].type);
-		ADM_assert(0);
-	}
-	// check val
-	if( ! val )
-		return RC_FAILED;
-	// set value
-	if( opt_defs[option].current_val )
-		ADM_dealloc(opt_defs[option].current_val);
-	opt_defs[option].current_val = ADM_strdup((char *)val);
-	if( ! opt_defs[option].current_val )
-		return RC_FAILED;
-	return RC_OK;
-}
 
-const char * preferences::get_str_min(options option){
-	return( opt_defs[option].minimum );
-}
-
-const char * preferences::get_str_max(options option){
-	return( opt_defs[option].maximum );
-}
-
 #define PRT_LAFI(x,y,z) fprintf(stderr,"Prefs: %s%u %s\n",x,y,(z?z:"NULL"))
 
-int preferences::set_lastfile(const char* file){
-   char *internal_file;
-	if( ! file ){
-		fprintf(stderr,"Prefs: set_lastfile(NULL) called\n");
-		return RC_FAILED;
-	}
-	internal_file = ADM_PathCanonize(file);
-	if( !internal_file ){
-		fprintf(stderr,"Prefs: set_lastfile(): PathCanonize() returns NULL\n");
-		return RC_FAILED;
-        }
-#ifdef DEBUG_PREFS
-	fprintf(stderr,"Prefs: set_lastfile(%s)\n",file);
-	if( strcmp(file,internal_file) )
-		fprintf(stderr,"Prefs: set_lastfile(%s) (with appended current dir)\n",internal_file);
-	PRT_LAFI("<= LASTFILES_",1,opt_defs[LASTFILES_FILE1].current_val);
-	PRT_LAFI("<= LASTFILES_",2,opt_defs[LASTFILES_FILE2].current_val);
-	PRT_LAFI("<= LASTFILES_",3,opt_defs[LASTFILES_FILE3].current_val);
-	PRT_LAFI("<= LASTFILES_",4,opt_defs[LASTFILES_FILE4].current_val);
-#endif
-	// change opt_defs array
-	//
-	// ToDo:
-	// * a call with a file already in lastfiles will resort lastfiles with
-	//   the actual argument on top
-	// * a call with a file new to lastfiles will drop LASTFILE_4, move all
-	//   one step down and add the file as LASTFILE_1
-	if( opt_defs[LASTFILES_FILE4].current_val &&
-	    !strncmp(opt_defs[LASTFILES_FILE4].current_val,internal_file,strlen(opt_defs[LASTFILES_FILE4].current_val)) ){
-	  char *x = opt_defs[LASTFILES_FILE4].current_val;
-		opt_defs[LASTFILES_FILE4].current_val = opt_defs[LASTFILES_FILE3].current_val;
-		opt_defs[LASTFILES_FILE3].current_val = opt_defs[LASTFILES_FILE2].current_val;
-		opt_defs[LASTFILES_FILE2].current_val = opt_defs[LASTFILES_FILE1].current_val;
-		opt_defs[LASTFILES_FILE1].current_val = x;
-	}else if( opt_defs[LASTFILES_FILE3].current_val &&
-            !strncmp(opt_defs[LASTFILES_FILE3].current_val,internal_file,strlen(opt_defs[LASTFILES_FILE3].current_val)) ){
-          char *x = opt_defs[LASTFILES_FILE3].current_val;
-		opt_defs[LASTFILES_FILE3].current_val = opt_defs[LASTFILES_FILE2].current_val;
-                opt_defs[LASTFILES_FILE2].current_val = opt_defs[LASTFILES_FILE1].current_val;
-                opt_defs[LASTFILES_FILE1].current_val = x;
-        }else if( opt_defs[LASTFILES_FILE2].current_val &&
-            !strncmp(opt_defs[LASTFILES_FILE2].current_val,internal_file,strlen(opt_defs[LASTFILES_FILE2].current_val)) ){
-          char *x = opt_defs[LASTFILES_FILE2].current_val;
-		opt_defs[LASTFILES_FILE2].current_val = opt_defs[LASTFILES_FILE1].current_val;
-		opt_defs[LASTFILES_FILE1].current_val = x;
-	}else if( opt_defs[LASTFILES_FILE1].current_val &&
-            !strncmp(opt_defs[LASTFILES_FILE1].current_val,internal_file,strlen(opt_defs[LASTFILES_FILE1].current_val)) ){
-		; // nothing to do - always on top
-	}else{
-		if( opt_defs[LASTFILES_FILE4].current_val )
-			ADM_dealloc(opt_defs[LASTFILES_FILE4].current_val);
-		opt_defs[LASTFILES_FILE4].current_val = opt_defs[LASTFILES_FILE3].current_val;
-		opt_defs[LASTFILES_FILE3].current_val = opt_defs[LASTFILES_FILE2].current_val;
-		opt_defs[LASTFILES_FILE2].current_val = opt_defs[LASTFILES_FILE1].current_val;
-		opt_defs[LASTFILES_FILE1].current_val = ADM_strdup(internal_file);
-	}
+int preferences::set_lastfile(const char* file)
+{
 
-
-	// change the xmlDocument
-	if( ! xdoc ){
-		// no .avidemuxrc file or not loaded yet
-		load();          // try to load it
-		if( ! xdoc ){    // really: no .avidemuxrc file
-			save();  // generate one from internal defaults and actual changes
-			if( xdoc )
-				erase_blank_nodes(xdoc->children);
-		}
-	}
-	if( ! xdoc ){
-		fprintf(stderr,"Prefs: no xml document generated ny load() nor save()\n");
-	}else{
-	  xmlNodePtr p;
-	  xmlNodePtr q;
-		// we assume a valid xml document, but maybe an older version
-		ADM_assert( xdoc->children );
-		p = xdoc->children;				// ->avidemux (should be there)
-		p = goto_node_with_create(p, "lastfiles");	// ->avidemux->lastfile
-		q = goto_node_with_create(p, "file1");		// ->avidemux->lastfile->1
-		xmlNodeSetContent( q,
-			(xmlChar*)(opt_defs[LASTFILES_FILE1].current_val?opt_defs[LASTFILES_FILE1].current_val:""));
-		q = goto_node_with_create(p, "file2");		// ->avidemux->lastfile->2
-		xmlNodeSetContent( q,
-			(xmlChar*)(opt_defs[LASTFILES_FILE2].current_val?opt_defs[LASTFILES_FILE2].current_val:""));
-		q = goto_node_with_create(p, "file3");		// ->avidemux->lastfile->3
-		xmlNodeSetContent( q,
-			(xmlChar*)(opt_defs[LASTFILES_FILE3].current_val?opt_defs[LASTFILES_FILE3].current_val:""));
-		q = goto_node_with_create(p, "file4");		// ->avidemux->lastfile->4
-		xmlNodeSetContent( q,
-			(xmlChar*)(opt_defs[LASTFILES_FILE4].current_val?opt_defs[LASTFILES_FILE4].current_val:""));
-		save_xml_to_file();
-	}
-
-
-#ifdef DEBUG_PREFS
-	PRT_LAFI("=> LASTFILES_",1,opt_defs[LASTFILES_FILE1].current_val);
-	PRT_LAFI("=> LASTFILES_",2,opt_defs[LASTFILES_FILE2].current_val);
-	PRT_LAFI("=> LASTFILES_",3,opt_defs[LASTFILES_FILE3].current_val);
-	PRT_LAFI("=> LASTFILES_",4,opt_defs[LASTFILES_FILE4].current_val);
-#endif
-	delete[] internal_file;
 	return RC_OK;
 }
 
 #undef PRT_LAFI
 #define PRT_LAFI(y,z) fprintf(stderr,"Prefs: ret idx[%u] %s\n",y,(z?z:"NULL"))
 
-const char **preferences::get_lastfiles(void){
-  unsigned int idx;
-#ifdef DEBUG_PREFS
-	fprintf(stderr,"Prefs: get_lastfile()\n");
-#endif
-	for( idx=0; idx < 4; idx++ ){
-		if( internal_lastfiles[idx] ){
-			ADM_dealloc(internal_lastfiles[idx]);
-			internal_lastfiles[idx] = NULL;
-		}
-	}
-	if( opt_defs[LASTFILES_FILE1].current_val )
-		internal_lastfiles[0] = ADM_strdup(opt_defs[LASTFILES_FILE1].current_val);
-	if( opt_defs[LASTFILES_FILE2].current_val )
-		internal_lastfiles[1] = ADM_strdup(opt_defs[LASTFILES_FILE2].current_val);
-	if( opt_defs[LASTFILES_FILE3].current_val )
-		internal_lastfiles[2] = ADM_strdup(opt_defs[LASTFILES_FILE3].current_val);
-	if( opt_defs[LASTFILES_FILE4].current_val )
-		internal_lastfiles[3] = ADM_strdup(opt_defs[LASTFILES_FILE4].current_val);
-	internal_lastfiles[4] = NULL;
+const char **preferences::get_lastfiles(void)
+{
 
-#ifdef DEBUG_PREFS
-	PRT_LAFI(0,internal_lastfiles[0]);
-	PRT_LAFI(1,internal_lastfiles[1]);
-	PRT_LAFI(2,internal_lastfiles[2]);
-	PRT_LAFI(3,internal_lastfiles[3]);
-	PRT_LAFI(4,internal_lastfiles[4]);
-#endif
 	return (const char**)internal_lastfiles;
 }
-/**
-    \fn initPrefs
-*/
-int initPrefs(  void )
-{
-  prefs = new preferences();
-  return 1;
-}
-/**
-    \fn destroyPrefs
-*/
-int destroyPrefs(void)
-{
-	for (int i = 0; i < num_opts; i++)
-	{
-		if (opt_defs[i].current_val)
-		{
-			ADM_dealloc(opt_defs[i].current_val);
-			opt_defs[i].current_val=NULL;
-		}
-	}
 
-	delete prefs;
-	prefs = NULL;
-	return 1;
-}
-
 // EOF



From mean at mail.berlios.de  Sat Apr 30 21:19:31 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Sat, 30 Apr 2011 21:19:31 +0200
Subject: [Avidemux-svn-commit] r7171 -
	branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src
Message-ID: <20110430191931.EB94348137F@sheep.berlios.de>

Author: mean
Date: 2011-04-30 21:19:31 +0200 (Sat, 30 Apr 2011)
New Revision: 7171

Added:
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/pref_gen.py
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/prefs2.conf
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/prefs2.h
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/prefs2_desc.cpp
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/prefs2_json.cpp
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/prefs2_pref.h
Log:
[pref] Switch from xml to json

Added: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/pref_gen.py
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/pref_gen.py	                        (rev 0)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/pref_gen.py	2011-04-30 19:19:31 UTC (rev 7171)
@@ -0,0 +1,190 @@
+#!/usr/bin/python
+# Take a .in file and generate :
+# pref.cpp which is a loader/saver file + associated structure
+# (c) Mean 2011
+#
+#  const char *name
+#  type
+#  char *current_val
+#  const char *default
+#  const char *min
+#  const char *max
+#
+import os
+import re
+import sys
+
+structName=r'prefs_list'
+allCTypes=dict()
+allATypes=dict()
+allJTypes=dict()
+
+
+allJTypes["uint32_t"]="json.addUint32("
+allJTypes["int32_t"]="json.addInt32("
+allJTypes["bool"]="json.addBool("
+allJTypes["string"]="json.addString("
+allJTypes["float"]="json.addFloat("
+allJTypes["filename"]="json.addString("
+
+
+allATypes["uint32_t"]="ADM_param_uint32_t"
+allATypes["int32_t"] ="ADM_param_int32_t "
+allATypes["float"]   ="ADM_param_float   "
+allATypes["bool"]    ="ADM_param_bool    "
+allATypes["string"]  ="ADM_param_string  "
+allATypes["filename"]="ADM_param_string  "
+
+fullPath=""
+nested=list()
+gotName=False
+def usage():
+    print("python pref_gen.py xxxx.in")
+#########################################################
+def outputJson(st):
+    jsonFile.write(str(st)+"\n")
+    #print(st)
+    pass
+def outputList(st):
+    listFile.write(str(st)+"\n")
+    #print(st)
+    pass
+
+#
+
+#
+def makeStructure(varType,params):
+    if(len(params)<2):
+        print "Not enough parameter for line "+str(varName)
+        exit(1)
+    min=0
+    max=100
+    default=20
+    #print varType
+    #print params
+    nbParam=len(params)
+    varName=params[0]
+    default=str(params[1])
+    default=re.sub(r'"',r'',default)
+    default="\""+str(default)+"\""
+    if(nbParam==2):
+        if(varType!="string" and varType!="filename"):
+            print ("Error "+str(varName)+" has not the good number of parameters,type="+str(varType))
+            raise
+        min=r"NULL"
+        max=r'NULL'
+    elif(nbParam==4):
+        min="\""+str(params[2])+str("\"")
+        max="\""+str(params[3])+str("\"")
+    if(not varType in allATypes):
+        print("json:Unknown var type <"+str(varType)+str(">"))
+        exit(1)
+    if(len(fullPath)==0):
+        fullName=varName
+    else:
+        fullName=fullPath+"_"+varName
+    if(len(fullPath2)==0):
+        fullName2=varName
+    else:
+        fullName2=fullPath2+"."+varName
+    out= "{ "+str(fullName.upper())+str(",\"")+str(fullName2)+str("\"")
+    if(len(out)<15):
+        out=out+"\t"
+    if(len(out)<23):
+        out=out+"\t"
+    out=out+",\t"+str(allATypes[varType])
+    out=out+"\t,"+str(default)+",\t"+str(min)+",\t"+str(max)
+    out=out+",\tNULL},"
+    outputJson(out)
+    outputList(fullName.upper())
+###################################################################################################################################
+
+def writeJsonHead():
+    outputJson("// automatically generated by pref_gen.py, do not edit!")
+    outputJson("#if 0")
+    outputJson("typedef struct")
+    outputJson("{")
+    outputJson("   const char *name;")
+    outputJson("   TYPE  type;")
+    outputJson("   const char *defaultValue;")
+    outputJson("   const char *min;")
+    outputJson("   const char *max;")
+    outputJson("   char *Value;")
+    outputJson("}optionDesc;")
+    outputJson("#endif ")
+    outputJson("static optionDesc myOptions[]={")
+def writeJsonFooter():
+    outputJson("};\n")
+
+###################################################################################################################################
+# Main...
+###################################################################################################################################
+nb=len(sys.argv)
+if(nb!=2):       
+    usage()
+    exit(1)
+print("Processing "+str(sys.argv[1]))
+inputFile=sys.argv[1]
+if(not os.path.isfile(inputFile)):
+    print "no such file "+str(inputFile)
+    exit(1)
+jsonFileName=re.sub(r'.conf',r'_pref.h',inputFile)
+listFileName=str("../include/"+re.sub(r'.conf',r'_list.h',intputFile)
+print("Generating "+jsonFileName)
+jsonFile=open(jsonFileName,'w')
+print("Generating "+listFileName)
+listFile=open(listFileName,'w')
+#
+f=open(inputFile,'r')
+while(1):
+    line=f.readline()
+    #print line
+    if(len(line)==0):
+        print "Reached end of file"
+        break # eof
+    line=re.sub(r'#.*$',r'',line).strip()
+    #print(">"+str(line)+":"+str(len(line)))
+    if(len(line)==0):
+        #print "skip"
+        continue # comment
+    # Remove #....
+    if(line.find(r'{')!=-1):
+        #
+        structs=re.sub(r'{.*$',r'',line).strip()
+        if(len(nested)==0 and gotName==False): # first one = struct Name
+            structName=structs
+            print("Our structure is :"+str(structName))
+            writeJsonHead()
+            gotName=True
+        else:  # else we have structure inside structure
+            #outputHeader("struct "+structs+" {")
+            nested.append(structs)
+            fullPath=".".join(nested)
+            fullPath2=".".join(nested)
+    elif(line.find(r'}')!=-1):
+        if(len(nested)!=0):
+            last=nested.pop()
+            #outputHeader("};")
+        fullPath=".".join(nested)
+        fullPath2=".".join(nested)
+    elif(line.find(':')!=-1): # varname : type,val,min,max
+        if(gotName==False):
+            print "No structure name !"
+            exit(1)
+        line=re.sub(r'#.*$',r'',line)
+        line=re.sub(r'//.*$',r'',line)
+        # split by :
+        (varType,leftOver)=line.split(r':')
+        params=leftOver.split(r',')
+        for i in range(0,len(params)):
+                params[i]=params[i].strip()
+                #print "\t"+params[i]+"\n"
+        makeStructure(varType,params)
+    else:
+        print "Invalid line "+str(line)
+        exit(1)
+f.close()
+writeJsonFooter()
+jsonFile.close()
+listFile.close()
+print "All done"


Property changes on: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/pref_gen.py
___________________________________________________________________
Added: svn:executable
   + *

Added: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/prefs2.conf
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/prefs2.conf	                        (rev 0)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/prefs2.conf	2011-04-30 19:19:31 UTC (rev 7171)
@@ -0,0 +1,64 @@
+#
+# this file will be used as input for pref.h and pref.cpp
+#
+
+# option_name :, name without '-'; the dot is the separator used for the xml tree
+#		 '.' will be changed to '_'
+#		 all letters will be changed to there upper case equivalents
+# type        :, ( uint32_t | INT | ULONG | LONG | FLOAT | string | BOOL)
+# value       :, default value; used if no xml value available
+# minimum     :, the smallest value this option can have (ignored for string)
+# maximum     :, the largest  value this option can have (ignored for string)
+
+# option name				type	value	minimum	maximum (incl.)
+# codec metasettings for mpeg2enc based
+my_prefs_struct{
+features{
+bool:swap_if_A_greater_than_B,	       1,      0,      1
+bool:saveprefsonexit,		       1,	    0,	    1
+bool:ignoresavedmarkers,	       0,	    0,	    1
+uint32_t:use_odml,                     0,      0,      1
+uint32_t:use_systray,                  0,      0,      1
+bool:reuse_2pass_log,                  0,      0,      1
+bool:audiobar_uses_master,             0,      0,      1
+uint32_t:threading_lavc,               0,      0,      32
+uint32_t:cpu_caps,  	              4294967295,      0,      4294967295
+uint32_t:mpeg_no_limit,                0,      0,      1
+bool:alternate_mp3_tag,                1,      0,      1
+bool:vdpau,                            0,      0,      1
+}
+#
+lastfiles{
+string:lastdir_read,				""
+string:lastdir_write,				""
+string:file1,			        	""
+string:file2,			        	""
+string:file3,			        	""
+string:file4,			        	""
+}
+#
+uint32_t:message_level,		        2,	0,	2
+#
+audio_device{
+string:audiodevice,			ALSA
+string:alsa_device,                     "dmix"
+}
+uint32_t:videodevice,			0,	0,	10
+#
+priority{
+uint32_t:encoding,                      3,      0,      4
+uint32_t:indexing,                      3,      0,      4
+uint32_t:playback,                      0,      0,      4
+}
+#
+Default{
+uint32_t:postproc_type,			3,	0,	7
+uint32_t:postproc_value,		3,	0,	5
+uint32_t:downmixing,		        2,	0,	2
+
+}
+#
+uint32_t:mpegsplit_autosplit, 		790,	400,	5000
+#
+}
+#

Added: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/prefs2.h
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/prefs2.h	                        (rev 0)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/prefs2.h	2011-04-30 19:19:31 UTC (rev 7171)
@@ -0,0 +1,45 @@
+// automatically generated by admSerialization.py do not edit
+#ifndef ADM_my_prefs_struct_CONF_H
+#define ADM_my_prefs_struct_CONF_H
+typedef struct {
+struct  {
+	bool swap_if_A_greater_than_B;
+	bool saveprefsonexit;
+	bool ignoresavedmarkers;
+	uint32_t use_odml;
+	uint32_t use_systray;
+	bool reuse_2pass_log;
+	bool audiobar_uses_master;
+	uint32_t threading_lavc;
+	uint32_t cpu_caps;
+	uint32_t mpeg_no_limit;
+	bool alternate_mp3_tag;
+	bool vdpau;
+}features;
+struct  {
+	char * lastdir_read;
+	char * lastdir_write;
+	char * file1;
+	char * file2;
+	char * file3;
+	char * file4;
+}lastfiles;
+uint32_t message_level;
+struct  {
+	char * audiodevice;
+	char * alsa_device;
+}audio_device;
+uint32_t videodevice;
+struct  {
+	uint32_t encoding;
+	uint32_t indexing;
+	uint32_t playback;
+}priority;
+struct  {
+	uint32_t postproc_type;
+	uint32_t postproc_value;
+	uint32_t downmixing;
+}Default;
+uint32_t mpegsplit_autosplit;
+}my_prefs_struct;
+#endif

Added: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/prefs2_desc.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/prefs2_desc.cpp	                        (rev 0)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/prefs2_desc.cpp	2011-04-30 19:19:31 UTC (rev 7171)
@@ -0,0 +1,33 @@
+// automatically generated by admSerialization.py, do not edit!
+extern const ADM_paramList my_prefs_struct_param[]={
+ {"features.swap_if_A_greater_than_B",offsetof(my_prefs_struct,features.swap_if_A_greater_than_B),"bool",ADM_param_bool},
+ {"features.saveprefsonexit",offsetof(my_prefs_struct,features.saveprefsonexit),"bool",ADM_param_bool},
+ {"features.ignoresavedmarkers",offsetof(my_prefs_struct,features.ignoresavedmarkers),"bool",ADM_param_bool},
+ {"features.use_odml",offsetof(my_prefs_struct,features.use_odml),"uint32_t",ADM_param_uint32_t},
+ {"features.use_systray",offsetof(my_prefs_struct,features.use_systray),"uint32_t",ADM_param_uint32_t},
+ {"features.reuse_2pass_log",offsetof(my_prefs_struct,features.reuse_2pass_log),"bool",ADM_param_bool},
+ {"features.audiobar_uses_master",offsetof(my_prefs_struct,features.audiobar_uses_master),"bool",ADM_param_bool},
+ {"features.threading_lavc",offsetof(my_prefs_struct,features.threading_lavc),"uint32_t",ADM_param_uint32_t},
+ {"features.cpu_caps",offsetof(my_prefs_struct,features.cpu_caps),"uint32_t",ADM_param_uint32_t},
+ {"features.mpeg_no_limit",offsetof(my_prefs_struct,features.mpeg_no_limit),"uint32_t",ADM_param_uint32_t},
+ {"features.alternate_mp3_tag",offsetof(my_prefs_struct,features.alternate_mp3_tag),"bool",ADM_param_bool},
+ {"features.vdpau",offsetof(my_prefs_struct,features.vdpau),"bool",ADM_param_bool},
+ {"lastfiles.lastdir_read",offsetof(my_prefs_struct,lastfiles.lastdir_read),"char *",ADM_param_string},
+ {"lastfiles.lastdir_write",offsetof(my_prefs_struct,lastfiles.lastdir_write),"char *",ADM_param_string},
+ {"lastfiles.file1",offsetof(my_prefs_struct,lastfiles.file1),"char *",ADM_param_string},
+ {"lastfiles.file2",offsetof(my_prefs_struct,lastfiles.file2),"char *",ADM_param_string},
+ {"lastfiles.file3",offsetof(my_prefs_struct,lastfiles.file3),"char *",ADM_param_string},
+ {"lastfiles.file4",offsetof(my_prefs_struct,lastfiles.file4),"char *",ADM_param_string},
+ {"message_level",offsetof(my_prefs_struct,message_level),"uint32_t",ADM_param_uint32_t},
+ {"audio_device.audiodevice",offsetof(my_prefs_struct,audio_device.audiodevice),"char *",ADM_param_string},
+ {"audio_device.alsa_device",offsetof(my_prefs_struct,audio_device.alsa_device),"char *",ADM_param_string},
+ {"videodevice",offsetof(my_prefs_struct,videodevice),"uint32_t",ADM_param_uint32_t},
+ {"priority.encoding",offsetof(my_prefs_struct,priority.encoding),"uint32_t",ADM_param_uint32_t},
+ {"priority.indexing",offsetof(my_prefs_struct,priority.indexing),"uint32_t",ADM_param_uint32_t},
+ {"priority.playback",offsetof(my_prefs_struct,priority.playback),"uint32_t",ADM_param_uint32_t},
+ {"Default.postproc_type",offsetof(my_prefs_struct,Default.postproc_type),"uint32_t",ADM_param_uint32_t},
+ {"Default.postproc_value",offsetof(my_prefs_struct,Default.postproc_value),"uint32_t",ADM_param_uint32_t},
+ {"Default.downmixing",offsetof(my_prefs_struct,Default.downmixing),"uint32_t",ADM_param_uint32_t},
+ {"mpegsplit_autosplit",offsetof(my_prefs_struct,mpegsplit_autosplit),"uint32_t",ADM_param_uint32_t},
+{NULL,0,NULL}
+};

Added: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/prefs2_json.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/prefs2_json.cpp	                        (rev 0)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/prefs2_json.cpp	2011-04-30 19:19:31 UTC (rev 7171)
@@ -0,0 +1,56 @@
+// automatically generated by admSerialization.py, do not edit!
+#include "ADM_default.h"
+#include "ADM_paramList.h"
+#include "ADM_coreJson/include/ADM_coreJson.h"
+#include "prefs2.h"
+bool  my_prefs_struct_jserialize(const char *file, const my_prefs_struct *key){
+admJson json;
+json.addNode("features");
+json.addBool("swap_if_A_greater_than_B",key->features.swap_if_A_greater_than_B);
+json.addBool("saveprefsonexit",key->features.saveprefsonexit);
+json.addBool("ignoresavedmarkers",key->features.ignoresavedmarkers);
+json.addUint32("use_odml",key->features.use_odml);
+json.addUint32("use_systray",key->features.use_systray);
+json.addBool("reuse_2pass_log",key->features.reuse_2pass_log);
+json.addBool("audiobar_uses_master",key->features.audiobar_uses_master);
+json.addUint32("threading_lavc",key->features.threading_lavc);
+json.addUint32("cpu_caps",key->features.cpu_caps);
+json.addUint32("mpeg_no_limit",key->features.mpeg_no_limit);
+json.addBool("alternate_mp3_tag",key->features.alternate_mp3_tag);
+json.addBool("vdpau",key->features.vdpau);
+json.endNode();
+json.addNode("lastfiles");
+json.addString("lastdir_read",key->lastfiles.lastdir_read);
+json.addString("lastdir_write",key->lastfiles.lastdir_write);
+json.addString("file1",key->lastfiles.file1);
+json.addString("file2",key->lastfiles.file2);
+json.addString("file3",key->lastfiles.file3);
+json.addString("file4",key->lastfiles.file4);
+json.endNode();
+json.addUint32("message_level",key->message_level);
+json.addNode("audio_device");
+json.addString("audiodevice",key->audio_device.audiodevice);
+json.addString("alsa_device",key->audio_device.alsa_device);
+json.endNode();
+json.addUint32("videodevice",key->videodevice);
+json.addNode("priority");
+json.addUint32("encoding",key->priority.encoding);
+json.addUint32("indexing",key->priority.indexing);
+json.addUint32("playback",key->priority.playback);
+json.endNode();
+json.addNode("Default");
+json.addUint32("postproc_type",key->Default.postproc_type);
+json.addUint32("postproc_value",key->Default.postproc_value);
+json.addUint32("downmixing",key->Default.downmixing);
+json.endNode();
+json.addUint32("mpegsplit_autosplit",key->mpegsplit_autosplit);
+return json.dumpToFile(file);
+};
+bool  my_prefs_struct_jdeserialize(const char *file, const ADM_paramList *tmpl,my_prefs_struct *key){
+admJsonToCouple json;
+CONFcouple *c=json.readFromFile(file);
+if(!c) {ADM_error("Cannot read json file");return false;}
+bool r= ADM_paramLoadPartial(c,tmpl,key);
+delete c;
+return r;
+};

Added: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/prefs2_pref.h
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/prefs2_pref.h	                        (rev 0)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/prefs2_pref.h	2011-04-30 19:19:31 UTC (rev 7171)
@@ -0,0 +1,44 @@
+// automatically generated by pref_gen.py, do not edit!
+#if 0
+typedef struct
+{
+   const char *name;
+   TYPE  type;
+   const char *defaultValue;
+   const char *min;
+   const char *max;
+   char *Value;
+}optionDesc;
+#endif 
+static optionDesc myOptions[]={
+{ FEATURES_SWAP_IF_A_GREATER_THAN_B,"features.swap_if_A_greater_than_B",	ADM_param_bool    	,"1",	"0",	"1",	NULL},
+{ FEATURES_SAVEPREFSONEXIT,"features.saveprefsonexit",	ADM_param_bool    	,"1",	"0",	"1",	NULL},
+{ FEATURES_IGNORESAVEDMARKERS,"features.ignoresavedmarkers",	ADM_param_bool    	,"0",	"0",	"1",	NULL},
+{ FEATURES_USE_ODML,"features.use_odml",	ADM_param_uint32_t	,"0",	"0",	"1",	NULL},
+{ FEATURES_USE_SYSTRAY,"features.use_systray",	ADM_param_uint32_t	,"0",	"0",	"1",	NULL},
+{ FEATURES_REUSE_2PASS_LOG,"features.reuse_2pass_log",	ADM_param_bool    	,"0",	"0",	"1",	NULL},
+{ FEATURES_AUDIOBAR_USES_MASTER,"features.audiobar_uses_master",	ADM_param_bool    	,"0",	"0",	"1",	NULL},
+{ FEATURES_THREADING_LAVC,"features.threading_lavc",	ADM_param_uint32_t	,"0",	"0",	"32",	NULL},
+{ FEATURES_CPU_CAPS,"features.cpu_caps",	ADM_param_uint32_t	,"4294967295",	"0",	"4294967295",	NULL},
+{ FEATURES_MPEG_NO_LIMIT,"features.mpeg_no_limit",	ADM_param_uint32_t	,"0",	"0",	"1",	NULL},
+{ FEATURES_ALTERNATE_MP3_TAG,"features.alternate_mp3_tag",	ADM_param_bool    	,"1",	"0",	"1",	NULL},
+{ FEATURES_VDPAU,"features.vdpau",	ADM_param_bool    	,"0",	"0",	"1",	NULL},
+{ LASTFILES_LASTDIR_READ,"lastfiles.lastdir_read",	ADM_param_string  	,"",	NULL,	NULL,	NULL},
+{ LASTFILES_LASTDIR_WRITE,"lastfiles.lastdir_write",	ADM_param_string  	,"",	NULL,	NULL,	NULL},
+{ LASTFILES_FILE1,"lastfiles.file1",	ADM_param_string  	,"",	NULL,	NULL,	NULL},
+{ LASTFILES_FILE2,"lastfiles.file2",	ADM_param_string  	,"",	NULL,	NULL,	NULL},
+{ LASTFILES_FILE3,"lastfiles.file3",	ADM_param_string  	,"",	NULL,	NULL,	NULL},
+{ LASTFILES_FILE4,"lastfiles.file4",	ADM_param_string  	,"",	NULL,	NULL,	NULL},
+{ MESSAGE_LEVEL,"message_level",	ADM_param_uint32_t	,"2",	"0",	"2",	NULL},
+{ AUDIO_DEVICE_AUDIODEVICE,"audio_device.audiodevice",	ADM_param_string  	,"ALSA",	NULL,	NULL,	NULL},
+{ AUDIO_DEVICE_ALSA_DEVICE,"audio_device.alsa_device",	ADM_param_string  	,"dmix",	NULL,	NULL,	NULL},
+{ VIDEODEVICE,"videodevice",	ADM_param_uint32_t	,"0",	"0",	"10",	NULL},
+{ PRIORITY_ENCODING,"priority.encoding",	ADM_param_uint32_t	,"3",	"0",	"4",	NULL},
+{ PRIORITY_INDEXING,"priority.indexing",	ADM_param_uint32_t	,"3",	"0",	"4",	NULL},
+{ PRIORITY_PLAYBACK,"priority.playback",	ADM_param_uint32_t	,"0",	"0",	"4",	NULL},
+{ DEFAULT_POSTPROC_TYPE,"Default.postproc_type",	ADM_param_uint32_t	,"3",	"0",	"7",	NULL},
+{ DEFAULT_POSTPROC_VALUE,"Default.postproc_value",	ADM_param_uint32_t	,"3",	"0",	"5",	NULL},
+{ DEFAULT_DOWNMIXING,"Default.downmixing",	ADM_param_uint32_t	,"2",	"0",	"2",	NULL},
+{ MPEGSPLIT_AUTOSPLIT,"mpegsplit_autosplit",	ADM_param_uint32_t	,"790",	"400",	"5000",	NULL},
+};
+



From mean at mail.berlios.de  Sat Apr 30 21:19:37 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Sat, 30 Apr 2011 21:19:37 +0200
Subject: [Avidemux-svn-commit] r7172 - in branches/avidemux_2.6_branch_mean:
	avidemux/common avidemux/common/ADM_audioFilter/src
	avidemux/common/ADM_commonUI avidemux/common/ADM_editor
	avidemux/common/ADM_script2/include/scriptDialogFactory
	avidemux/common/ADM_script2/js avidemux/common/ADM_toolkit
	avidemux/common/ADM_videoCodec/src avidemux/qt4/ADM_UIs/src
	avidemux/qt4/ADM_userInterfaces/ADM_gui
	avidemux_core/ADM_coreAudioDevice/src
	avidemux_core/ADM_coreImage/include avidemux_core/ADM_coreImage/src
	avidemux_core/ADM_coreJson/src
	avidemux_core/ADM_coreUI/include avidemux_core/ADM_coreUI/src
	avidemux_core/ADM_coreUtils/include avidemux_core/ADM_coreUtils/src
	avidemux_core/ADM_coreVideoCodec/src
Message-ID: <20110430191937.652E148137F@sheep.berlios.de>

Author: mean
Date: 2011-04-30 21:19:37 +0200 (Sat, 30 Apr 2011)
New Revision: 7172

Modified:
   branches/avidemux_2.6_branch_mean/avidemux/common/ADM_audioFilter/src/audiofilter.cpp
   branches/avidemux_2.6_branch_mean/avidemux/common/ADM_commonUI/DIA_audioFilter.cpp
   branches/avidemux_2.6_branch_mean/avidemux/common/ADM_commonUI/DIA_postproc.cpp
   branches/avidemux_2.6_branch_mean/avidemux/common/ADM_commonUI/DIA_prefs.cpp
   branches/avidemux_2.6_branch_mean/avidemux/common/ADM_editor/ADM_edLoadSave.cpp
   branches/avidemux_2.6_branch_mean/avidemux/common/ADM_editor/ADM_edPySave.cpp
   branches/avidemux_2.6_branch_mean/avidemux/common/ADM_editor/ADM_edRender.cpp
   branches/avidemux_2.6_branch_mean/avidemux/common/ADM_editor/ADM_edit.hxx
   branches/avidemux_2.6_branch_mean/avidemux/common/ADM_script2/include/scriptDialogFactory/ADM_scriptDFToggle.h
   branches/avidemux_2.6_branch_mean/avidemux/common/ADM_script2/js/ADM_jsTestFactory.cpp
   branches/avidemux_2.6_branch_mean/avidemux/common/ADM_toolkit/automation.cpp
   branches/avidemux_2.6_branch_mean/avidemux/common/ADM_videoCodec/src/ADM_ffmpeg_vdpau.cpp
   branches/avidemux_2.6_branch_mean/avidemux/common/gtk_gui.cpp
   branches/avidemux_2.6_branch_mean/avidemux/common/main.cpp
   branches/avidemux_2.6_branch_mean/avidemux/qt4/ADM_UIs/src/T_toggle.cpp
   branches/avidemux_2.6_branch_mean/avidemux/qt4/ADM_userInterfaces/ADM_gui/file_qt4.cpp
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreAudioDevice/src/ADM_audiodevice.cpp
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreImage/include/ADM_image.h
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreImage/src/ADM_colorspace.cpp
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreImage/src/ADM_image.cpp
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreJson/src/ADM_json.cpp
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUI/include/DIA_factory.h
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUI/src/DIA_factory.cpp
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/include/prefs.h
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/pref_gen.py
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/prefs.cpp
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/prefs2.conf
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/prefs2.h
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/prefs2_desc.cpp
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/prefs2_json.cpp
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/prefs2_pref.h
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreVideoCodec/src/ADM_ffmp43.cpp
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreVideoCodec/src/DIA_lavDecoder.cpp
Log:
[all] use bool as native type for prefs + diaFactory toggle, continue switching from pref1 to pref2, still incomplete

Modified: branches/avidemux_2.6_branch_mean/avidemux/common/ADM_audioFilter/src/audiofilter.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux/common/ADM_audioFilter/src/audiofilter.cpp	2011-04-30 19:19:31 UTC (rev 7171)
+++ branches/avidemux_2.6_branch_mean/avidemux/common/ADM_audioFilter/src/audiofilter.cpp	2011-04-30 19:19:37 UTC (rev 7172)
@@ -45,7 +45,7 @@
     playback.startTimeInUs=startTime;
     playback.shiftInMs=shift;
     playback.mixerEnabled=true;
-    if(prefs->get(DOWNMIXING_PROLOGIC,&downmix)!=RC_OK)
+    if(prefs->get(DEFAULT_DOWNMIXING,&downmix)!=RC_OK)
     {
       downmix=0;
     }

Modified: branches/avidemux_2.6_branch_mean/avidemux/common/ADM_commonUI/DIA_audioFilter.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux/common/ADM_commonUI/DIA_audioFilter.cpp	2011-04-30 19:19:31 UTC (rev 7171)
+++ branches/avidemux_2.6_branch_mean/avidemux/common/ADM_commonUI/DIA_audioFilter.cpp	2011-04-30 19:19:37 UTC (rev 7172)
@@ -65,7 +65,8 @@
      eGain.link(&(menuGain[2]),1,&eGainValue);
   //****************************
  diaElemMenu      eMixer(&vChan,QT_TR_NOOP("_Mixer:"),11,menuMixer);
- diaElemToggle    tMixer(PX(mixerEnabled),QT_TR_NOOP("Remix:"));
+ bool bMixer=config->mixerEnabled;
+ diaElemToggle    tMixer(&bMixer,QT_TR_NOOP("Remix:"));
  tMixer.link(1,&eMixer);
  /************************************/
  diaElem *elems[]={&eFPS, &tMixer,&eMixer, &eResample,&eGain,&eGainValue};
@@ -75,6 +76,7 @@
         config->film2pal=(FILMCONV)vFilm;
         config->gainParam.mode=(ADM_GAINMode)vGainMode;
         config->gainParam.gain10=vGainValue*10;
+        config->mixerEnabled=bMixer;
       return true;
     }
     

Modified: branches/avidemux_2.6_branch_mean/avidemux/common/ADM_commonUI/DIA_postproc.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux/common/ADM_commonUI/DIA_postproc.cpp	2011-04-30 19:19:31 UTC (rev 7171)
+++ branches/avidemux_2.6_branch_mean/avidemux/common/ADM_commonUI/DIA_postproc.cpp	2011-04-30 19:19:37 UTC (rev 7172)
@@ -18,7 +18,7 @@
 
 #include "DIA_factory.h"
 
-int DIA_getMPParams( uint32_t *pplevel, uint32_t *ppstrength,uint32_t *swap)
+int DIA_getMPParams( uint32_t *pplevel, uint32_t *ppstrength,bool *swap)
 {
         
 
@@ -27,7 +27,7 @@
     diaElemUInteger   postProcStrength(PX(ppstrength),QT_TR_NOOP("_Filter strength:"),0,5);
     diaElemToggle     swapuv(PX(swap),QT_TR_NOOP("_Swap U and V"));
     
-    uint32_t hzd,vzd,dring;
+    bool hzd,vzd,dring;
     
 #define DOME(x,y) if(*pplevel & x) y=1;else y=0;
     

Modified: branches/avidemux_2.6_branch_mean/avidemux/common/ADM_commonUI/DIA_prefs.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux/common/ADM_commonUI/DIA_prefs.cpp	2011-04-30 19:19:31 UTC (rev 7171)
+++ branches/avidemux_2.6_branch_mean/avidemux/common/ADM_commonUI/DIA_prefs.cpp	2011-04-30 19:19:37 UTC (rev 7172)
@@ -41,38 +41,36 @@
 {
 uint32_t olddevice,newdevice;
 
-uint32_t        use_odml=0;
-uint32_t	autosplit=0;
+bool     use_odml=0;
+uint32_t autosplit=0;
 uint32_t render;
-uint32_t useTray=0;
-uint32_t useMaster=0;
+bool     useTray=0;
 
-uint32_t useSwap=0;
 
+bool     useSwap=0;
+
 uint32_t lavcThreads=0;
 uint32_t encodePriority=2;
 uint32_t indexPriority=2;
 uint32_t playbackPriority=0;
 uint32_t downmix;
-uint32_t mpeg_no_limit=0;
+bool     mpeg_no_limit=0;
 uint32_t msglevel=2;
 
 uint32_t mixer=0;
-char     *filterPath=NULL;
+
 char     *alsaDevice=NULL;
 
+bool     balternate_mp3_tag=true;
 
-
-uint32_t alternate_mp3_tag=1;
 uint32_t pp_type=3;
 uint32_t pp_value=5;
-uint32_t vdpau=0;
-uint32_t hzd,vzd,dring;
-uint32_t capsMMX,capsMMXEXT,caps3DNOW,caps3DNOWEXT,capsSSE,capsSSE2,capsSSE3,capsSSSE3,capsAll;
 
-uint32_t useGlobalGlyph=0;
-char     *globalGlyphName=NULL;
+bool     bvdpau=false;
+bool     hzd,vzd,dring;
+bool     capsMMX,capsMMXEXT,caps3DNOW,caps3DNOWEXT,capsSSE,capsSSE2,capsSSE3,capsSSSE3,capsAll;
 
+
 	olddevice=newdevice=AVDM_getCurrentDevice();
 
         // Default pp
@@ -103,28 +101,24 @@
                 alsaDevice = ADM_strdup("plughw:0,0");
 #endif
         // vdpau
-        prefs->get(FEATURE_VDPAU,&vdpau);
-        // Global glyph
-        prefs->get(FEATURE_GLOBAL_GLYPH_ACTIVE,&useGlobalGlyph);
-        prefs->get(FEATURE_GLOBAL_GLYPH_NAME,&globalGlyphName);
-
+        prefs->get(FEATURES_VDPAU,&bvdpau);
         
         // Alternate mp3 tag (haali)
-        prefs->get(FEATURE_ALTERNATE_MP3_TAG,&alternate_mp3_tag);
+        prefs->get(FEATURES_ALTERNATE_MP3_TAG,&balternate_mp3_tag);
         
         // Video renderer
-        if(prefs->get(DEVICE_VIDEODEVICE,&render)!=RC_OK)
+        if(prefs->get(VIDEODEVICE,&render)!=RC_OK)
         {       
                 render=(uint32_t)RENDER_GTK;
         }
         // SysTray
-        if(!prefs->get(FEATURE_USE_SYSTRAY,&useTray)) 
+        if(!prefs->get(FEATURES_USE_SYSTRAY,&useTray)) 
                 useTray=0;
         // Accept mpeg for DVD when fq!=48 kHz
-        if(!prefs->get(FEATURE_MPEG_NO_LIMIT,&mpeg_no_limit)) mpeg_no_limit=0;
+        if(!prefs->get(FEATURES_MPEG_NO_LIMIT,&mpeg_no_limit)) mpeg_no_limit=0;
 
         // Multithreads
-        prefs->get(FEATURE_THREADING_LAVC, &lavcThreads);
+        prefs->get(FEATURES_THREADING_LAVC, &lavcThreads);
 
 
 		// Encoding priority
@@ -138,32 +132,32 @@
                 playbackPriority=0;
 
         // VCD/SVCD split point		
-        if(!prefs->get(SETTINGS_MPEGSPLIT, &autosplit))
+        if(!prefs->get(MPEGSPLIT_AUTOSPLIT, &autosplit))
                 autosplit=690;		
                         
         // Open DML (Gmv)
-        if(!prefs->get(FEATURE_USE_ODML, &use_odml))
+        if(!prefs->get(FEATURES_USE_ODML, &use_odml))
           use_odml=0;
 #if defined(ALSA_SUPPORT) || defined (OSS_SUPPORT)
 		// Master or PCM for audio
-        if(!prefs->get(FEATURE_AUDIOBAR_USES_MASTER, &useMaster))
+        if(!prefs->get(FEATURES_AUDIOBAR_USES_MASTER, &useMaster))
                 useMaster=0;
 #endif
 
         // SWAP A&B if A>B
-        if(!prefs->get(FEATURE_SWAP_IF_A_GREATER_THAN_B, &useSwap))
+        if(!prefs->get(FEATURES_SWAP_IF_A_GREATER_THAN_B, &useSwap))
                 useSwap=0;
         // Get level of message verbosity
         prefs->get(MESSAGE_LEVEL,&msglevel);
         // Downmix default
-        if(prefs->get(DOWNMIXING_PROLOGIC,&downmix)!=RC_OK)
+        if(prefs->get(DEFAULT_DOWNMIXING,&downmix)!=RC_OK)
         {       
             downmix=0;
         }
         olddevice=newdevice=AVDM_getCurrentDevice();
         // Audio device
         /************************ Build diaelems ****************************************/
-        diaElemToggle useVdpau(&vdpau,QT_TR_NOOP("_Use VDPAU for decoding H264"));
+        diaElemToggle useVdpau(&bvdpau,QT_TR_NOOP("_Use VDPAU for decoding H264"));
         diaElemToggle useSysTray(&useTray,QT_TR_NOOP("_Use systray while encoding"));
         diaElemToggle allowAnyMpeg(&mpeg_no_limit,QT_TR_NOOP("_Accept non-standard audio frequency for DVD"));
         diaElemToggle openDml(&use_odml,QT_TR_NOOP("Create _OpenDML files"));
@@ -224,7 +218,7 @@
 
         diaElemUInteger autoSplit(&autosplit,QT_TR_NOOP("_Split MPEG files every (MB):"),10,4096);
         
-        diaElemToggle   togTagMp3(&alternate_mp3_tag,QT_TR_NOOP("_Use alternative tag for MP3 in .mp4"));
+        diaElemToggle   togTagMp3(&balternate_mp3_tag,QT_TR_NOOP("_Use alternative tag for MP3 in .mp4"));
         
         diaMenuEntry videoMode[]={
                              {RENDER_GTK,      QT_TR_NOOP("GTK+ (slow)"),NULL}
@@ -301,18 +295,7 @@
      framePP.swallow(&fdring);
      framePP.swallow(&postProcStrength);
      
-        // Filter path
-        if( prefs->get(FILTERS_AUTOLOAD_PATH, &filterPath) != RC_OK )
-#ifndef __WIN32
-               filterPath = ADM_strdup("/tmp");
-#else
-               filterPath = ADM_strdup("c:\\");
-#endif
 
-		diaElemToggle togGlobalGlyph(&useGlobalGlyph, QT_TR_NOOP("Use _Global GlyphSet"));
-		diaElemFile  entryGLyphPath(0,&globalGlyphName,QT_TR_NOOP("Gl_yphSet:"), NULL, QT_TR_NOOP("Select GlyphSet file"));
-		togGlobalGlyph.link(1, &entryGLyphPath);
-
         /* User Interface */
         diaElem *diaUser[]={&useSysTray,&menuMessage};
         diaElemTabs tabUser(QT_TR_NOOP("User Interface"),2,diaUser);
@@ -353,13 +336,11 @@
 		diaElemTabs tabThreading(QT_TR_NOOP("Threading"),2,(diaElem **)diaThreading);
 
         /* Global Glyph tab */
-        diaElem *diaGlyph[]={&togGlobalGlyph,&entryGLyphPath};
-        diaElemTabs tabGlyph(QT_TR_NOOP("Global GlyphSet"),2,(diaElem **)diaGlyph);
 
                                     
 // SET
-        diaElemTabs *tabs[]={&tabUser,&tabOutput,&tabAudio,&tabVideo,&tabCpu,&tabThreading,&tabGlyph};
-        if( diaFactoryRunTabs(QT_TR_NOOP("Preferences"),7,tabs))
+        diaElemTabs *tabs[]={&tabUser,&tabOutput,&tabAudio,&tabVideo,&tabCpu,&tabThreading};
+        if( diaFactoryRunTabs(QT_TR_NOOP("Preferences"),6,tabs))
 	{
         	
         	// cpu caps
@@ -380,12 +361,8 @@
         	    	CPU_CAPS(SSE3);
         	    	CPU_CAPS(SSSE3);
         		}
-        		prefs->set(FEATURE_CPU_CAPS,CpuCaps::myCpuMask);
+        		prefs->set(FEATURES_CPU_CAPS,CpuCaps::myCpuMask);
 
-        		// Glyphs
-               prefs->set(FEATURE_GLOBAL_GLYPH_ACTIVE,useGlobalGlyph);
-               prefs->set(FEATURE_GLOBAL_GLYPH_NAME,globalGlyphName);
-
                 // Postproc
                 #undef DOME
                 #define DOME(x,y) if(y) pp_type |=x;
@@ -414,22 +391,22 @@
                       AVDM_audioInit();                     // Respawn
                 }
                 // Downmixing (default)
-                prefs->set(DOWNMIXING_PROLOGIC,downmix);
+                prefs->set(DEFAULT_DOWNMIXING,downmix);
 #if defined(ALSA_SUPPORT) || defined (OSS_SUPPORT)
                 // Master or PCM
-                prefs->set(FEATURE_AUDIOBAR_USES_MASTER, useMaster);
+                prefs->set(FEATURES_AUDIOBAR_USES_MASTER, useMaster);
 #endif
                 // allow non std audio fq for dvd
-                prefs->set(FEATURE_MPEG_NO_LIMIT, mpeg_no_limit);
+                prefs->set(FEATURES_MPEG_NO_LIMIT, mpeg_no_limit);
                 // Video render
-                prefs->set(DEVICE_VIDEODEVICE,render);
+                prefs->set(VIDEODEVICE,render);
                 // Odml
-                prefs->set(FEATURE_USE_ODML, use_odml);
+                prefs->set(FEATURES_USE_ODML, use_odml);
 				// Split
-                prefs->set(SETTINGS_MPEGSPLIT, autosplit);
+                prefs->set(MPEGSPLIT_AUTOSPLIT, autosplit);
                 
                 // number of threads
-                prefs->set(FEATURE_THREADING_LAVC, lavcThreads);
+                prefs->set(FEATURES_THREADING_LAVC, lavcThreads);
 
 				// Encoding priority
 				prefs->set(PRIORITY_ENCODING, encodePriority);
@@ -439,18 +416,16 @@
 				prefs->set(PRIORITY_PLAYBACK, playbackPriority);
 
                 // Auto swap A/B
-                prefs->set(FEATURE_SWAP_IF_A_GREATER_THAN_B, useSwap);
+                prefs->set(FEATURES_SWAP_IF_A_GREATER_THAN_B, useSwap);
                 //
                 prefs->set(MESSAGE_LEVEL,msglevel);
                 // Use tray while encoding
-                prefs->set(FEATURE_USE_SYSTRAY,useTray);
+                prefs->set(FEATURES_USE_SYSTRAY,useTray);
 
                 // VDPAU
-                prefs->set(FEATURE_VDPAU,vdpau);
-                if(filterPath)
-                  prefs->set(FILTERS_AUTOLOAD_PATH, filterPath);
+                prefs->set(FEATURES_VDPAU,bvdpau);
                 // Alternate mp3 tag (haali)
-                prefs->set(FEATURE_ALTERNATE_MP3_TAG,alternate_mp3_tag);
+                prefs->set(FEATURES_ALTERNATE_MP3_TAG,balternate_mp3_tag);
 
 			#if defined(__WIN32) && defined(USE_SDL)
 				// Initialise SDL again as driver may have changed
@@ -464,15 +439,16 @@
             delete audioDeviceItems[i];
         }
         delete [] audioDeviceItems;
-	ADM_dealloc(filterPath);
-	ADM_dealloc(globalGlyphName);
 
+
+
 	return 1;
 }
-extern int DIA_getMPParams( uint32_t *pplevel, uint32_t *ppstrength,uint32_t *swap);
+extern int DIA_getMPParams( uint32_t *pplevel, uint32_t *ppstrength,bool *swap);
 void setpp(void)
 {
-        uint32_t type,strength,uv=0;
+        uint32_t type,strength;
+        bool uv=0;
 
         if(!prefs->get(DEFAULT_POSTPROC_TYPE,&type)) type=3;
         if(!prefs->get(DEFAULT_POSTPROC_VALUE,&strength)) strength=3;

Modified: branches/avidemux_2.6_branch_mean/avidemux/common/ADM_editor/ADM_edLoadSave.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux/common/ADM_editor/ADM_edLoadSave.cpp	2011-04-30 19:19:31 UTC (rev 7171)
+++ branches/avidemux_2.6_branch_mean/avidemux/common/ADM_editor/ADM_edLoadSave.cpp	2011-04-30 19:19:37 UTC (rev 7172)
@@ -123,7 +123,8 @@
 // postproc
 //___________________________
 
-uint32_t pptype, ppstrength,ppswap;
+uint32_t pptype, ppstrength;
+bool ppswap;
         video_body->getPostProc( &pptype, &ppstrength, &ppswap);
         qfprintf(fd,"\n//** Postproc **\n");
         qfprintf(fd,"adm.setPostProc(%d,%d,%d);\n",pptype,ppstrength,ppswap);

Modified: branches/avidemux_2.6_branch_mean/avidemux/common/ADM_editor/ADM_edPySave.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux/common/ADM_editor/ADM_edPySave.cpp	2011-04-30 19:19:31 UTC (rev 7171)
+++ branches/avidemux_2.6_branch_mean/avidemux/common/ADM_editor/ADM_edPySave.cpp	2011-04-30 19:19:37 UTC (rev 7172)
@@ -132,7 +132,8 @@
 // postproc
 //___________________________
 
-uint32_t pptype, ppstrength,ppswap;
+uint32_t pptype, ppstrength;
+bool ppswap;
         video_body->getPostProc( &pptype, &ppstrength, &ppswap);
         qfprintf(fd,"\n#** Postproc **\n");
         qfprintf(fd,"adm.setPostProc(%d,%d,%d)\n",pptype,ppstrength,ppswap);

Modified: branches/avidemux_2.6_branch_mean/avidemux/common/ADM_editor/ADM_edRender.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux/common/ADM_editor/ADM_edRender.cpp	2011-04-30 19:19:31 UTC (rev 7171)
+++ branches/avidemux_2.6_branch_mean/avidemux/common/ADM_editor/ADM_edRender.cpp	2011-04-30 19:19:37 UTC (rev 7172)
@@ -514,7 +514,7 @@
 /**
     \fn setPostProc
 */
-uint8_t ADM_Composer::setPostProc( uint32_t type, uint32_t strength, uint32_t swapuv)
+uint8_t ADM_Composer::setPostProc( uint32_t type, uint32_t strength, bool swapuv)
 {
 	if(!_segments.getNbRefVideos()) return 0;
     if(!_pp) return false;
@@ -528,7 +528,7 @@
     \fn getPostProc
 */
 
-uint8_t ADM_Composer::getPostProc( uint32_t *type, uint32_t *strength, uint32_t *swapuv)
+uint8_t ADM_Composer::getPostProc( uint32_t *type, uint32_t *strength, bool *swapuv)
 {
 	if(!_segments.getNbRefVideos()) return 0;
     if(!_pp) return false;

Modified: branches/avidemux_2.6_branch_mean/avidemux/common/ADM_editor/ADM_edit.hxx
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux/common/ADM_editor/ADM_edit.hxx	2011-04-30 19:19:31 UTC (rev 7171)
+++ branches/avidemux_2.6_branch_mean/avidemux/common/ADM_editor/ADM_edit.hxx	2011-04-30 19:19:37 UTC (rev 7172)
@@ -214,8 +214,8 @@
                                         /// Returns pts-dts for given frame
                     bool		        getPtsDtsDelta(uint64_t *frameTime);
 /******************************* Post Processing ************************************/
-                    uint8_t             setPostProc( uint32_t type, uint32_t strength,	uint32_t swapuv);
-                    uint8_t             getPostProc( uint32_t *type, uint32_t *strength,uint32_t *swapuv);
+                    uint8_t             setPostProc( uint32_t type, uint32_t strength,	bool swapuv);
+                    uint8_t             getPostProc( uint32_t *type, uint32_t *strength,bool  *swapuv);
 /******************************* /Post Processing ************************************/	
 /******************************* Editing ************************************/	
                     bool                remove(uint64_t start,uint64_t end);

Modified: branches/avidemux_2.6_branch_mean/avidemux/common/ADM_script2/include/scriptDialogFactory/ADM_scriptDFToggle.h
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux/common/ADM_script2/include/scriptDialogFactory/ADM_scriptDFToggle.h	2011-04-30 19:19:31 UTC (rev 7171)
+++ branches/avidemux_2.6_branch_mean/avidemux/common/ADM_script2/include/scriptDialogFactory/ADM_scriptDFToggle.h	2011-04-30 19:19:37 UTC (rev 7172)
@@ -26,7 +26,7 @@
 {
 private:
 	char                *_title;
-	uint32_t            _value;
+	bool                 _value;
 
 public:
                      ADM_scriptDFToggleHelper(const char *title);

Modified: branches/avidemux_2.6_branch_mean/avidemux/common/ADM_script2/js/ADM_jsTestFactory.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux/common/ADM_script2/js/ADM_jsTestFactory.cpp	2011-04-30 19:19:31 UTC (rev 7171)
+++ branches/avidemux_2.6_branch_mean/avidemux/common/ADM_script2/js/ADM_jsTestFactory.cpp	2011-04-30 19:19:37 UTC (rev 7172)
@@ -62,7 +62,7 @@
 */
 int jsTestFacToggle(void)
 {
-  uint32_t tog=0;
+  bool tog=0;
   uint32_t test=0;
    diaElemToggle blend(&tog,QT_TR_NOOP("Toggle"));
     diaElemUInteger     bt(&test,"Entry",0,10);

Modified: branches/avidemux_2.6_branch_mean/avidemux/common/ADM_toolkit/automation.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux/common/ADM_toolkit/automation.cpp	2011-04-30 19:19:31 UTC (rev 7171)
+++ branches/avidemux_2.6_branch_mean/avidemux/common/ADM_toolkit/automation.cpp	2011-04-30 19:19:37 UTC (rev 7172)
@@ -88,7 +88,7 @@
 //static void call_v2v(char *a,char *b,char *c);
 static void call_probePat(char *p);
 static void save(char*name);
-static void set_autoindex(char *p);
+
 //extern uint8_t A_setContainer(const char *cont);
 
 static int call_bframe(void);
@@ -158,7 +158,7 @@
         {"reuse-2pass-log",	0	,"reuse 2pass logfile if it exists",	(one_arg_type)set_reuse_2pass_log},
         {"autosplit",		1	,"split every N MBytes",(one_arg_type)call_autosplit},
         {"info",		0	,"show information about loaded video and audio streams", (one_arg_type)show_info},
-        {"autoindex",		0	,"try to generate required index files", (one_arg_type)set_autoindex},
+        
 
         {"output-format",	1	,"set output format (AVI|OGM|ES|PS|AVI_DUAL|AVI_UNP|...)", (one_arg_type )set_output_format},
         {"rebuild-index",       0       ,"rebuild index with correct frame type", (one_arg_type)A_rebuildKeyFrame},
@@ -454,10 +454,6 @@
 }
 
 
-void set_autoindex(char *p){
-	UNUSED_ARG(p);
-	prefs->set(FEATURE_TRYAUTOIDX,(unsigned int)1);
-}
 
 void show_info(char *p){
    UNUSED_ARG(p);
@@ -646,6 +642,6 @@
 }
 
 void set_reuse_2pass_log(char *p){
-   prefs->set(FEATURE_REUSE_2PASS_LOG,1);
+   prefs->set(FEATURES_REUSE_2PASS_LOG,true);
 }
 //EOF

Modified: branches/avidemux_2.6_branch_mean/avidemux/common/ADM_videoCodec/src/ADM_ffmpeg_vdpau.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux/common/ADM_videoCodec/src/ADM_ffmpeg_vdpau.cpp	2011-04-30 19:19:31 UTC (rev 7171)
+++ branches/avidemux_2.6_branch_mean/avidemux/common/ADM_videoCodec/src/ADM_ffmpeg_vdpau.cpp	2011-04-30 19:19:37 UTC (rev 7172)
@@ -60,9 +60,9 @@
 */
 bool vdpauUsable(void)
 {
-    uint32_t v=false;
+    bool v=false;
     if(!vdpauWorking) return false;
-    if(!prefs->get(FEATURE_VDPAU,&v)) v=false;
+    if(!prefs->get(FEATURES_VDPAU,&v)) v=false;
     return v;
 }
 /**

Modified: branches/avidemux_2.6_branch_mean/avidemux/common/gtk_gui.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux/common/gtk_gui.cpp	2011-04-30 19:19:31 UTC (rev 7171)
+++ branches/avidemux_2.6_branch_mean/avidemux/common/gtk_gui.cpp	2011-04-30 19:19:37 UTC (rev 7172)
@@ -231,8 +231,8 @@
         prefs->save ();
         return;
     case ACT_EXIT:
-      { uint32_t saveprefsonexit;
-         prefs->get(FEATURE_SAVEPREFSONEXIT,&saveprefsonexit);
+      { bool saveprefsonexit;
+         prefs->get(FEATURES_SAVEPREFSONEXIT,&saveprefsonexit);
          if( saveprefsonexit )
             prefs->save ();
       }
@@ -353,7 +353,7 @@
       uint32_t swapit=0;
       uint64_t markA,markB;
       uint64_t pts=admPreview::getCurrentPts();
-      if( prefs->get(FEATURE_SWAP_IF_A_GREATER_THAN_B, &swapit) != RC_OK )     swapit = 1;
+      if( prefs->get(FEATURES_SWAP_IF_A_GREATER_THAN_B, &swapit) != RC_OK )     swapit = 1;
 
       markA=video_body->getMarkerAPts();
       markB=video_body->getMarkerBPts();
@@ -832,13 +832,14 @@
 
 
 }
-extern int DIA_getMPParams( uint32_t *pplevel, uint32_t *ppstrength,uint32_t *swap);
+extern int DIA_getMPParams( uint32_t *pplevel, uint32_t *ppstrength,bool *swap);
 //
 
 //
 void	A_setPostproc( void )
 {
-uint32_t type,strength,swap;
+uint32_t type,strength;
+bool swap;
 	if(!avifileinfo) return;
 
 	video_body->getPostProc(&type,&strength,&swap);
@@ -1144,7 +1145,7 @@
         }
 #endif
 
-        if(prefs->get(DEVICE_VIDEODEVICE,&renderI)!=RC_OK)
+        if(prefs->get(VIDEODEVICE,&renderI)!=RC_OK)
         {
                 render=RENDER_GTK;
         }else

Modified: branches/avidemux_2.6_branch_mean/avidemux/common/main.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux/common/main.cpp	2011-04-30 19:19:31 UTC (rev 7171)
+++ branches/avidemux_2.6_branch_mean/avidemux/common/main.cpp	2011-04-30 19:19:37 UTC (rev 7172)
@@ -204,7 +204,7 @@
 #ifdef USE_SDL
 	uint32_t videoDevice = RENDER_LAST;
 
-	prefs->get(DEVICE_VIDEODEVICE, &videoDevice);
+	prefs->get(VIDEODEVICE, &videoDevice);
 
 	initSdl(videoDevice);
 #endif

Modified: branches/avidemux_2.6_branch_mean/avidemux/qt4/ADM_UIs/src/T_toggle.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux/qt4/ADM_UIs/src/T_toggle.cpp	2011-04-30 19:19:31 UTC (rev 7171)
+++ branches/avidemux_2.6_branch_mean/avidemux/qt4/ADM_UIs/src/T_toggle.cpp	2011-04-30 19:19:37 UTC (rev 7172)
@@ -29,7 +29,7 @@
 {
   protected:
 public:
-            diaElemToggle(uint32_t *toggleValue,const char *toggleTitle, const char *tip=NULL);
+            diaElemToggle(bool *toggleValue,const char *toggleTitle, const char *tip=NULL);
   virtual   ~diaElemToggle() ;
   void      setMe(void *dialog, void *opaque,uint32_t line);
   void      getMe(void);
@@ -103,7 +103,7 @@
 	QObject::connect(this, SIGNAL(stateChanged(int)), this, SLOT(changed(int )));
 }
 
-diaElemToggle::diaElemToggle(uint32_t *toggleValue,const char *toggleTitle, const char *tip)
+diaElemToggle::diaElemToggle(bool *toggleValue,const char *toggleTitle, const char *tip)
   : diaElemToggleBase()
 {
   param=(void *)toggleValue;
@@ -126,7 +126,7 @@
  ADM_QCheckBox *box=new ADM_QCheckBox(QString::fromUtf8(paramTitle),(QWidget *)dialog,this,TT_TOGGLE);
  QVBoxLayout *layout=(QVBoxLayout*) opaque;
  myWidget=(void *)box; 
- if( *(uint32_t *)param)
+ if( *(bool *)param)
  {
     box->setCheckState(Qt::Checked); 
  }
@@ -137,12 +137,12 @@
 void diaElemToggle::getMe(void)
 {
   ADM_QCheckBox *box=(ADM_QCheckBox *)myWidget;
-  uint32_t *val=(uint32_t *)param;
+  bool *val=(bool *)param;
   if(Qt::Checked==box->checkState())
   {
-    *val=1; 
+    *val=true; 
   }else
-    *val=0;
+    *val=false;
 }
 void diaElemToggle::enable(uint32_t onoff) 
 {
@@ -437,7 +437,7 @@
 	ADM_qt4Factory::diaElemToggleInt *a=(ADM_qt4Factory::diaElemToggleInt *)e;
 	delete a;
 }
-diaElem  *qt4CreateToggle(uint32_t *toggleValue,const char *toggleTitle, const char *tip)
+diaElem  *qt4CreateToggle(bool *toggleValue,const char *toggleTitle, const char *tip)
 {
 	return new  ADM_qt4Factory::diaElemToggle(toggleValue,toggleTitle, tip);
 }

Modified: branches/avidemux_2.6_branch_mean/avidemux/qt4/ADM_userInterfaces/ADM_gui/file_qt4.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux/qt4/ADM_userInterfaces/ADM_gui/file_qt4.cpp	2011-04-30 19:19:31 UTC (rev 7171)
+++ branches/avidemux_2.6_branch_mean/avidemux/qt4/ADM_userInterfaces/ADM_gui/file_qt4.cpp	2011-04-30 19:19:37 UTC (rev 7172)
@@ -33,14 +33,14 @@
 	{
 		char *tmpname = NULL;
 		char *str = NULL;
-		options pref_entry = LASTDIR_READ;
+		options pref_entry = LASTFILES_LASTDIR_READ;
 
 		*name = NULL;
 
 		if (access)
-			pref_entry = LASTDIR_WRITE;
+			pref_entry = LASTFILES_LASTDIR_WRITE;
 
-		if (prefs->get(pref_entry,(ADM_filename **)&tmpname))
+		if (prefs->get(pref_entry,&tmpname))
 		{
 			DIR *dir;
 			str = ADM_PathCanonize(tmpname);

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreAudioDevice/src/ADM_audiodevice.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreAudioDevice/src/ADM_audiodevice.cpp	2011-04-30 19:19:31 UTC (rev 7171)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreAudioDevice/src/ADM_audiodevice.cpp	2011-04-30 19:19:37 UTC (rev 7172)
@@ -134,7 +134,7 @@
 {
 const char *string;
 		string=ADM_audioById(currentDevice);
-		prefs->set(DEVICE_AUDIODEVICE, string);
+		prefs->set(AUDIO_DEVICE_AUDIODEVICE, string);
 }
 /**
     \fn ADM_audioByName
@@ -182,7 +182,7 @@
 char *name=NULL;
 AUDIO_DEVICE id=0;
 
-		if(prefs->get(DEVICE_AUDIODEVICE, &name))
+		if(prefs->get(AUDIO_DEVICE_AUDIODEVICE, &name))
 		{
 		id=ADM_audioByName(name);
 		ADM_dealloc(name);

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreImage/include/ADM_image.h
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreImage/include/ADM_image.h	2011-04-30 19:19:31 UTC (rev 7171)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreImage/include/ADM_image.h	2011-04-30 19:19:37 UTC (rev 7172)
@@ -66,6 +66,9 @@
 */
 class ADMImage
 {
+public: // half public/protected, only in  ADMImageRef case it is really public
+        uint8_t         *_planes[3];     /// In case of linked data store y/u/v pointers
+        uint32_t        _planeStride[3]; /// Same story
 public:
         uint32_t	    _width;		/// Width of image
         uint32_t	    _height;	/// Height of image
@@ -152,8 +155,6 @@
 class ADMImageRef: public ADMImage
 {
 public:
-        uint8_t         *_planes[3];     /// In case of linked data store y/u/v pointers
-        uint32_t        _planeStride[3]; /// Same story
 
 public:
                         ADMImageRef(uint32_t w, uint32_t h);

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreImage/src/ADM_colorspace.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreImage/src/ADM_colorspace.cpp	2011-04-30 19:19:31 UTC (rev 7171)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreImage/src/ADM_colorspace.cpp	2011-04-30 19:19:37 UTC (rev 7172)
@@ -268,12 +268,8 @@
     default: ADM_assert(0);
     }
 
-    if(dh!=sh)
     {
         FLAGS();
-    }else
-    {
-        ADM_warning("Same height for source and destination, disabling assembly\n");
     }
   
     srcWidth=sw;

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreImage/src/ADM_image.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreImage/src/ADM_image.cpp	2011-04-30 19:19:31 UTC (rev 7171)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreImage/src/ADM_image.cpp	2011-04-30 19:19:37 UTC (rev 7172)
@@ -107,7 +107,14 @@
 */
 ADMImageDefault::ADMImageDefault(uint32_t w, uint32_t h) : ADMImage(w,h,ADM_IMAGE_DEFAULT)
 {
-    data=new uint8_t [(w*h*3)/2];
+    uint32_t pitch=(w+31)&(~31);
+    data=new uint8_t [32+(pitch*h*3)/2];
+    _planes[0]=data;
+    _planes[1]=data+pitch*h;
+    _planes[2]=data+pitch*h +((pitch*h)>>2);
+    _planeStride[0]=pitch;
+    _planeStride[1]=pitch/2;
+    _planeStride[2]=pitch/2;
 }
 /**
     \fn ADMImageDefault
@@ -121,19 +128,12 @@
 bool           ADMImageDefault::isWrittable(void) {return true;}
 uint32_t       ADMImageDefault::GetPitch(ADM_PLANE plane)
                     {
-                            if(plane==PLANAR_Y) return _width;
-                            return _width/2;
+                            return _planeStride[plane];
                         }
 uint8_t        *ADMImageDefault::GetWritePtr(ADM_PLANE plane) {return GetReadPtr(plane);}
 uint8_t        *ADMImageDefault::GetReadPtr(ADM_PLANE plane)
 {
-    int xplane=_width*_height;
-    switch(plane)
-    {
-        case PLANAR_Y: return data;
-        case PLANAR_U: return data+xplane;
-        case PLANAR_V: return data+(5*xplane)/4;
-    }
+    return _planes[plane];
 }
 //****************************************
 /**

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreJson/src/ADM_json.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreJson/src/ADM_json.cpp	2011-04-30 19:19:31 UTC (rev 7171)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreJson/src/ADM_json.cpp	2011-04-30 19:19:37 UTC (rev 7172)
@@ -214,7 +214,7 @@
         int l=readItems.size();
         for(int i=0;i<l;i++)
         {
-            printf(" %s => %s\n",readItems[i].key.c_str(),readItems[i].value.c_str());
+           // printf(" %s => %s\n",readItems[i].key.c_str(),readItems[i].value.c_str());
         }
         //
         CONFcouple *c=new CONFcouple(l);

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUI/include/DIA_factory.h
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUI/include/DIA_factory.h	2011-04-30 19:19:31 UTC (rev 7171)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUI/include/DIA_factory.h	2011-04-30 19:19:37 UTC (rev 7172)
@@ -170,7 +170,7 @@
   int getRequiredLayout(void);
 };
 /*********************************************/
-typedef diaElem *CREATE_TOGGLE(uint32_t *toggleValue,const char *toggleTitle, const char *tip);
+typedef diaElem *CREATE_TOGGLE(bool *toggleValue,const char *toggleTitle, const char *tip);
 class diaElemToggleBase : public diaElem
 {
   protected:
@@ -183,12 +183,12 @@
   virtual   ~diaElemToggleBase() {};
   virtual uint8_t   link(uint32_t onoff,diaElem *w)=0;
 };
-typedef diaElem *CREATE_TOGGLE_T(uint32_t *toggleValue,const char *toggleTitle, const char *tip);
+typedef diaElem *CREATE_TOGGLE_T(bool *toggleValue,const char *toggleTitle, const char *tip);
 class diaElemToggle : public diaElemToggleBase
 {
   protected:
 public:
-            diaElemToggle(uint32_t *toggleValue,const char *toggleTitle, const char *tip=NULL);
+            diaElemToggle(bool *toggleValue,const char *toggleTitle, const char *tip=NULL);
   virtual   ~diaElemToggle() ;
   void      setMe(void *dialog, void *opaque,uint32_t line);
   void      getMe(void);

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUI/src/DIA_factory.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUI/src/DIA_factory.cpp	2011-04-30 19:19:31 UTC (rev 7171)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUI/src/DIA_factory.cpp	2011-04-30 19:19:37 UTC (rev 7172)
@@ -478,7 +478,7 @@
 	}
 DIA_MKSTUBS(diaElemToggleInt)
 // ****************** diaElemToggle ********************
-diaElemToggle ::diaElemToggle(uint32_t *toggleValue,const char *toggleTitle, const char *tip):
+diaElemToggle ::diaElemToggle(bool *toggleValue,const char *toggleTitle, const char *tip):
 	diaElemToggleBase()
 {
 	ADM_assert(Factory); 

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/include/prefs.h
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/include/prefs.h	2011-04-30 19:19:31 UTC (rev 7171)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/include/prefs.h	2011-04-30 19:19:37 UTC (rev 7172)
@@ -3,133 +3,46 @@
 
 #include "ADM_default.h"
 
-#define RC_OK     1
-#define RC_FAILED 0
+#define RC_OK     true
+#define RC_FAILED false
 
 // <prefs_gen>
 typedef enum {
-	CODECS_SVCD_ENCTYPE,
-	CODECS_SVCD_BITRATE,
-	CODECS_SVCD_QUANTIZER,
-	CODECS_SVCD_FINALSIZE,
-	CODECS_SVCD_INTERLACED,
-	CODECS_SVCD_BFF,
-	CODECS_SVCD_WIDESCREEN,
-	CODECS_SVCD_MATRIX,
-	CODECS_SVCD_GOPSIZE,
-	CODECS_SVCD_MAXBITRATE,
-	CODECS_DVD_ENCTYPE,
-	CODECS_DVD_BITRATE,
-	CODECS_DVD_QUANTIZER,
-	CODECS_DVD_FINALSIZE,
-	CODECS_DVD_INTERLACED,
-	CODECS_DVD_BFF,
-	CODECS_DVD_WIDESCREEN,
-	CODECS_DVD_MATRIX,
-	CODECS_DVD_GOPSIZE,
-	CODECS_DVD_MAXBITRATE,
-	CODECS_XVID_ENCTYPE,
-	CODECS_XVID_QUANTIZER,
-	CODECS_XVID_BITRATE,
-	CODECS_XVID_FINALSIZE,
-	CODECS_PREFERREDCODEC,
-	FILTERS_SUBTITLE_FONTNAME,
-	FILTERS_SUBTITLE_CHARSET,
-	FILTERS_SUBTITLE_FONTSIZE,
-	FILTERS_SUBTITLE_YPERCENT,
-	FILTERS_SUBTITLE_UPERCENT,
-	FILTERS_SUBTITLE_VPERCENT,
-	FILTERS_SUBTITLE_SELFADJUSTABLE,
-	FILTERS_SUBTITLE_USEBACKGROUNDCOLOR,
-	FILTERS_AVSFILTER_AVS_SCRIPT,
-	FILTERS_AVSFILTER_AVS_LOADER,
-	FILTERS_AVSFILTER_PIPE_TIMEOUT,
-	FILTERS_AVSFILTER_DEBUG_MSG,
-	SETTINGS_MPEGSPLIT,
-	DEVICE_AUDIODEVICE,
-	DEVICE_AUDIO_ALSA_DEVICE,
-	DEVICE_VIDEODEVICE,
-	DEFAULT_POSTPROC_TYPE,
-	DEFAULT_POSTPROC_VALUE,
-	LASTFILES_FILE1,
-	LASTFILES_FILE2,
-	LASTFILES_FILE3,
-	LASTFILES_FILE4,
-	LASTDIR_READ,
-	LASTDIR_WRITE,
-	LAME_CLI,
-	PIPE_CMD,
-	PIPE_PARAM,
-	LAME_PATH,
-	TOOLAME_PATH,
-	LVEMUX_PATH,
-	REQUANT_PATH,
-	MESSAGE_LEVEL,
-	FEATURE_SWAP_IF_A_GREATER_THAN_B,
-	FEATURE_SVCDRES_PREFEREDSOURCERATIO,
-	FEATURE_SAVEPREFSONEXIT,
-	FEATURE_IGNORESAVEDMARKERS,
-	FEATURE_DISABLE_NUV_RESYNC,
-	FEATURE_TRYAUTOIDX,
-	FEATURE_USE_ODML,
-	FEATURE_USE_SYSTRAY,
-	FEATURE_REUSE_2PASS_LOG,
-	FEATURE_AUDIOBAR_USES_MASTER,
-	FEATURE_THREADING_LAVC,
-	FEATURE_CPU_CAPS,
-	FEATURE_MPEG_NO_LIMIT,
-	FEATURE_AUTO_BUILDMAP,
-	FEATURE_AUTO_REBUILDINDEX,
-	FEATURE_AUTO_UNPACK,
-	DOWNMIXING_PROLOGIC,
-	FILTERS_AUTOLOAD_PATH,
-	FILTERS_AUTOLOAD_ACTIVE,
-	FEATURE_ALTERNATE_MP3_TAG,
-	FEATURE_VDPAU,
-	FEATURE_GLOBAL_GLYPH_ACTIVE,
-	FEATURE_GLOBAL_GLYPH_NAME,
-	PRIORITY_ENCODING,
-	PRIORITY_INDEXING,
-	PRIORITY_PLAYBACK
+#include "prefs2_list.h"
+LAST_PREF
 } options;
 // </prefs_gen>
 
 class preferences {
 	private:
 		char *internal_lastfiles[5];
-		int save_xml_to_file();
+		const char * get_str_min(options option);
+		const char * get_str_max(options option);
+
 	public:
 		preferences();
 		~preferences();
-		int load();
-		int save();
-		int get(options option, unsigned int *val);
-		int get(options option,          int *val);
-		int get(options option, unsigned long *val);
-		int get(options option,          long *val);
-		int get(options option, float *val);
-		int get(options option, char **val);
-                int get(options option, ADM_filename **val);
-		int get(options option, uint8_t *val);
-		int get(options option, uint16_t *val);
-		const char * get_str_min(options option);
-		const char * get_str_max(options option);
-		// handled by compiler: const uint8_t is full handled by any 
-		//    method that can handle const unsigned int
-		// int set(options option, const uint8_t val);
-		// int set(options option, const uint16_t val);
-		int set(options option, const unsigned int val);
-		int set(options option, const          int val);
-		int set(options option, const unsigned long val);
-		int set(options option, const          long val);
-		int set(options option, const          float val);
-		int set(options option, const          char * val);
-                int set(options option, const ADM_filename * val);
+		bool load();
+		bool save();
+		bool get(options option, uint32_t *);
+		bool get(options option, int32_t  *);
+		bool get(options option, float *val);
+		bool get(options option, char **val);
+		bool get(options option, bool *val);
+
+
+		bool set(options option, const uint32_t val);
+		bool set(options option, const int32_t  val);
+		bool set(options option, const float    val);
+		bool set(options option, const char    *val);
+		bool set(options option, const bool     val);
+		
+
 		int set_lastfile(const char* file);
 		const char **get_lastfiles(void);
 };
 
 extern preferences *prefs;
-int initPrefs(  void );
-int destroyPrefs(  void );
+bool initPrefs(  void );
+bool destroyPrefs(  void );
 #endif

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/pref_gen.py
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/pref_gen.py	2011-04-30 19:19:31 UTC (rev 7171)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/pref_gen.py	2011-04-30 19:19:37 UTC (rev 7172)
@@ -96,7 +96,7 @@
     out=out+"\t,"+str(default)+",\t"+str(min)+",\t"+str(max)
     out=out+",\tNULL},"
     outputJson(out)
-    outputList(fullName.upper())
+    outputList(fullName.upper()+", \t//"+str(varType))
 ###################################################################################################################################
 
 def writeJsonHead():
@@ -129,7 +129,7 @@
     print "no such file "+str(inputFile)
     exit(1)
 jsonFileName=re.sub(r'.conf',r'_pref.h',inputFile)
-listFileName=str("../include/"+re.sub(r'.conf',r'_list.h',intputFile)
+listFileName=str("../include/")+re.sub(r'.conf',r'_list.h',inputFile)
 print("Generating "+jsonFileName)
 jsonFile=open(jsonFileName,'w')
 print("Generating "+listFileName)

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/prefs.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/prefs.cpp	2011-04-30 19:19:31 UTC (rev 7171)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/prefs.cpp	2011-04-30 19:19:37 UTC (rev 7172)
@@ -48,7 +48,7 @@
 
 typedef struct
 {
-   const char *name;
+   int        enumerate;
    const char *name2;
    ADM_paramType  type;
    const char *defaultValue;
@@ -62,7 +62,7 @@
 /**
     \fn initPrefs
 */
-int initPrefs(  void )
+bool initPrefs(  void )
 {
   prefs = new preferences();
   return 1;
@@ -70,7 +70,7 @@
 /**
     \fn destroyPrefs
 */
-int destroyPrefs(void)
+bool destroyPrefs(void)
 {
 	delete prefs;
 	prefs = NULL;
@@ -84,6 +84,24 @@
         if(!strcmp(myOptions[i].name2,name)) return i;
     return -1;
 }
+static int searchDescByName(const char *name)
+{
+    int nb=sizeof( my_prefs_struct_param) /sizeof(ADM_paramList  );
+    for(int i=0;i<nb;i++)
+        if(!strcmp(my_prefs_struct_param[i].paramName,name)) return i;
+    return -1;
+}
+
+
+static int searchOptionByEnum(int value)
+{
+    int nb=sizeof( myOptions)/sizeof(optionDesc);
+    for(int i=0;i<nb;i++)
+        if(myOptions[i].enumerate==value) return i;
+    return -1;
+}
+
+
 /**
     \fn ctor
 */
@@ -153,7 +171,7 @@
     \fn load
     \brief load prefs from file.. Should be called only once
 */
-int preferences::load()
+bool preferences::load()
 {
 
    char *home;
@@ -186,7 +204,7 @@
 /**
     \fn save
 */
-int preferences::save()
+bool preferences::save()
 {
    char *home;
    char *dir_adm;
@@ -213,80 +231,111 @@
     return RC_FAILED;
 }
 
-//--------
-int preferences::get(options option, uint8_t *val)
-{
-	return RC_FAILED;
-}
 
 
-int preferences::get(options option, uint16_t *val)
+static bool lookupOption(options option, const ADM_paramList **desc, const optionDesc **tpl)
 {
-	return RC_FAILED;
+    int d=searchOptionByEnum(option);
+    ADM_assert(d!=-1);
+    const optionDesc *o=myOptions+d;
+    // Get full name
+    d=searchDescByName(o->name2);
+    ADM_assert(d!=-1);
+    const ADM_paramList *dsc=my_prefs_struct_param+d;
+
+    *tpl=o;
+    *desc=dsc;
+    return true;
 }
 
-int preferences::get(options option, unsigned int *val)
+/**
+    \fn get
+*/
+bool preferences::get(options option, uint32_t *v)
 {
-	return RC_FAILED; // wrong input for conversion or EOF
+  const ADM_paramList *desc;
+  const optionDesc *tpl;
+
+    lookupOption(option,&desc,&tpl);
+
+    ADM_assert(desc->type==ADM_param_uint32_t);
+    int offset=desc->offset;
+    char *dummy=(char *)&myPrefs;
+    *v=*(uint32_t *)(dummy+offset);
+    return true;
+    
 }
-
-int preferences::get(options option,          int *val)
+/**
+    \fn get
+*/
+bool preferences::get(options option, float *v)
 {
+ const ADM_paramList *desc;
+  const optionDesc *tpl;
 
-	return RC_FAILED; // wrong input for conversion or EOF
+    lookupOption(option,&desc,&tpl);
+
+    ADM_assert(desc->type==ADM_param_float);
+    int offset=desc->offset;
+    char *dummy=(char *)&myPrefs;
+    *v=*(float *)(dummy+offset);
+    return true;
 }
-
-int preferences::get(options option, unsigned long *val)
+/**
+    \fn get
+*/
+bool preferences::get(options option, bool *v)
 {
+  const ADM_paramList *desc;
+  const optionDesc *tpl;
 
-	return RC_FAILED; // wrong input for conversion or EOF
+    lookupOption(option,&desc,&tpl);
+
+    ADM_assert(desc->type==ADM_param_bool);
+    int offset=desc->offset;
+    char *dummy=(char *)&myPrefs;
+    *v=*(bool *)(dummy+offset);
+    return true;
 }
+/**
+    \fn get
+*/
+bool preferences::get(options option, char **v)
+{
 
-int preferences::get(options option, long *val)
-{
-	return RC_FAILED; // wrong input for conversion or EOF
 }
 
-int preferences::get(options option, float *val)
+
+/**
+    \fn set
+*/
+bool preferences::set(options option, const uint32_t v)
 {
-	return RC_FAILED; // wrong input for conversion or EOF
-}
 
-int preferences::get(options option, char **val)
-{
-	return RC_FAILED; // strdup() out of memory
 }
-
-int preferences::set(options option, const unsigned int val)
+/**
+    \fn set
+*/
+bool preferences::set(options option, const float v)
 {
-	return RC_OK;
-}
 
-int preferences::set(options option, const int val)
-{
-	return RC_OK;
 }
-
-int preferences::set(options option, const unsigned long val)
+/**
+    \fn set
+*/
+bool preferences::set(options option, const bool v)
 {
-	return RC_OK;
-}
 
-int preferences::set(options option, const long val)
-{
-	return RC_OK;
 }
-
-int preferences::set(options option, const float val)
+/**
+    \fn set
+*/
+bool preferences::set(options option, const char *v)
 {
-	return RC_OK;
-}
 
-int preferences::set(options option, const char * val)
-{
-	return RC_OK;
 }
 
+
 #define PRT_LAFI(x,y,z) fprintf(stderr,"Prefs: %s%u %s\n",x,y,(z?z:"NULL"))
 
 int preferences::set_lastfile(const char* file)

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/prefs2.conf
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/prefs2.conf	2011-04-30 19:19:31 UTC (rev 7171)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/prefs2.conf	2011-04-30 19:19:37 UTC (rev 7172)
@@ -15,15 +15,15 @@
 my_prefs_struct{
 features{
 bool:swap_if_A_greater_than_B,	       1,      0,      1
-bool:saveprefsonexit,		       1,	    0,	    1
-bool:ignoresavedmarkers,	       0,	    0,	    1
-uint32_t:use_odml,                     0,      0,      1
-uint32_t:use_systray,                  0,      0,      1
+bool:saveprefsonexit,		       1,      0,	    1
+bool:ignoresavedmarkers,	       0,      0,	    1
+bool:use_odml,                         0,      0,      1
+bool:use_systray,                      0,      0,      1
 bool:reuse_2pass_log,                  0,      0,      1
 bool:audiobar_uses_master,             0,      0,      1
 uint32_t:threading_lavc,               0,      0,      32
 uint32_t:cpu_caps,  	              4294967295,      0,      4294967295
-uint32_t:mpeg_no_limit,                0,      0,      1
+bool:mpeg_no_limit,                    0,      0,      1
 bool:alternate_mp3_tag,                1,      0,      1
 bool:vdpau,                            0,      0,      1
 }

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/prefs2.h
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/prefs2.h	2011-04-30 19:19:31 UTC (rev 7171)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/prefs2.h	2011-04-30 19:19:37 UTC (rev 7172)
@@ -6,13 +6,13 @@
 	bool swap_if_A_greater_than_B;
 	bool saveprefsonexit;
 	bool ignoresavedmarkers;
-	uint32_t use_odml;
-	uint32_t use_systray;
+	bool use_odml;
+	bool use_systray;
 	bool reuse_2pass_log;
 	bool audiobar_uses_master;
 	uint32_t threading_lavc;
 	uint32_t cpu_caps;
-	uint32_t mpeg_no_limit;
+	bool mpeg_no_limit;
 	bool alternate_mp3_tag;
 	bool vdpau;
 }features;

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/prefs2_desc.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/prefs2_desc.cpp	2011-04-30 19:19:31 UTC (rev 7171)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/prefs2_desc.cpp	2011-04-30 19:19:37 UTC (rev 7172)
@@ -3,13 +3,13 @@
  {"features.swap_if_A_greater_than_B",offsetof(my_prefs_struct,features.swap_if_A_greater_than_B),"bool",ADM_param_bool},
  {"features.saveprefsonexit",offsetof(my_prefs_struct,features.saveprefsonexit),"bool",ADM_param_bool},
  {"features.ignoresavedmarkers",offsetof(my_prefs_struct,features.ignoresavedmarkers),"bool",ADM_param_bool},
- {"features.use_odml",offsetof(my_prefs_struct,features.use_odml),"uint32_t",ADM_param_uint32_t},
- {"features.use_systray",offsetof(my_prefs_struct,features.use_systray),"uint32_t",ADM_param_uint32_t},
+ {"features.use_odml",offsetof(my_prefs_struct,features.use_odml),"bool",ADM_param_bool},
+ {"features.use_systray",offsetof(my_prefs_struct,features.use_systray),"bool",ADM_param_bool},
  {"features.reuse_2pass_log",offsetof(my_prefs_struct,features.reuse_2pass_log),"bool",ADM_param_bool},
  {"features.audiobar_uses_master",offsetof(my_prefs_struct,features.audiobar_uses_master),"bool",ADM_param_bool},
  {"features.threading_lavc",offsetof(my_prefs_struct,features.threading_lavc),"uint32_t",ADM_param_uint32_t},
  {"features.cpu_caps",offsetof(my_prefs_struct,features.cpu_caps),"uint32_t",ADM_param_uint32_t},
- {"features.mpeg_no_limit",offsetof(my_prefs_struct,features.mpeg_no_limit),"uint32_t",ADM_param_uint32_t},
+ {"features.mpeg_no_limit",offsetof(my_prefs_struct,features.mpeg_no_limit),"bool",ADM_param_bool},
  {"features.alternate_mp3_tag",offsetof(my_prefs_struct,features.alternate_mp3_tag),"bool",ADM_param_bool},
  {"features.vdpau",offsetof(my_prefs_struct,features.vdpau),"bool",ADM_param_bool},
  {"lastfiles.lastdir_read",offsetof(my_prefs_struct,lastfiles.lastdir_read),"char *",ADM_param_string},

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/prefs2_json.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/prefs2_json.cpp	2011-04-30 19:19:31 UTC (rev 7171)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/prefs2_json.cpp	2011-04-30 19:19:37 UTC (rev 7172)
@@ -9,13 +9,13 @@
 json.addBool("swap_if_A_greater_than_B",key->features.swap_if_A_greater_than_B);
 json.addBool("saveprefsonexit",key->features.saveprefsonexit);
 json.addBool("ignoresavedmarkers",key->features.ignoresavedmarkers);
-json.addUint32("use_odml",key->features.use_odml);
-json.addUint32("use_systray",key->features.use_systray);
+json.addBool("use_odml",key->features.use_odml);
+json.addBool("use_systray",key->features.use_systray);
 json.addBool("reuse_2pass_log",key->features.reuse_2pass_log);
 json.addBool("audiobar_uses_master",key->features.audiobar_uses_master);
 json.addUint32("threading_lavc",key->features.threading_lavc);
 json.addUint32("cpu_caps",key->features.cpu_caps);
-json.addUint32("mpeg_no_limit",key->features.mpeg_no_limit);
+json.addBool("mpeg_no_limit",key->features.mpeg_no_limit);
 json.addBool("alternate_mp3_tag",key->features.alternate_mp3_tag);
 json.addBool("vdpau",key->features.vdpau);
 json.endNode();

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/prefs2_pref.h
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/prefs2_pref.h	2011-04-30 19:19:31 UTC (rev 7171)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/prefs2_pref.h	2011-04-30 19:19:37 UTC (rev 7172)
@@ -14,13 +14,13 @@
 { FEATURES_SWAP_IF_A_GREATER_THAN_B,"features.swap_if_A_greater_than_B",	ADM_param_bool    	,"1",	"0",	"1",	NULL},
 { FEATURES_SAVEPREFSONEXIT,"features.saveprefsonexit",	ADM_param_bool    	,"1",	"0",	"1",	NULL},
 { FEATURES_IGNORESAVEDMARKERS,"features.ignoresavedmarkers",	ADM_param_bool    	,"0",	"0",	"1",	NULL},
-{ FEATURES_USE_ODML,"features.use_odml",	ADM_param_uint32_t	,"0",	"0",	"1",	NULL},
-{ FEATURES_USE_SYSTRAY,"features.use_systray",	ADM_param_uint32_t	,"0",	"0",	"1",	NULL},
+{ FEATURES_USE_ODML,"features.use_odml",	ADM_param_bool    	,"0",	"0",	"1",	NULL},
+{ FEATURES_USE_SYSTRAY,"features.use_systray",	ADM_param_bool    	,"0",	"0",	"1",	NULL},
 { FEATURES_REUSE_2PASS_LOG,"features.reuse_2pass_log",	ADM_param_bool    	,"0",	"0",	"1",	NULL},
 { FEATURES_AUDIOBAR_USES_MASTER,"features.audiobar_uses_master",	ADM_param_bool    	,"0",	"0",	"1",	NULL},
 { FEATURES_THREADING_LAVC,"features.threading_lavc",	ADM_param_uint32_t	,"0",	"0",	"32",	NULL},
 { FEATURES_CPU_CAPS,"features.cpu_caps",	ADM_param_uint32_t	,"4294967295",	"0",	"4294967295",	NULL},
-{ FEATURES_MPEG_NO_LIMIT,"features.mpeg_no_limit",	ADM_param_uint32_t	,"0",	"0",	"1",	NULL},
+{ FEATURES_MPEG_NO_LIMIT,"features.mpeg_no_limit",	ADM_param_bool    	,"0",	"0",	"1",	NULL},
 { FEATURES_ALTERNATE_MP3_TAG,"features.alternate_mp3_tag",	ADM_param_bool    	,"1",	"0",	"1",	NULL},
 { FEATURES_VDPAU,"features.vdpau",	ADM_param_bool    	,"0",	"0",	"1",	NULL},
 { LASTFILES_LASTDIR_READ,"lastfiles.lastdir_read",	ADM_param_string  	,"",	NULL,	NULL,	NULL},

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreVideoCodec/src/ADM_ffmp43.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreVideoCodec/src/ADM_ffmp43.cpp	2011-04-30 19:19:31 UTC (rev 7171)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreVideoCodec/src/ADM_ffmp43.cpp	2011-04-30 19:19:37 UTC (rev 7172)
@@ -50,7 +50,7 @@
 
 
 //****************************
-extern uint8_t DIA_lavDecoder (uint32_t * swapUv, uint32_t * showU);
+extern uint8_t DIA_lavDecoder (bool  * swapUv, bool * showU);
 extern "C"
 {
   int av_is_voppacked (AVCodecContext * avctx, int *vop_packed, int *gmc,
@@ -145,7 +145,12 @@
 //________________________________________________
 bool  decoderFF::setParam (void)
 {
-  DIA_lavDecoder (&_swapUV, &_showMv);
+    bool buv=_swapUV;
+    bool bmv=_showMv;
+    DIA_lavDecoder (&buv, &bmv);
+    _swapUV=buv;
+    _showMv=bmv;
+    
   return true;			// no param for ffmpeg
 }
 

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreVideoCodec/src/DIA_lavDecoder.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreVideoCodec/src/DIA_lavDecoder.cpp	2011-04-30 19:19:31 UTC (rev 7171)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreVideoCodec/src/DIA_lavDecoder.cpp	2011-04-30 19:19:37 UTC (rev 7172)
@@ -19,7 +19,7 @@
       \fn DIA_lavDecoder
       \brief Dialog for lavcodec *DECODER* option
 */
-uint8_t DIA_lavDecoder(uint32_t *swapUv, uint32_t *showU)
+uint8_t DIA_lavDecoder(bool  *swapUv, bool *showU)
 {
 int ret=0;	
          



From mean at mail.berlios.de  Sat Apr 30 21:19:39 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Sat, 30 Apr 2011 21:19:39 +0200
Subject: [Avidemux-svn-commit] r7173 -
	branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src
Message-ID: <20110430191939.AA06F48137F@sheep.berlios.de>

Author: mean
Date: 2011-04-30 21:19:39 +0200 (Sat, 30 Apr 2011)
New Revision: 7173

Modified:
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/pref_gen.py
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/prefs.cpp
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/prefs2_pref.h
Log:
[pref] Finish hooking new prefs

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/pref_gen.py
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/pref_gen.py	2011-04-30 19:19:37 UTC (rev 7172)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/pref_gen.py	2011-04-30 19:19:39 UTC (rev 7173)
@@ -71,11 +71,11 @@
         if(varType!="string" and varType!="filename"):
             print ("Error "+str(varName)+" has not the good number of parameters,type="+str(varType))
             raise
-        min=r"NULL"
-        max=r'NULL'
+        min=r"0"
+        max=r'0'
     elif(nbParam==4):
-        min="\""+str(params[2])+str("\"")
-        max="\""+str(params[3])+str("\"")
+        min=str(params[2])
+        max=str(params[3])
     if(not varType in allATypes):
         print("json:Unknown var type <"+str(varType)+str(">"))
         exit(1)
@@ -88,13 +88,15 @@
     else:
         fullName2=fullPath2+"."+varName
     out= "{ "+str(fullName.upper())+str(",\"")+str(fullName2)+str("\"")
-    if(len(out)<15):
-        out=out+"\t"
-    if(len(out)<23):
-        out=out+"\t"
-    out=out+",\t"+str(allATypes[varType])
+    l=len(out)
+    mx=70
+    if(l>mx):
+        pass
+    else:
+        out=out+(mx-l)*" "
+    out=out+","+str(allATypes[varType])
     out=out+"\t,"+str(default)+",\t"+str(min)+",\t"+str(max)
-    out=out+",\tNULL},"
+    out=out+"},"
     outputJson(out)
     outputList(fullName.upper()+", \t//"+str(varType))
 ###################################################################################################################################

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/prefs.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/prefs.cpp	2011-04-30 19:19:37 UTC (rev 7172)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/prefs.cpp	2011-04-30 19:19:39 UTC (rev 7173)
@@ -52,9 +52,8 @@
    const char *name2;
    ADM_paramType  type;
    const char *defaultValue;
-   const char *min;
-   const char *max;
-   char *Value;
+   float    min;
+   float    max;
 }optionDesc;
 
 #include "prefs2_pref.h"
@@ -233,7 +232,7 @@
 
 
 
-static bool lookupOption(options option, const ADM_paramList **desc, const optionDesc **tpl)
+static bool lookupOption(options option, const ADM_paramList **desc, const optionDesc **tpl, float &Min,float &Max)
 {
     int d=searchOptionByEnum(option);
     ADM_assert(d!=-1);
@@ -245,6 +244,10 @@
 
     *tpl=o;
     *desc=dsc;
+
+    Min=o->min;
+    Max=o->max;
+    
     return true;
 }
 
@@ -255,8 +258,9 @@
 {
   const ADM_paramList *desc;
   const optionDesc *tpl;
+  float m,n;
 
-    lookupOption(option,&desc,&tpl);
+    lookupOption(option,&desc,&tpl,m,n);
 
     ADM_assert(desc->type==ADM_param_uint32_t);
     int offset=desc->offset;
@@ -270,10 +274,11 @@
 */
 bool preferences::get(options option, float *v)
 {
- const ADM_paramList *desc;
+  const ADM_paramList *desc;
   const optionDesc *tpl;
+  float m,n;
 
-    lookupOption(option,&desc,&tpl);
+    lookupOption(option,&desc,&tpl,m,n);
 
     ADM_assert(desc->type==ADM_param_float);
     int offset=desc->offset;
@@ -288,8 +293,9 @@
 {
   const ADM_paramList *desc;
   const optionDesc *tpl;
+  float m,n;
 
-    lookupOption(option,&desc,&tpl);
+    lookupOption(option,&desc,&tpl,m,n);
 
     ADM_assert(desc->type==ADM_param_bool);
     int offset=desc->offset;
@@ -302,37 +308,110 @@
 */
 bool preferences::get(options option, char **v)
 {
+  const ADM_paramList *desc;
+  const optionDesc *tpl;
+  float m,n;
 
+    lookupOption(option,&desc,&tpl,n,m);
+
+    ADM_assert(desc->type==ADM_param_string);
+    int offset=desc->offset;
+    char *dummy=(char *)&myPrefs;
+    const char *st=*(char **)(dummy+offset);
+    *v=ADM_strdup(st);
+    return true;
+
 }
+//---------------------------------------
 
-
 /**
     \fn set
 */
 bool preferences::set(options option, const uint32_t v)
 {
+    const ADM_paramList *desc;
+    const optionDesc *tpl;
+    float m,n;
 
+    lookupOption(option,&desc,&tpl,n,m);
+
+    ADM_assert(desc->type==ADM_param_uint32_t);
+    
+    if(v<n || v>m)
+    {
+        ADM_error("Parameter  %s value %d not in range (%f -- %f )!\n",tpl->name2,v,tpl->min,tpl->max);
+        return false;
+    }
+    int offset=desc->offset;
+    char *dummy=(char *)&myPrefs;
+    *(uint32_t *)(dummy+offset)=v;
+    return true;
 }
 /**
     \fn set
 */
 bool preferences::set(options option, const float v)
 {
+    const ADM_paramList *desc;
+    const optionDesc *tpl;
+    float m,n;
 
+    lookupOption(option,&desc,&tpl,n,m);
+
+    ADM_assert(desc->type==ADM_param_float);
+    
+    if(v<n || v>m)
+    {
+        ADM_error("Parameter  %s value %f not in range (%f -- %f )!\n",tpl->name2,v,tpl->min,tpl->max);
+        return false;
+    }
+    int offset=desc->offset;
+    char *dummy=(char *)&myPrefs;
+    *(float *)(dummy+offset)=v;
+    return true;
 }
 /**
     \fn set
 */
 bool preferences::set(options option, const bool v)
 {
+    const ADM_paramList *desc;
+    const optionDesc *tpl;
+    float m,n;
 
+    lookupOption(option,&desc,&tpl,n,m);
+
+    ADM_assert(desc->type==ADM_param_bool);
+    
+    if(v<n || v>m)
+    {
+        ADM_error("Parameter  %d value %f not in range (%f -- %f )!\n",tpl->name2,v,tpl->min,tpl->max);
+        return false;
+    }
+    int offset=desc->offset;
+    char *dummy=(char *)&myPrefs;
+    *(bool *)(dummy+offset)=v;
+    return true;
 }
 /**
     \fn set
 */
 bool preferences::set(options option, const char *v)
 {
+    const ADM_paramList *desc;
+    const optionDesc *tpl;
+    float m,n;
 
+    lookupOption(option,&desc,&tpl,n,m);
+
+    ADM_assert(desc->type==ADM_param_string);
+    
+    int offset=desc->offset;
+    char *dummy=(char *)&myPrefs;
+    char **s=(char **)(dummy+offset);
+    if(*s) ADM_dealloc(*s);
+    *s=ADM_strdup(v);
+    return true;
 }
 
 

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/prefs2_pref.h
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/prefs2_pref.h	2011-04-30 19:19:37 UTC (rev 7172)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/prefs2_pref.h	2011-04-30 19:19:39 UTC (rev 7173)
@@ -11,34 +11,34 @@
 }optionDesc;
 #endif 
 static optionDesc myOptions[]={
-{ FEATURES_SWAP_IF_A_GREATER_THAN_B,"features.swap_if_A_greater_than_B",	ADM_param_bool    	,"1",	"0",	"1",	NULL},
-{ FEATURES_SAVEPREFSONEXIT,"features.saveprefsonexit",	ADM_param_bool    	,"1",	"0",	"1",	NULL},
-{ FEATURES_IGNORESAVEDMARKERS,"features.ignoresavedmarkers",	ADM_param_bool    	,"0",	"0",	"1",	NULL},
-{ FEATURES_USE_ODML,"features.use_odml",	ADM_param_bool    	,"0",	"0",	"1",	NULL},
-{ FEATURES_USE_SYSTRAY,"features.use_systray",	ADM_param_bool    	,"0",	"0",	"1",	NULL},
-{ FEATURES_REUSE_2PASS_LOG,"features.reuse_2pass_log",	ADM_param_bool    	,"0",	"0",	"1",	NULL},
-{ FEATURES_AUDIOBAR_USES_MASTER,"features.audiobar_uses_master",	ADM_param_bool    	,"0",	"0",	"1",	NULL},
-{ FEATURES_THREADING_LAVC,"features.threading_lavc",	ADM_param_uint32_t	,"0",	"0",	"32",	NULL},
-{ FEATURES_CPU_CAPS,"features.cpu_caps",	ADM_param_uint32_t	,"4294967295",	"0",	"4294967295",	NULL},
-{ FEATURES_MPEG_NO_LIMIT,"features.mpeg_no_limit",	ADM_param_bool    	,"0",	"0",	"1",	NULL},
-{ FEATURES_ALTERNATE_MP3_TAG,"features.alternate_mp3_tag",	ADM_param_bool    	,"1",	"0",	"1",	NULL},
-{ FEATURES_VDPAU,"features.vdpau",	ADM_param_bool    	,"0",	"0",	"1",	NULL},
-{ LASTFILES_LASTDIR_READ,"lastfiles.lastdir_read",	ADM_param_string  	,"",	NULL,	NULL,	NULL},
-{ LASTFILES_LASTDIR_WRITE,"lastfiles.lastdir_write",	ADM_param_string  	,"",	NULL,	NULL,	NULL},
-{ LASTFILES_FILE1,"lastfiles.file1",	ADM_param_string  	,"",	NULL,	NULL,	NULL},
-{ LASTFILES_FILE2,"lastfiles.file2",	ADM_param_string  	,"",	NULL,	NULL,	NULL},
-{ LASTFILES_FILE3,"lastfiles.file3",	ADM_param_string  	,"",	NULL,	NULL,	NULL},
-{ LASTFILES_FILE4,"lastfiles.file4",	ADM_param_string  	,"",	NULL,	NULL,	NULL},
-{ MESSAGE_LEVEL,"message_level",	ADM_param_uint32_t	,"2",	"0",	"2",	NULL},
-{ AUDIO_DEVICE_AUDIODEVICE,"audio_device.audiodevice",	ADM_param_string  	,"ALSA",	NULL,	NULL,	NULL},
-{ AUDIO_DEVICE_ALSA_DEVICE,"audio_device.alsa_device",	ADM_param_string  	,"dmix",	NULL,	NULL,	NULL},
-{ VIDEODEVICE,"videodevice",	ADM_param_uint32_t	,"0",	"0",	"10",	NULL},
-{ PRIORITY_ENCODING,"priority.encoding",	ADM_param_uint32_t	,"3",	"0",	"4",	NULL},
-{ PRIORITY_INDEXING,"priority.indexing",	ADM_param_uint32_t	,"3",	"0",	"4",	NULL},
-{ PRIORITY_PLAYBACK,"priority.playback",	ADM_param_uint32_t	,"0",	"0",	"4",	NULL},
-{ DEFAULT_POSTPROC_TYPE,"Default.postproc_type",	ADM_param_uint32_t	,"3",	"0",	"7",	NULL},
-{ DEFAULT_POSTPROC_VALUE,"Default.postproc_value",	ADM_param_uint32_t	,"3",	"0",	"5",	NULL},
-{ DEFAULT_DOWNMIXING,"Default.downmixing",	ADM_param_uint32_t	,"2",	"0",	"2",	NULL},
-{ MPEGSPLIT_AUTOSPLIT,"mpegsplit_autosplit",	ADM_param_uint32_t	,"790",	"400",	"5000",	NULL},
+{ FEATURES_SWAP_IF_A_GREATER_THAN_B,"features.swap_if_A_greater_than_B",ADM_param_bool    	,"1",	0,	1},
+{ FEATURES_SAVEPREFSONEXIT,"features.saveprefsonexit"                 ,ADM_param_bool    	,"1",	0,	1},
+{ FEATURES_IGNORESAVEDMARKERS,"features.ignoresavedmarkers"           ,ADM_param_bool    	,"0",	0,	1},
+{ FEATURES_USE_ODML,"features.use_odml"                               ,ADM_param_bool    	,"0",	0,	1},
+{ FEATURES_USE_SYSTRAY,"features.use_systray"                         ,ADM_param_bool    	,"0",	0,	1},
+{ FEATURES_REUSE_2PASS_LOG,"features.reuse_2pass_log"                 ,ADM_param_bool    	,"0",	0,	1},
+{ FEATURES_AUDIOBAR_USES_MASTER,"features.audiobar_uses_master"       ,ADM_param_bool    	,"0",	0,	1},
+{ FEATURES_THREADING_LAVC,"features.threading_lavc"                   ,ADM_param_uint32_t	,"0",	0,	32},
+{ FEATURES_CPU_CAPS,"features.cpu_caps"                               ,ADM_param_uint32_t	,"4294967295",	0,	4294967295},
+{ FEATURES_MPEG_NO_LIMIT,"features.mpeg_no_limit"                     ,ADM_param_bool    	,"0",	0,	1},
+{ FEATURES_ALTERNATE_MP3_TAG,"features.alternate_mp3_tag"             ,ADM_param_bool    	,"1",	0,	1},
+{ FEATURES_VDPAU,"features.vdpau"                                     ,ADM_param_bool    	,"0",	0,	1},
+{ LASTFILES_LASTDIR_READ,"lastfiles.lastdir_read"                     ,ADM_param_string  	,"",	0,	0},
+{ LASTFILES_LASTDIR_WRITE,"lastfiles.lastdir_write"                   ,ADM_param_string  	,"",	0,	0},
+{ LASTFILES_FILE1,"lastfiles.file1"                                   ,ADM_param_string  	,"",	0,	0},
+{ LASTFILES_FILE2,"lastfiles.file2"                                   ,ADM_param_string  	,"",	0,	0},
+{ LASTFILES_FILE3,"lastfiles.file3"                                   ,ADM_param_string  	,"",	0,	0},
+{ LASTFILES_FILE4,"lastfiles.file4"                                   ,ADM_param_string  	,"",	0,	0},
+{ MESSAGE_LEVEL,"message_level"                                       ,ADM_param_uint32_t	,"2",	0,	2},
+{ AUDIO_DEVICE_AUDIODEVICE,"audio_device.audiodevice"                 ,ADM_param_string  	,"ALSA",	0,	0},
+{ AUDIO_DEVICE_ALSA_DEVICE,"audio_device.alsa_device"                 ,ADM_param_string  	,"dmix",	0,	0},
+{ VIDEODEVICE,"videodevice"                                           ,ADM_param_uint32_t	,"0",	0,	10},
+{ PRIORITY_ENCODING,"priority.encoding"                               ,ADM_param_uint32_t	,"3",	0,	4},
+{ PRIORITY_INDEXING,"priority.indexing"                               ,ADM_param_uint32_t	,"3",	0,	4},
+{ PRIORITY_PLAYBACK,"priority.playback"                               ,ADM_param_uint32_t	,"0",	0,	4},
+{ DEFAULT_POSTPROC_TYPE,"Default.postproc_type"                       ,ADM_param_uint32_t	,"3",	0,	7},
+{ DEFAULT_POSTPROC_VALUE,"Default.postproc_value"                     ,ADM_param_uint32_t	,"3",	0,	5},
+{ DEFAULT_DOWNMIXING,"Default.downmixing"                             ,ADM_param_uint32_t	,"2",	0,	2},
+{ MPEGSPLIT_AUTOSPLIT,"mpegsplit_autosplit"                           ,ADM_param_uint32_t	,"790",	400,	5000},
 };
 



From mean at mail.berlios.de  Sat Apr 30 21:19:40 2011
From: mean at mail.berlios.de (mean at mail.berlios.de)
Date: Sat, 30 Apr 2011 21:19:40 +0200
Subject: [Avidemux-svn-commit] r7174 - in
	branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils:
	include src
Message-ID: <20110430191940.F2AE348137F@sheep.berlios.de>

Author: mean
Date: 2011-04-30 21:19:40 +0200 (Sat, 30 Apr 2011)
New Revision: 7174

Modified:
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/include/prefs.h
   branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/prefs.cpp
Log:
[prefs] Manage last files

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/include/prefs.h
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/include/prefs.h	2011-04-30 19:19:39 UTC (rev 7173)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/include/prefs.h	2011-04-30 19:19:40 UTC (rev 7174)
@@ -5,6 +5,7 @@
 
 #define RC_OK     true
 #define RC_FAILED false
+#define NB_LAST_FILES 4
 
 // <prefs_gen>
 typedef enum {
@@ -15,10 +16,10 @@
 
 class preferences {
 	private:
-		char *internal_lastfiles[5];
-		const char * get_str_min(options option);
-		const char * get_str_max(options option);
 
+//		const char * get_str_min(options option);
+//		const char * get_str_max(options option);
+
 	public:
 		preferences();
 		~preferences();
@@ -38,7 +39,7 @@
 		bool set(options option, const bool     val);
 		
 
-		int set_lastfile(const char* file);
+		bool  set_lastfile(const char* file);
 		const char **get_lastfiles(void);
 };
 

Modified: branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/prefs.cpp
===================================================================
--- branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/prefs.cpp	2011-04-30 19:19:39 UTC (rev 7173)
+++ branches/avidemux_2.6_branch_mean/avidemux_core/ADM_coreUtils/src/prefs.cpp	2011-04-30 19:19:40 UTC (rev 7174)
@@ -2,10 +2,9 @@
    
     \file  prefs.cpp
     \brief 
-    copyright            : (C) 2001 by mean
+    copyright            : (C) 2001/2011 by mean
     email                : fixounet at free.fr
  ***************************************************************************/
-
 /***************************************************************************
  *                                                                         *
  *   This program is free software; you can redistribute it and/or modify  *
@@ -16,16 +15,6 @@
  ***************************************************************************/
 
 
-/***************************************************************************
- *                                                                         *
- *   This program is free software; you can redistribute it and/or modify  *
- *   it under the terms of the GNU General Public License as published by  *
- *   the Free Software Foundation; either version 2 of the License, or     *
- *   (at your option) any later version.                                   *
- *                                                                         *
- ***************************************************************************/
-
-
 #include "ADM_cpp.h"
 #include "ADM_default.h"
 #include "ADM_quota.h"
@@ -106,9 +95,7 @@
 */
 preferences::preferences()
 {
-	internal_lastfiles[0] = internal_lastfiles[1] = NULL;
-	internal_lastfiles[2] = internal_lastfiles[3] = NULL;
-	internal_lastfiles[4] = NULL;
+
     // set default...
     int nb=sizeof( my_prefs_struct_param)/sizeof(ADM_paramList);
     for(int i=0;i<nb-1;i++) //
@@ -153,19 +140,13 @@
     
     }
 }
-
-preferences::~preferences(){
-  unsigned int idx;
-	for( idx=0; idx < 4; idx++ ){
-		if( internal_lastfiles[idx] )
-			ADM_dealloc(internal_lastfiles[idx]);
-	}
-	
-	
+/**
+    \fn dtor
+*/  
+preferences::~preferences()
+{
 }
 
-
-
 /**
     \fn load
     \brief load prefs from file.. Should be called only once
@@ -218,7 +199,7 @@
     path=path+std::string(CONFIG);
     string tmp=path;
     tmp=tmp+string(".tmp");
-    ADM_error("Saving prefs to %s\n",tmp.c_str());
+    ADM_info("Saving prefs to %s\n",tmp.c_str());
 
    if(true==my_prefs_struct_jserialize(tmp.c_str(),&myPrefs))
     {
@@ -230,7 +211,9 @@
     return RC_FAILED;
 }
 
+/**
 
+*/
 
 static bool lookupOption(options option, const ADM_paramList **desc, const optionDesc **tpl, float &Min,float &Max)
 {
@@ -414,11 +397,26 @@
     return true;
 }
 
-
+//--------------------------------------------------
 #define PRT_LAFI(x,y,z) fprintf(stderr,"Prefs: %s%u %s\n",x,y,(z?z:"NULL"))
 
-int preferences::set_lastfile(const char* file)
+bool preferences::set_lastfile(const char* file)
 {
+    int idx=-1;
+    char *lastFiles[NB_LAST_FILES];
+    lastFiles[0]=myPrefs.lastfiles.file1;
+    lastFiles[1]=myPrefs.lastfiles.file2;
+    lastFiles[2]=myPrefs.lastfiles.file3;
+    lastFiles[3]=myPrefs.lastfiles.file4;
+    for(int i=0;i<NB_LAST_FILES;i++)
+        if(!strcmp(lastFiles[i],file))
+            return true;
+    // 3 goes out, everybody shifts...
+    ADM_dealloc(lastFiles[3]);
+    myPrefs.lastfiles.file1=ADM_strdup(file);
+    myPrefs.lastfiles.file2=lastFiles[0];
+    myPrefs.lastfiles.file3=lastFiles[1];;
+    myPrefs.lastfiles.file4=lastFiles[2];;
 
 	return RC_OK;
 }
@@ -428,8 +426,13 @@
 
 const char **preferences::get_lastfiles(void)
 {
-
-	return (const char**)internal_lastfiles;
+    static const char *lastFiles[NB_LAST_FILES];
+    
+    lastFiles[0]=myPrefs.lastfiles.file1;
+    lastFiles[1]=myPrefs.lastfiles.file2;
+    lastFiles[2]=myPrefs.lastfiles.file3;
+    lastFiles[3]=myPrefs.lastfiles.file4;
+	return lastFiles;
 }
 
 // EOF



